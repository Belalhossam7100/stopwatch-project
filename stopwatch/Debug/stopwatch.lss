
stopwatch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002342  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000010a  00800060  00002342  000023d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  0080016a  0080016a  000024e0  2**0
                  ALLOC
  3 .stab         000011b8  00000000  00000000  000024e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000891  00000000  00000000  00003698  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00003f29  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001f0  00000000  00000000  000040c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000240c  00000000  00000000  000042b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001377  00000000  00000000  000066c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000011d8  00000000  00000000  00007a3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001c0  00000000  00000000  00008c14  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002f3  00000000  00000000  00008dd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000009ce  00000000  00000000  000090c7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00009a95  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 fc 06 	jmp	0xdf8	; 0xdf8 <__vector_1>
       8:	0c 94 c3 07 	jmp	0xf86	; 0xf86 <__vector_2>
       c:	0c 94 82 08 	jmp	0x1104	; 0x1104 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 32 09 	jmp	0x1264	; 0x1264 <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e4       	ldi	r30, 0x42	; 66
      68:	f3 e2       	ldi	r31, 0x23	; 35
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 36       	cpi	r26, 0x6A	; 106
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	aa e6       	ldi	r26, 0x6A	; 106
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a4 37       	cpi	r26, 0x74	; 116
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 e6 10 	call	0x21cc	; 0x21cc <main>
      8a:	0c 94 9f 11 	jmp	0x233e	; 0x233e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 b3 04 	call	0x966	; 0x966 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 b3 04 	call	0x966	; 0x966 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 68 11 	jmp	0x22d0	; 0x22d0 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 84 11 	jmp	0x2308	; 0x2308 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 74 11 	jmp	0x22e8	; 0x22e8 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 2b 06 	call	0xc56	; 0xc56 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 2b 06 	call	0xc56	; 0xc56 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 56 05 	call	0xaac	; 0xaac <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 90 11 	jmp	0x2320	; 0x2320 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 74 11 	jmp	0x22e8	; 0x22e8 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 2b 06 	call	0xc56	; 0xc56 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 2b 06 	call	0xc56	; 0xc56 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 56 05 	call	0xaac	; 0xaac <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 90 11 	jmp	0x2320	; 0x2320 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 68 11 	jmp	0x22d0	; 0x22d0 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 2b 06 	call	0xc56	; 0xc56 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 2b 06 	call	0xc56	; 0xc56 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 56 05 	call	0xaac	; 0xaac <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 84 11 	jmp	0x2308	; 0x2308 <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 70 11 	jmp	0x22e0	; 0x22e0 <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 2b 06 	call	0xc56	; 0xc56 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 2b 06 	call	0xc56	; 0xc56 <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	60 e6       	ldi	r22, 0x60	; 96
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 56 05 	call	0xaac	; 0xaac <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 8c 11 	jmp	0x2318	; 0x2318 <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 74 11 	jmp	0x22e8	; 0x22e8 <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 2b 06 	call	0xc56	; 0xc56 <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 2b 06 	call	0xc56	; 0xc56 <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 a3 06 	call	0xd46	; 0xd46 <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 90 11 	jmp	0x2320	; 0x2320 <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 74 11 	jmp	0x22e8	; 0x22e8 <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 2b 06 	call	0xc56	; 0xc56 <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 2b 06 	call	0xc56	; 0xc56 <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 a3 06 	call	0xd46	; 0xd46 <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 90 11 	jmp	0x2320	; 0x2320 <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 74 11 	jmp	0x22e8	; 0x22e8 <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 2b 06 	call	0xc56	; 0xc56 <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 2b 06 	call	0xc56	; 0xc56 <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__stack+0x41>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__stack+0x41>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 a3 06 	call	0xd46	; 0xd46 <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 90 11 	jmp	0x2320	; 0x2320 <__epilogue_restores__+0x18>

000008aa <__floatsisf>:
     8aa:	a8 e0       	ldi	r26, 0x08	; 8
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 71 11 	jmp	0x22e2	; 0x22e2 <__prologue_saves__+0x12>
     8b6:	9b 01       	movw	r18, r22
     8b8:	ac 01       	movw	r20, r24
     8ba:	83 e0       	ldi	r24, 0x03	; 3
     8bc:	89 83       	std	Y+1, r24	; 0x01
     8be:	da 01       	movw	r26, r20
     8c0:	c9 01       	movw	r24, r18
     8c2:	88 27       	eor	r24, r24
     8c4:	b7 fd       	sbrc	r27, 7
     8c6:	83 95       	inc	r24
     8c8:	99 27       	eor	r25, r25
     8ca:	aa 27       	eor	r26, r26
     8cc:	bb 27       	eor	r27, r27
     8ce:	b8 2e       	mov	r11, r24
     8d0:	21 15       	cp	r18, r1
     8d2:	31 05       	cpc	r19, r1
     8d4:	41 05       	cpc	r20, r1
     8d6:	51 05       	cpc	r21, r1
     8d8:	19 f4       	brne	.+6      	; 0x8e0 <__floatsisf+0x36>
     8da:	82 e0       	ldi	r24, 0x02	; 2
     8dc:	89 83       	std	Y+1, r24	; 0x01
     8de:	3a c0       	rjmp	.+116    	; 0x954 <__floatsisf+0xaa>
     8e0:	88 23       	and	r24, r24
     8e2:	a9 f0       	breq	.+42     	; 0x90e <__floatsisf+0x64>
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	80 e0       	ldi	r24, 0x00	; 0
     8e8:	38 07       	cpc	r19, r24
     8ea:	80 e0       	ldi	r24, 0x00	; 0
     8ec:	48 07       	cpc	r20, r24
     8ee:	80 e8       	ldi	r24, 0x80	; 128
     8f0:	58 07       	cpc	r21, r24
     8f2:	29 f4       	brne	.+10     	; 0x8fe <__floatsisf+0x54>
     8f4:	60 e0       	ldi	r22, 0x00	; 0
     8f6:	70 e0       	ldi	r23, 0x00	; 0
     8f8:	80 e0       	ldi	r24, 0x00	; 0
     8fa:	9f ec       	ldi	r25, 0xCF	; 207
     8fc:	30 c0       	rjmp	.+96     	; 0x95e <__floatsisf+0xb4>
     8fe:	ee 24       	eor	r14, r14
     900:	ff 24       	eor	r15, r15
     902:	87 01       	movw	r16, r14
     904:	e2 1a       	sub	r14, r18
     906:	f3 0a       	sbc	r15, r19
     908:	04 0b       	sbc	r16, r20
     90a:	15 0b       	sbc	r17, r21
     90c:	02 c0       	rjmp	.+4      	; 0x912 <__floatsisf+0x68>
     90e:	79 01       	movw	r14, r18
     910:	8a 01       	movw	r16, r20
     912:	8e e1       	ldi	r24, 0x1E	; 30
     914:	c8 2e       	mov	r12, r24
     916:	d1 2c       	mov	r13, r1
     918:	dc 82       	std	Y+4, r13	; 0x04
     91a:	cb 82       	std	Y+3, r12	; 0x03
     91c:	ed 82       	std	Y+5, r14	; 0x05
     91e:	fe 82       	std	Y+6, r15	; 0x06
     920:	0f 83       	std	Y+7, r16	; 0x07
     922:	18 87       	std	Y+8, r17	; 0x08
     924:	c8 01       	movw	r24, r16
     926:	b7 01       	movw	r22, r14
     928:	0e 94 07 05 	call	0xa0e	; 0xa0e <__clzsi2>
     92c:	01 97       	sbiw	r24, 0x01	; 1
     92e:	18 16       	cp	r1, r24
     930:	19 06       	cpc	r1, r25
     932:	84 f4       	brge	.+32     	; 0x954 <__floatsisf+0xaa>
     934:	08 2e       	mov	r0, r24
     936:	04 c0       	rjmp	.+8      	; 0x940 <__floatsisf+0x96>
     938:	ee 0c       	add	r14, r14
     93a:	ff 1c       	adc	r15, r15
     93c:	00 1f       	adc	r16, r16
     93e:	11 1f       	adc	r17, r17
     940:	0a 94       	dec	r0
     942:	d2 f7       	brpl	.-12     	; 0x938 <__floatsisf+0x8e>
     944:	ed 82       	std	Y+5, r14	; 0x05
     946:	fe 82       	std	Y+6, r15	; 0x06
     948:	0f 83       	std	Y+7, r16	; 0x07
     94a:	18 87       	std	Y+8, r17	; 0x08
     94c:	c8 1a       	sub	r12, r24
     94e:	d9 0a       	sbc	r13, r25
     950:	dc 82       	std	Y+4, r13	; 0x04
     952:	cb 82       	std	Y+3, r12	; 0x03
     954:	ba 82       	std	Y+2, r11	; 0x02
     956:	ce 01       	movw	r24, r28
     958:	01 96       	adiw	r24, 0x01	; 1
     95a:	0e 94 56 05 	call	0xaac	; 0xaac <__pack_f>
     95e:	28 96       	adiw	r28, 0x08	; 8
     960:	e9 e0       	ldi	r30, 0x09	; 9
     962:	0c 94 8d 11 	jmp	0x231a	; 0x231a <__epilogue_restores__+0x12>

00000966 <__fixsfsi>:
     966:	ac e0       	ldi	r26, 0x0C	; 12
     968:	b0 e0       	ldi	r27, 0x00	; 0
     96a:	e9 eb       	ldi	r30, 0xB9	; 185
     96c:	f4 e0       	ldi	r31, 0x04	; 4
     96e:	0c 94 78 11 	jmp	0x22f0	; 0x22f0 <__prologue_saves__+0x20>
     972:	69 83       	std	Y+1, r22	; 0x01
     974:	7a 83       	std	Y+2, r23	; 0x02
     976:	8b 83       	std	Y+3, r24	; 0x03
     978:	9c 83       	std	Y+4, r25	; 0x04
     97a:	ce 01       	movw	r24, r28
     97c:	01 96       	adiw	r24, 0x01	; 1
     97e:	be 01       	movw	r22, r28
     980:	6b 5f       	subi	r22, 0xFB	; 251
     982:	7f 4f       	sbci	r23, 0xFF	; 255
     984:	0e 94 2b 06 	call	0xc56	; 0xc56 <__unpack_f>
     988:	8d 81       	ldd	r24, Y+5	; 0x05
     98a:	82 30       	cpi	r24, 0x02	; 2
     98c:	61 f1       	breq	.+88     	; 0x9e6 <__fixsfsi+0x80>
     98e:	82 30       	cpi	r24, 0x02	; 2
     990:	50 f1       	brcs	.+84     	; 0x9e6 <__fixsfsi+0x80>
     992:	84 30       	cpi	r24, 0x04	; 4
     994:	21 f4       	brne	.+8      	; 0x99e <__fixsfsi+0x38>
     996:	8e 81       	ldd	r24, Y+6	; 0x06
     998:	88 23       	and	r24, r24
     99a:	51 f1       	breq	.+84     	; 0x9f0 <__fixsfsi+0x8a>
     99c:	2e c0       	rjmp	.+92     	; 0x9fa <__fixsfsi+0x94>
     99e:	2f 81       	ldd	r18, Y+7	; 0x07
     9a0:	38 85       	ldd	r19, Y+8	; 0x08
     9a2:	37 fd       	sbrc	r19, 7
     9a4:	20 c0       	rjmp	.+64     	; 0x9e6 <__fixsfsi+0x80>
     9a6:	6e 81       	ldd	r22, Y+6	; 0x06
     9a8:	2f 31       	cpi	r18, 0x1F	; 31
     9aa:	31 05       	cpc	r19, r1
     9ac:	1c f0       	brlt	.+6      	; 0x9b4 <__fixsfsi+0x4e>
     9ae:	66 23       	and	r22, r22
     9b0:	f9 f0       	breq	.+62     	; 0x9f0 <__fixsfsi+0x8a>
     9b2:	23 c0       	rjmp	.+70     	; 0x9fa <__fixsfsi+0x94>
     9b4:	8e e1       	ldi	r24, 0x1E	; 30
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	82 1b       	sub	r24, r18
     9ba:	93 0b       	sbc	r25, r19
     9bc:	29 85       	ldd	r18, Y+9	; 0x09
     9be:	3a 85       	ldd	r19, Y+10	; 0x0a
     9c0:	4b 85       	ldd	r20, Y+11	; 0x0b
     9c2:	5c 85       	ldd	r21, Y+12	; 0x0c
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <__fixsfsi+0x68>
     9c6:	56 95       	lsr	r21
     9c8:	47 95       	ror	r20
     9ca:	37 95       	ror	r19
     9cc:	27 95       	ror	r18
     9ce:	8a 95       	dec	r24
     9d0:	d2 f7       	brpl	.-12     	; 0x9c6 <__fixsfsi+0x60>
     9d2:	66 23       	and	r22, r22
     9d4:	b1 f0       	breq	.+44     	; 0xa02 <__fixsfsi+0x9c>
     9d6:	50 95       	com	r21
     9d8:	40 95       	com	r20
     9da:	30 95       	com	r19
     9dc:	21 95       	neg	r18
     9de:	3f 4f       	sbci	r19, 0xFF	; 255
     9e0:	4f 4f       	sbci	r20, 0xFF	; 255
     9e2:	5f 4f       	sbci	r21, 0xFF	; 255
     9e4:	0e c0       	rjmp	.+28     	; 0xa02 <__fixsfsi+0x9c>
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	40 e0       	ldi	r20, 0x00	; 0
     9ec:	50 e0       	ldi	r21, 0x00	; 0
     9ee:	09 c0       	rjmp	.+18     	; 0xa02 <__fixsfsi+0x9c>
     9f0:	2f ef       	ldi	r18, 0xFF	; 255
     9f2:	3f ef       	ldi	r19, 0xFF	; 255
     9f4:	4f ef       	ldi	r20, 0xFF	; 255
     9f6:	5f e7       	ldi	r21, 0x7F	; 127
     9f8:	04 c0       	rjmp	.+8      	; 0xa02 <__fixsfsi+0x9c>
     9fa:	20 e0       	ldi	r18, 0x00	; 0
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	40 e0       	ldi	r20, 0x00	; 0
     a00:	50 e8       	ldi	r21, 0x80	; 128
     a02:	b9 01       	movw	r22, r18
     a04:	ca 01       	movw	r24, r20
     a06:	2c 96       	adiw	r28, 0x0c	; 12
     a08:	e2 e0       	ldi	r30, 0x02	; 2
     a0a:	0c 94 94 11 	jmp	0x2328	; 0x2328 <__epilogue_restores__+0x20>

00000a0e <__clzsi2>:
     a0e:	ef 92       	push	r14
     a10:	ff 92       	push	r15
     a12:	0f 93       	push	r16
     a14:	1f 93       	push	r17
     a16:	7b 01       	movw	r14, r22
     a18:	8c 01       	movw	r16, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	e8 16       	cp	r14, r24
     a1e:	80 e0       	ldi	r24, 0x00	; 0
     a20:	f8 06       	cpc	r15, r24
     a22:	81 e0       	ldi	r24, 0x01	; 1
     a24:	08 07       	cpc	r16, r24
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	18 07       	cpc	r17, r24
     a2a:	88 f4       	brcc	.+34     	; 0xa4e <__clzsi2+0x40>
     a2c:	8f ef       	ldi	r24, 0xFF	; 255
     a2e:	e8 16       	cp	r14, r24
     a30:	f1 04       	cpc	r15, r1
     a32:	01 05       	cpc	r16, r1
     a34:	11 05       	cpc	r17, r1
     a36:	31 f0       	breq	.+12     	; 0xa44 <__clzsi2+0x36>
     a38:	28 f0       	brcs	.+10     	; 0xa44 <__clzsi2+0x36>
     a3a:	88 e0       	ldi	r24, 0x08	; 8
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	a0 e0       	ldi	r26, 0x00	; 0
     a40:	b0 e0       	ldi	r27, 0x00	; 0
     a42:	17 c0       	rjmp	.+46     	; 0xa72 <__clzsi2+0x64>
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	a0 e0       	ldi	r26, 0x00	; 0
     a4a:	b0 e0       	ldi	r27, 0x00	; 0
     a4c:	12 c0       	rjmp	.+36     	; 0xa72 <__clzsi2+0x64>
     a4e:	80 e0       	ldi	r24, 0x00	; 0
     a50:	e8 16       	cp	r14, r24
     a52:	80 e0       	ldi	r24, 0x00	; 0
     a54:	f8 06       	cpc	r15, r24
     a56:	80 e0       	ldi	r24, 0x00	; 0
     a58:	08 07       	cpc	r16, r24
     a5a:	81 e0       	ldi	r24, 0x01	; 1
     a5c:	18 07       	cpc	r17, r24
     a5e:	28 f0       	brcs	.+10     	; 0xa6a <__clzsi2+0x5c>
     a60:	88 e1       	ldi	r24, 0x18	; 24
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	a0 e0       	ldi	r26, 0x00	; 0
     a66:	b0 e0       	ldi	r27, 0x00	; 0
     a68:	04 c0       	rjmp	.+8      	; 0xa72 <__clzsi2+0x64>
     a6a:	80 e1       	ldi	r24, 0x10	; 16
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	a0 e0       	ldi	r26, 0x00	; 0
     a70:	b0 e0       	ldi	r27, 0x00	; 0
     a72:	20 e2       	ldi	r18, 0x20	; 32
     a74:	30 e0       	ldi	r19, 0x00	; 0
     a76:	40 e0       	ldi	r20, 0x00	; 0
     a78:	50 e0       	ldi	r21, 0x00	; 0
     a7a:	28 1b       	sub	r18, r24
     a7c:	39 0b       	sbc	r19, r25
     a7e:	4a 0b       	sbc	r20, r26
     a80:	5b 0b       	sbc	r21, r27
     a82:	04 c0       	rjmp	.+8      	; 0xa8c <__clzsi2+0x7e>
     a84:	16 95       	lsr	r17
     a86:	07 95       	ror	r16
     a88:	f7 94       	ror	r15
     a8a:	e7 94       	ror	r14
     a8c:	8a 95       	dec	r24
     a8e:	d2 f7       	brpl	.-12     	; 0xa84 <__clzsi2+0x76>
     a90:	f7 01       	movw	r30, r14
     a92:	e8 59       	subi	r30, 0x98	; 152
     a94:	ff 4f       	sbci	r31, 0xFF	; 255
     a96:	80 81       	ld	r24, Z
     a98:	28 1b       	sub	r18, r24
     a9a:	31 09       	sbc	r19, r1
     a9c:	41 09       	sbc	r20, r1
     a9e:	51 09       	sbc	r21, r1
     aa0:	c9 01       	movw	r24, r18
     aa2:	1f 91       	pop	r17
     aa4:	0f 91       	pop	r16
     aa6:	ff 90       	pop	r15
     aa8:	ef 90       	pop	r14
     aaa:	08 95       	ret

00000aac <__pack_f>:
     aac:	df 92       	push	r13
     aae:	ef 92       	push	r14
     ab0:	ff 92       	push	r15
     ab2:	0f 93       	push	r16
     ab4:	1f 93       	push	r17
     ab6:	fc 01       	movw	r30, r24
     ab8:	e4 80       	ldd	r14, Z+4	; 0x04
     aba:	f5 80       	ldd	r15, Z+5	; 0x05
     abc:	06 81       	ldd	r16, Z+6	; 0x06
     abe:	17 81       	ldd	r17, Z+7	; 0x07
     ac0:	d1 80       	ldd	r13, Z+1	; 0x01
     ac2:	80 81       	ld	r24, Z
     ac4:	82 30       	cpi	r24, 0x02	; 2
     ac6:	48 f4       	brcc	.+18     	; 0xada <__pack_f+0x2e>
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	a0 e1       	ldi	r26, 0x10	; 16
     ace:	b0 e0       	ldi	r27, 0x00	; 0
     ad0:	e8 2a       	or	r14, r24
     ad2:	f9 2a       	or	r15, r25
     ad4:	0a 2b       	or	r16, r26
     ad6:	1b 2b       	or	r17, r27
     ad8:	a5 c0       	rjmp	.+330    	; 0xc24 <__pack_f+0x178>
     ada:	84 30       	cpi	r24, 0x04	; 4
     adc:	09 f4       	brne	.+2      	; 0xae0 <__pack_f+0x34>
     ade:	9f c0       	rjmp	.+318    	; 0xc1e <__pack_f+0x172>
     ae0:	82 30       	cpi	r24, 0x02	; 2
     ae2:	21 f4       	brne	.+8      	; 0xaec <__pack_f+0x40>
     ae4:	ee 24       	eor	r14, r14
     ae6:	ff 24       	eor	r15, r15
     ae8:	87 01       	movw	r16, r14
     aea:	05 c0       	rjmp	.+10     	; 0xaf6 <__pack_f+0x4a>
     aec:	e1 14       	cp	r14, r1
     aee:	f1 04       	cpc	r15, r1
     af0:	01 05       	cpc	r16, r1
     af2:	11 05       	cpc	r17, r1
     af4:	19 f4       	brne	.+6      	; 0xafc <__pack_f+0x50>
     af6:	e0 e0       	ldi	r30, 0x00	; 0
     af8:	f0 e0       	ldi	r31, 0x00	; 0
     afa:	96 c0       	rjmp	.+300    	; 0xc28 <__pack_f+0x17c>
     afc:	62 81       	ldd	r22, Z+2	; 0x02
     afe:	73 81       	ldd	r23, Z+3	; 0x03
     b00:	9f ef       	ldi	r25, 0xFF	; 255
     b02:	62 38       	cpi	r22, 0x82	; 130
     b04:	79 07       	cpc	r23, r25
     b06:	0c f0       	brlt	.+2      	; 0xb0a <__pack_f+0x5e>
     b08:	5b c0       	rjmp	.+182    	; 0xbc0 <__pack_f+0x114>
     b0a:	22 e8       	ldi	r18, 0x82	; 130
     b0c:	3f ef       	ldi	r19, 0xFF	; 255
     b0e:	26 1b       	sub	r18, r22
     b10:	37 0b       	sbc	r19, r23
     b12:	2a 31       	cpi	r18, 0x1A	; 26
     b14:	31 05       	cpc	r19, r1
     b16:	2c f0       	brlt	.+10     	; 0xb22 <__pack_f+0x76>
     b18:	20 e0       	ldi	r18, 0x00	; 0
     b1a:	30 e0       	ldi	r19, 0x00	; 0
     b1c:	40 e0       	ldi	r20, 0x00	; 0
     b1e:	50 e0       	ldi	r21, 0x00	; 0
     b20:	2a c0       	rjmp	.+84     	; 0xb76 <__pack_f+0xca>
     b22:	b8 01       	movw	r22, r16
     b24:	a7 01       	movw	r20, r14
     b26:	02 2e       	mov	r0, r18
     b28:	04 c0       	rjmp	.+8      	; 0xb32 <__pack_f+0x86>
     b2a:	76 95       	lsr	r23
     b2c:	67 95       	ror	r22
     b2e:	57 95       	ror	r21
     b30:	47 95       	ror	r20
     b32:	0a 94       	dec	r0
     b34:	d2 f7       	brpl	.-12     	; 0xb2a <__pack_f+0x7e>
     b36:	81 e0       	ldi	r24, 0x01	; 1
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	a0 e0       	ldi	r26, 0x00	; 0
     b3c:	b0 e0       	ldi	r27, 0x00	; 0
     b3e:	04 c0       	rjmp	.+8      	; 0xb48 <__pack_f+0x9c>
     b40:	88 0f       	add	r24, r24
     b42:	99 1f       	adc	r25, r25
     b44:	aa 1f       	adc	r26, r26
     b46:	bb 1f       	adc	r27, r27
     b48:	2a 95       	dec	r18
     b4a:	d2 f7       	brpl	.-12     	; 0xb40 <__pack_f+0x94>
     b4c:	01 97       	sbiw	r24, 0x01	; 1
     b4e:	a1 09       	sbc	r26, r1
     b50:	b1 09       	sbc	r27, r1
     b52:	8e 21       	and	r24, r14
     b54:	9f 21       	and	r25, r15
     b56:	a0 23       	and	r26, r16
     b58:	b1 23       	and	r27, r17
     b5a:	00 97       	sbiw	r24, 0x00	; 0
     b5c:	a1 05       	cpc	r26, r1
     b5e:	b1 05       	cpc	r27, r1
     b60:	21 f0       	breq	.+8      	; 0xb6a <__pack_f+0xbe>
     b62:	81 e0       	ldi	r24, 0x01	; 1
     b64:	90 e0       	ldi	r25, 0x00	; 0
     b66:	a0 e0       	ldi	r26, 0x00	; 0
     b68:	b0 e0       	ldi	r27, 0x00	; 0
     b6a:	9a 01       	movw	r18, r20
     b6c:	ab 01       	movw	r20, r22
     b6e:	28 2b       	or	r18, r24
     b70:	39 2b       	or	r19, r25
     b72:	4a 2b       	or	r20, r26
     b74:	5b 2b       	or	r21, r27
     b76:	da 01       	movw	r26, r20
     b78:	c9 01       	movw	r24, r18
     b7a:	8f 77       	andi	r24, 0x7F	; 127
     b7c:	90 70       	andi	r25, 0x00	; 0
     b7e:	a0 70       	andi	r26, 0x00	; 0
     b80:	b0 70       	andi	r27, 0x00	; 0
     b82:	80 34       	cpi	r24, 0x40	; 64
     b84:	91 05       	cpc	r25, r1
     b86:	a1 05       	cpc	r26, r1
     b88:	b1 05       	cpc	r27, r1
     b8a:	39 f4       	brne	.+14     	; 0xb9a <__pack_f+0xee>
     b8c:	27 ff       	sbrs	r18, 7
     b8e:	09 c0       	rjmp	.+18     	; 0xba2 <__pack_f+0xf6>
     b90:	20 5c       	subi	r18, 0xC0	; 192
     b92:	3f 4f       	sbci	r19, 0xFF	; 255
     b94:	4f 4f       	sbci	r20, 0xFF	; 255
     b96:	5f 4f       	sbci	r21, 0xFF	; 255
     b98:	04 c0       	rjmp	.+8      	; 0xba2 <__pack_f+0xf6>
     b9a:	21 5c       	subi	r18, 0xC1	; 193
     b9c:	3f 4f       	sbci	r19, 0xFF	; 255
     b9e:	4f 4f       	sbci	r20, 0xFF	; 255
     ba0:	5f 4f       	sbci	r21, 0xFF	; 255
     ba2:	e0 e0       	ldi	r30, 0x00	; 0
     ba4:	f0 e0       	ldi	r31, 0x00	; 0
     ba6:	20 30       	cpi	r18, 0x00	; 0
     ba8:	a0 e0       	ldi	r26, 0x00	; 0
     baa:	3a 07       	cpc	r19, r26
     bac:	a0 e0       	ldi	r26, 0x00	; 0
     bae:	4a 07       	cpc	r20, r26
     bb0:	a0 e4       	ldi	r26, 0x40	; 64
     bb2:	5a 07       	cpc	r21, r26
     bb4:	10 f0       	brcs	.+4      	; 0xbba <__pack_f+0x10e>
     bb6:	e1 e0       	ldi	r30, 0x01	; 1
     bb8:	f0 e0       	ldi	r31, 0x00	; 0
     bba:	79 01       	movw	r14, r18
     bbc:	8a 01       	movw	r16, r20
     bbe:	27 c0       	rjmp	.+78     	; 0xc0e <__pack_f+0x162>
     bc0:	60 38       	cpi	r22, 0x80	; 128
     bc2:	71 05       	cpc	r23, r1
     bc4:	64 f5       	brge	.+88     	; 0xc1e <__pack_f+0x172>
     bc6:	fb 01       	movw	r30, r22
     bc8:	e1 58       	subi	r30, 0x81	; 129
     bca:	ff 4f       	sbci	r31, 0xFF	; 255
     bcc:	d8 01       	movw	r26, r16
     bce:	c7 01       	movw	r24, r14
     bd0:	8f 77       	andi	r24, 0x7F	; 127
     bd2:	90 70       	andi	r25, 0x00	; 0
     bd4:	a0 70       	andi	r26, 0x00	; 0
     bd6:	b0 70       	andi	r27, 0x00	; 0
     bd8:	80 34       	cpi	r24, 0x40	; 64
     bda:	91 05       	cpc	r25, r1
     bdc:	a1 05       	cpc	r26, r1
     bde:	b1 05       	cpc	r27, r1
     be0:	39 f4       	brne	.+14     	; 0xbf0 <__pack_f+0x144>
     be2:	e7 fe       	sbrs	r14, 7
     be4:	0d c0       	rjmp	.+26     	; 0xc00 <__pack_f+0x154>
     be6:	80 e4       	ldi	r24, 0x40	; 64
     be8:	90 e0       	ldi	r25, 0x00	; 0
     bea:	a0 e0       	ldi	r26, 0x00	; 0
     bec:	b0 e0       	ldi	r27, 0x00	; 0
     bee:	04 c0       	rjmp	.+8      	; 0xbf8 <__pack_f+0x14c>
     bf0:	8f e3       	ldi	r24, 0x3F	; 63
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	a0 e0       	ldi	r26, 0x00	; 0
     bf6:	b0 e0       	ldi	r27, 0x00	; 0
     bf8:	e8 0e       	add	r14, r24
     bfa:	f9 1e       	adc	r15, r25
     bfc:	0a 1f       	adc	r16, r26
     bfe:	1b 1f       	adc	r17, r27
     c00:	17 ff       	sbrs	r17, 7
     c02:	05 c0       	rjmp	.+10     	; 0xc0e <__pack_f+0x162>
     c04:	16 95       	lsr	r17
     c06:	07 95       	ror	r16
     c08:	f7 94       	ror	r15
     c0a:	e7 94       	ror	r14
     c0c:	31 96       	adiw	r30, 0x01	; 1
     c0e:	87 e0       	ldi	r24, 0x07	; 7
     c10:	16 95       	lsr	r17
     c12:	07 95       	ror	r16
     c14:	f7 94       	ror	r15
     c16:	e7 94       	ror	r14
     c18:	8a 95       	dec	r24
     c1a:	d1 f7       	brne	.-12     	; 0xc10 <__pack_f+0x164>
     c1c:	05 c0       	rjmp	.+10     	; 0xc28 <__pack_f+0x17c>
     c1e:	ee 24       	eor	r14, r14
     c20:	ff 24       	eor	r15, r15
     c22:	87 01       	movw	r16, r14
     c24:	ef ef       	ldi	r30, 0xFF	; 255
     c26:	f0 e0       	ldi	r31, 0x00	; 0
     c28:	6e 2f       	mov	r22, r30
     c2a:	67 95       	ror	r22
     c2c:	66 27       	eor	r22, r22
     c2e:	67 95       	ror	r22
     c30:	90 2f       	mov	r25, r16
     c32:	9f 77       	andi	r25, 0x7F	; 127
     c34:	d7 94       	ror	r13
     c36:	dd 24       	eor	r13, r13
     c38:	d7 94       	ror	r13
     c3a:	8e 2f       	mov	r24, r30
     c3c:	86 95       	lsr	r24
     c3e:	49 2f       	mov	r20, r25
     c40:	46 2b       	or	r20, r22
     c42:	58 2f       	mov	r21, r24
     c44:	5d 29       	or	r21, r13
     c46:	b7 01       	movw	r22, r14
     c48:	ca 01       	movw	r24, r20
     c4a:	1f 91       	pop	r17
     c4c:	0f 91       	pop	r16
     c4e:	ff 90       	pop	r15
     c50:	ef 90       	pop	r14
     c52:	df 90       	pop	r13
     c54:	08 95       	ret

00000c56 <__unpack_f>:
     c56:	fc 01       	movw	r30, r24
     c58:	db 01       	movw	r26, r22
     c5a:	40 81       	ld	r20, Z
     c5c:	51 81       	ldd	r21, Z+1	; 0x01
     c5e:	22 81       	ldd	r18, Z+2	; 0x02
     c60:	62 2f       	mov	r22, r18
     c62:	6f 77       	andi	r22, 0x7F	; 127
     c64:	70 e0       	ldi	r23, 0x00	; 0
     c66:	22 1f       	adc	r18, r18
     c68:	22 27       	eor	r18, r18
     c6a:	22 1f       	adc	r18, r18
     c6c:	93 81       	ldd	r25, Z+3	; 0x03
     c6e:	89 2f       	mov	r24, r25
     c70:	88 0f       	add	r24, r24
     c72:	82 2b       	or	r24, r18
     c74:	28 2f       	mov	r18, r24
     c76:	30 e0       	ldi	r19, 0x00	; 0
     c78:	99 1f       	adc	r25, r25
     c7a:	99 27       	eor	r25, r25
     c7c:	99 1f       	adc	r25, r25
     c7e:	11 96       	adiw	r26, 0x01	; 1
     c80:	9c 93       	st	X, r25
     c82:	11 97       	sbiw	r26, 0x01	; 1
     c84:	21 15       	cp	r18, r1
     c86:	31 05       	cpc	r19, r1
     c88:	a9 f5       	brne	.+106    	; 0xcf4 <__unpack_f+0x9e>
     c8a:	41 15       	cp	r20, r1
     c8c:	51 05       	cpc	r21, r1
     c8e:	61 05       	cpc	r22, r1
     c90:	71 05       	cpc	r23, r1
     c92:	11 f4       	brne	.+4      	; 0xc98 <__unpack_f+0x42>
     c94:	82 e0       	ldi	r24, 0x02	; 2
     c96:	37 c0       	rjmp	.+110    	; 0xd06 <__unpack_f+0xb0>
     c98:	82 e8       	ldi	r24, 0x82	; 130
     c9a:	9f ef       	ldi	r25, 0xFF	; 255
     c9c:	13 96       	adiw	r26, 0x03	; 3
     c9e:	9c 93       	st	X, r25
     ca0:	8e 93       	st	-X, r24
     ca2:	12 97       	sbiw	r26, 0x02	; 2
     ca4:	9a 01       	movw	r18, r20
     ca6:	ab 01       	movw	r20, r22
     ca8:	67 e0       	ldi	r22, 0x07	; 7
     caa:	22 0f       	add	r18, r18
     cac:	33 1f       	adc	r19, r19
     cae:	44 1f       	adc	r20, r20
     cb0:	55 1f       	adc	r21, r21
     cb2:	6a 95       	dec	r22
     cb4:	d1 f7       	brne	.-12     	; 0xcaa <__unpack_f+0x54>
     cb6:	83 e0       	ldi	r24, 0x03	; 3
     cb8:	8c 93       	st	X, r24
     cba:	0d c0       	rjmp	.+26     	; 0xcd6 <__unpack_f+0x80>
     cbc:	22 0f       	add	r18, r18
     cbe:	33 1f       	adc	r19, r19
     cc0:	44 1f       	adc	r20, r20
     cc2:	55 1f       	adc	r21, r21
     cc4:	12 96       	adiw	r26, 0x02	; 2
     cc6:	8d 91       	ld	r24, X+
     cc8:	9c 91       	ld	r25, X
     cca:	13 97       	sbiw	r26, 0x03	; 3
     ccc:	01 97       	sbiw	r24, 0x01	; 1
     cce:	13 96       	adiw	r26, 0x03	; 3
     cd0:	9c 93       	st	X, r25
     cd2:	8e 93       	st	-X, r24
     cd4:	12 97       	sbiw	r26, 0x02	; 2
     cd6:	20 30       	cpi	r18, 0x00	; 0
     cd8:	80 e0       	ldi	r24, 0x00	; 0
     cda:	38 07       	cpc	r19, r24
     cdc:	80 e0       	ldi	r24, 0x00	; 0
     cde:	48 07       	cpc	r20, r24
     ce0:	80 e4       	ldi	r24, 0x40	; 64
     ce2:	58 07       	cpc	r21, r24
     ce4:	58 f3       	brcs	.-42     	; 0xcbc <__unpack_f+0x66>
     ce6:	14 96       	adiw	r26, 0x04	; 4
     ce8:	2d 93       	st	X+, r18
     cea:	3d 93       	st	X+, r19
     cec:	4d 93       	st	X+, r20
     cee:	5c 93       	st	X, r21
     cf0:	17 97       	sbiw	r26, 0x07	; 7
     cf2:	08 95       	ret
     cf4:	2f 3f       	cpi	r18, 0xFF	; 255
     cf6:	31 05       	cpc	r19, r1
     cf8:	79 f4       	brne	.+30     	; 0xd18 <__unpack_f+0xc2>
     cfa:	41 15       	cp	r20, r1
     cfc:	51 05       	cpc	r21, r1
     cfe:	61 05       	cpc	r22, r1
     d00:	71 05       	cpc	r23, r1
     d02:	19 f4       	brne	.+6      	; 0xd0a <__unpack_f+0xb4>
     d04:	84 e0       	ldi	r24, 0x04	; 4
     d06:	8c 93       	st	X, r24
     d08:	08 95       	ret
     d0a:	64 ff       	sbrs	r22, 4
     d0c:	03 c0       	rjmp	.+6      	; 0xd14 <__unpack_f+0xbe>
     d0e:	81 e0       	ldi	r24, 0x01	; 1
     d10:	8c 93       	st	X, r24
     d12:	12 c0       	rjmp	.+36     	; 0xd38 <__unpack_f+0xe2>
     d14:	1c 92       	st	X, r1
     d16:	10 c0       	rjmp	.+32     	; 0xd38 <__unpack_f+0xe2>
     d18:	2f 57       	subi	r18, 0x7F	; 127
     d1a:	30 40       	sbci	r19, 0x00	; 0
     d1c:	13 96       	adiw	r26, 0x03	; 3
     d1e:	3c 93       	st	X, r19
     d20:	2e 93       	st	-X, r18
     d22:	12 97       	sbiw	r26, 0x02	; 2
     d24:	83 e0       	ldi	r24, 0x03	; 3
     d26:	8c 93       	st	X, r24
     d28:	87 e0       	ldi	r24, 0x07	; 7
     d2a:	44 0f       	add	r20, r20
     d2c:	55 1f       	adc	r21, r21
     d2e:	66 1f       	adc	r22, r22
     d30:	77 1f       	adc	r23, r23
     d32:	8a 95       	dec	r24
     d34:	d1 f7       	brne	.-12     	; 0xd2a <__unpack_f+0xd4>
     d36:	70 64       	ori	r23, 0x40	; 64
     d38:	14 96       	adiw	r26, 0x04	; 4
     d3a:	4d 93       	st	X+, r20
     d3c:	5d 93       	st	X+, r21
     d3e:	6d 93       	st	X+, r22
     d40:	7c 93       	st	X, r23
     d42:	17 97       	sbiw	r26, 0x07	; 7
     d44:	08 95       	ret

00000d46 <__fpcmp_parts_f>:
     d46:	1f 93       	push	r17
     d48:	dc 01       	movw	r26, r24
     d4a:	fb 01       	movw	r30, r22
     d4c:	9c 91       	ld	r25, X
     d4e:	92 30       	cpi	r25, 0x02	; 2
     d50:	08 f4       	brcc	.+2      	; 0xd54 <__fpcmp_parts_f+0xe>
     d52:	47 c0       	rjmp	.+142    	; 0xde2 <__fpcmp_parts_f+0x9c>
     d54:	80 81       	ld	r24, Z
     d56:	82 30       	cpi	r24, 0x02	; 2
     d58:	08 f4       	brcc	.+2      	; 0xd5c <__fpcmp_parts_f+0x16>
     d5a:	43 c0       	rjmp	.+134    	; 0xde2 <__fpcmp_parts_f+0x9c>
     d5c:	94 30       	cpi	r25, 0x04	; 4
     d5e:	51 f4       	brne	.+20     	; 0xd74 <__fpcmp_parts_f+0x2e>
     d60:	11 96       	adiw	r26, 0x01	; 1
     d62:	1c 91       	ld	r17, X
     d64:	84 30       	cpi	r24, 0x04	; 4
     d66:	99 f5       	brne	.+102    	; 0xdce <__fpcmp_parts_f+0x88>
     d68:	81 81       	ldd	r24, Z+1	; 0x01
     d6a:	68 2f       	mov	r22, r24
     d6c:	70 e0       	ldi	r23, 0x00	; 0
     d6e:	61 1b       	sub	r22, r17
     d70:	71 09       	sbc	r23, r1
     d72:	3f c0       	rjmp	.+126    	; 0xdf2 <__fpcmp_parts_f+0xac>
     d74:	84 30       	cpi	r24, 0x04	; 4
     d76:	21 f0       	breq	.+8      	; 0xd80 <__fpcmp_parts_f+0x3a>
     d78:	92 30       	cpi	r25, 0x02	; 2
     d7a:	31 f4       	brne	.+12     	; 0xd88 <__fpcmp_parts_f+0x42>
     d7c:	82 30       	cpi	r24, 0x02	; 2
     d7e:	b9 f1       	breq	.+110    	; 0xdee <__fpcmp_parts_f+0xa8>
     d80:	81 81       	ldd	r24, Z+1	; 0x01
     d82:	88 23       	and	r24, r24
     d84:	89 f1       	breq	.+98     	; 0xde8 <__fpcmp_parts_f+0xa2>
     d86:	2d c0       	rjmp	.+90     	; 0xde2 <__fpcmp_parts_f+0x9c>
     d88:	11 96       	adiw	r26, 0x01	; 1
     d8a:	1c 91       	ld	r17, X
     d8c:	11 97       	sbiw	r26, 0x01	; 1
     d8e:	82 30       	cpi	r24, 0x02	; 2
     d90:	f1 f0       	breq	.+60     	; 0xdce <__fpcmp_parts_f+0x88>
     d92:	81 81       	ldd	r24, Z+1	; 0x01
     d94:	18 17       	cp	r17, r24
     d96:	d9 f4       	brne	.+54     	; 0xdce <__fpcmp_parts_f+0x88>
     d98:	12 96       	adiw	r26, 0x02	; 2
     d9a:	2d 91       	ld	r18, X+
     d9c:	3c 91       	ld	r19, X
     d9e:	13 97       	sbiw	r26, 0x03	; 3
     da0:	82 81       	ldd	r24, Z+2	; 0x02
     da2:	93 81       	ldd	r25, Z+3	; 0x03
     da4:	82 17       	cp	r24, r18
     da6:	93 07       	cpc	r25, r19
     da8:	94 f0       	brlt	.+36     	; 0xdce <__fpcmp_parts_f+0x88>
     daa:	28 17       	cp	r18, r24
     dac:	39 07       	cpc	r19, r25
     dae:	bc f0       	brlt	.+46     	; 0xdde <__fpcmp_parts_f+0x98>
     db0:	14 96       	adiw	r26, 0x04	; 4
     db2:	8d 91       	ld	r24, X+
     db4:	9d 91       	ld	r25, X+
     db6:	0d 90       	ld	r0, X+
     db8:	bc 91       	ld	r27, X
     dba:	a0 2d       	mov	r26, r0
     dbc:	24 81       	ldd	r18, Z+4	; 0x04
     dbe:	35 81       	ldd	r19, Z+5	; 0x05
     dc0:	46 81       	ldd	r20, Z+6	; 0x06
     dc2:	57 81       	ldd	r21, Z+7	; 0x07
     dc4:	28 17       	cp	r18, r24
     dc6:	39 07       	cpc	r19, r25
     dc8:	4a 07       	cpc	r20, r26
     dca:	5b 07       	cpc	r21, r27
     dcc:	18 f4       	brcc	.+6      	; 0xdd4 <__fpcmp_parts_f+0x8e>
     dce:	11 23       	and	r17, r17
     dd0:	41 f0       	breq	.+16     	; 0xde2 <__fpcmp_parts_f+0x9c>
     dd2:	0a c0       	rjmp	.+20     	; 0xde8 <__fpcmp_parts_f+0xa2>
     dd4:	82 17       	cp	r24, r18
     dd6:	93 07       	cpc	r25, r19
     dd8:	a4 07       	cpc	r26, r20
     dda:	b5 07       	cpc	r27, r21
     ddc:	40 f4       	brcc	.+16     	; 0xdee <__fpcmp_parts_f+0xa8>
     dde:	11 23       	and	r17, r17
     de0:	19 f0       	breq	.+6      	; 0xde8 <__fpcmp_parts_f+0xa2>
     de2:	61 e0       	ldi	r22, 0x01	; 1
     de4:	70 e0       	ldi	r23, 0x00	; 0
     de6:	05 c0       	rjmp	.+10     	; 0xdf2 <__fpcmp_parts_f+0xac>
     de8:	6f ef       	ldi	r22, 0xFF	; 255
     dea:	7f ef       	ldi	r23, 0xFF	; 255
     dec:	02 c0       	rjmp	.+4      	; 0xdf2 <__fpcmp_parts_f+0xac>
     dee:	60 e0       	ldi	r22, 0x00	; 0
     df0:	70 e0       	ldi	r23, 0x00	; 0
     df2:	cb 01       	movw	r24, r22
     df4:	1f 91       	pop	r17
     df6:	08 95       	ret

00000df8 <__vector_1>:
char pause_counting=0;//if it equals1 it pauses the timer


/**FOR INT0*/
//PD2/INT0(reset button)
ISR(INT0_vect){
     df8:	1f 92       	push	r1
     dfa:	0f 92       	push	r0
     dfc:	0f b6       	in	r0, 0x3f	; 63
     dfe:	0f 92       	push	r0
     e00:	11 24       	eor	r1, r1
     e02:	2f 93       	push	r18
     e04:	3f 93       	push	r19
     e06:	4f 93       	push	r20
     e08:	5f 93       	push	r21
     e0a:	6f 93       	push	r22
     e0c:	7f 93       	push	r23
     e0e:	8f 93       	push	r24
     e10:	9f 93       	push	r25
     e12:	af 93       	push	r26
     e14:	bf 93       	push	r27
     e16:	ef 93       	push	r30
     e18:	ff 93       	push	r31
     e1a:	df 93       	push	r29
     e1c:	cf 93       	push	r28
     e1e:	cd b7       	in	r28, 0x3d	; 61
     e20:	de b7       	in	r29, 0x3e	; 62
     e22:	2e 97       	sbiw	r28, 0x0e	; 14
     e24:	de bf       	out	0x3e, r29	; 62
     e26:	cd bf       	out	0x3d, r28	; 61
     e28:	80 e0       	ldi	r24, 0x00	; 0
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	a0 e8       	ldi	r26, 0x80	; 128
     e2e:	bf e3       	ldi	r27, 0x3F	; 63
     e30:	8b 87       	std	Y+11, r24	; 0x0b
     e32:	9c 87       	std	Y+12, r25	; 0x0c
     e34:	ad 87       	std	Y+13, r26	; 0x0d
     e36:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e38:	6b 85       	ldd	r22, Y+11	; 0x0b
     e3a:	7c 85       	ldd	r23, Y+12	; 0x0c
     e3c:	8d 85       	ldd	r24, Y+13	; 0x0d
     e3e:	9e 85       	ldd	r25, Y+14	; 0x0e
     e40:	20 e0       	ldi	r18, 0x00	; 0
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	4a e7       	ldi	r20, 0x7A	; 122
     e46:	55 e4       	ldi	r21, 0x45	; 69
     e48:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     e4c:	dc 01       	movw	r26, r24
     e4e:	cb 01       	movw	r24, r22
     e50:	8f 83       	std	Y+7, r24	; 0x07
     e52:	98 87       	std	Y+8, r25	; 0x08
     e54:	a9 87       	std	Y+9, r26	; 0x09
     e56:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     e58:	6f 81       	ldd	r22, Y+7	; 0x07
     e5a:	78 85       	ldd	r23, Y+8	; 0x08
     e5c:	89 85       	ldd	r24, Y+9	; 0x09
     e5e:	9a 85       	ldd	r25, Y+10	; 0x0a
     e60:	20 e0       	ldi	r18, 0x00	; 0
     e62:	30 e0       	ldi	r19, 0x00	; 0
     e64:	40 e8       	ldi	r20, 0x80	; 128
     e66:	5f e3       	ldi	r21, 0x3F	; 63
     e68:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
     e6c:	88 23       	and	r24, r24
     e6e:	2c f4       	brge	.+10     	; 0xe7a <__vector_1+0x82>
		__ticks = 1;
     e70:	81 e0       	ldi	r24, 0x01	; 1
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	9e 83       	std	Y+6, r25	; 0x06
     e76:	8d 83       	std	Y+5, r24	; 0x05
     e78:	3f c0       	rjmp	.+126    	; 0xef8 <__vector_1+0x100>
	else if (__tmp > 65535)
     e7a:	6f 81       	ldd	r22, Y+7	; 0x07
     e7c:	78 85       	ldd	r23, Y+8	; 0x08
     e7e:	89 85       	ldd	r24, Y+9	; 0x09
     e80:	9a 85       	ldd	r25, Y+10	; 0x0a
     e82:	20 e0       	ldi	r18, 0x00	; 0
     e84:	3f ef       	ldi	r19, 0xFF	; 255
     e86:	4f e7       	ldi	r20, 0x7F	; 127
     e88:	57 e4       	ldi	r21, 0x47	; 71
     e8a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
     e8e:	18 16       	cp	r1, r24
     e90:	4c f5       	brge	.+82     	; 0xee4 <__vector_1+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e92:	6b 85       	ldd	r22, Y+11	; 0x0b
     e94:	7c 85       	ldd	r23, Y+12	; 0x0c
     e96:	8d 85       	ldd	r24, Y+13	; 0x0d
     e98:	9e 85       	ldd	r25, Y+14	; 0x0e
     e9a:	20 e0       	ldi	r18, 0x00	; 0
     e9c:	30 e0       	ldi	r19, 0x00	; 0
     e9e:	40 e2       	ldi	r20, 0x20	; 32
     ea0:	51 e4       	ldi	r21, 0x41	; 65
     ea2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     ea6:	dc 01       	movw	r26, r24
     ea8:	cb 01       	movw	r24, r22
     eaa:	bc 01       	movw	r22, r24
     eac:	cd 01       	movw	r24, r26
     eae:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     eb2:	dc 01       	movw	r26, r24
     eb4:	cb 01       	movw	r24, r22
     eb6:	9e 83       	std	Y+6, r25	; 0x06
     eb8:	8d 83       	std	Y+5, r24	; 0x05
     eba:	0f c0       	rjmp	.+30     	; 0xeda <__vector_1+0xe2>
     ebc:	80 e9       	ldi	r24, 0x90	; 144
     ebe:	91 e0       	ldi	r25, 0x01	; 1
     ec0:	9c 83       	std	Y+4, r25	; 0x04
     ec2:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     ec4:	8b 81       	ldd	r24, Y+3	; 0x03
     ec6:	9c 81       	ldd	r25, Y+4	; 0x04
     ec8:	01 97       	sbiw	r24, 0x01	; 1
     eca:	f1 f7       	brne	.-4      	; 0xec8 <__vector_1+0xd0>
     ecc:	9c 83       	std	Y+4, r25	; 0x04
     ece:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ed0:	8d 81       	ldd	r24, Y+5	; 0x05
     ed2:	9e 81       	ldd	r25, Y+6	; 0x06
     ed4:	01 97       	sbiw	r24, 0x01	; 1
     ed6:	9e 83       	std	Y+6, r25	; 0x06
     ed8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     eda:	8d 81       	ldd	r24, Y+5	; 0x05
     edc:	9e 81       	ldd	r25, Y+6	; 0x06
     ede:	00 97       	sbiw	r24, 0x00	; 0
     ee0:	69 f7       	brne	.-38     	; 0xebc <__vector_1+0xc4>
     ee2:	14 c0       	rjmp	.+40     	; 0xf0c <__vector_1+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     ee4:	6f 81       	ldd	r22, Y+7	; 0x07
     ee6:	78 85       	ldd	r23, Y+8	; 0x08
     ee8:	89 85       	ldd	r24, Y+9	; 0x09
     eea:	9a 85       	ldd	r25, Y+10	; 0x0a
     eec:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     ef0:	dc 01       	movw	r26, r24
     ef2:	cb 01       	movw	r24, r22
     ef4:	9e 83       	std	Y+6, r25	; 0x06
     ef6:	8d 83       	std	Y+5, r24	; 0x05
     ef8:	8d 81       	ldd	r24, Y+5	; 0x05
     efa:	9e 81       	ldd	r25, Y+6	; 0x06
     efc:	9a 83       	std	Y+2, r25	; 0x02
     efe:	89 83       	std	Y+1, r24	; 0x01
     f00:	89 81       	ldd	r24, Y+1	; 0x01
     f02:	9a 81       	ldd	r25, Y+2	; 0x02
     f04:	01 97       	sbiw	r24, 0x01	; 1
     f06:	f1 f7       	brne	.-4      	; 0xf04 <__vector_1+0x10c>
     f08:	9a 83       	std	Y+2, r25	; 0x02
     f0a:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);//for de-bouncing -it is as minimum as possible to prevent any flicking in the display
	//Initialize the display to 00:00:00
	 sec_first_unit=0;//first unit from the lift to display seconds
     f0c:	10 92 6d 01 	sts	0x016D, r1
	 sec_second_unit=0;
     f10:	10 92 6e 01 	sts	0x016E, r1
	 min_first_unit=0;//third unit from the lift to display minutes
     f14:	10 92 6f 01 	sts	0x016F, r1
	 min_second_unit=0;
     f18:	10 92 70 01 	sts	0x0170, r1
	 hr_first_unit=0;//fifth unit from the lift to display hourS
     f1c:	10 92 71 01 	sts	0x0171, r1
	 hr_second_unit=0;
     f20:	10 92 72 01 	sts	0x0172, r1
	 //reset all variables
		SECONDS=0;
     f24:	10 92 6a 01 	sts	0x016A, r1
		MINUTES=0;
     f28:	10 92 6b 01 	sts	0x016B, r1
		HOURS=0;
     f2c:	10 92 6c 01 	sts	0x016C, r1
	}
     f30:	2e 96       	adiw	r28, 0x0e	; 14
     f32:	de bf       	out	0x3e, r29	; 62
     f34:	cd bf       	out	0x3d, r28	; 61
     f36:	cf 91       	pop	r28
     f38:	df 91       	pop	r29
     f3a:	ff 91       	pop	r31
     f3c:	ef 91       	pop	r30
     f3e:	bf 91       	pop	r27
     f40:	af 91       	pop	r26
     f42:	9f 91       	pop	r25
     f44:	8f 91       	pop	r24
     f46:	7f 91       	pop	r23
     f48:	6f 91       	pop	r22
     f4a:	5f 91       	pop	r21
     f4c:	4f 91       	pop	r20
     f4e:	3f 91       	pop	r19
     f50:	2f 91       	pop	r18
     f52:	0f 90       	pop	r0
     f54:	0f be       	out	0x3f, r0	; 63
     f56:	0f 90       	pop	r0
     f58:	1f 90       	pop	r1
     f5a:	18 95       	reti

00000f5c <INT0_Init>:
void INT0_Init(){
     f5c:	df 93       	push	r29
     f5e:	cf 93       	push	r28
     f60:	cd b7       	in	r28, 0x3d	; 61
     f62:	de b7       	in	r29, 0x3e	; 62
	MCUCR|=(1<<ISC01);//configure INT0 it with falling edge
     f64:	a5 e5       	ldi	r26, 0x55	; 85
     f66:	b0 e0       	ldi	r27, 0x00	; 0
     f68:	e5 e5       	ldi	r30, 0x55	; 85
     f6a:	f0 e0       	ldi	r31, 0x00	; 0
     f6c:	80 81       	ld	r24, Z
     f6e:	82 60       	ori	r24, 0x02	; 2
     f70:	8c 93       	st	X, r24
	GICR|=(1<<INT0);// Enable external interrupt pin INT0
     f72:	ab e5       	ldi	r26, 0x5B	; 91
     f74:	b0 e0       	ldi	r27, 0x00	; 0
     f76:	eb e5       	ldi	r30, 0x5B	; 91
     f78:	f0 e0       	ldi	r31, 0x00	; 0
     f7a:	80 81       	ld	r24, Z
     f7c:	80 64       	ori	r24, 0x40	; 64
     f7e:	8c 93       	st	X, r24
}
     f80:	cf 91       	pop	r28
     f82:	df 91       	pop	r29
     f84:	08 95       	ret

00000f86 <__vector_2>:

/**FOR INT1*/
//PD3/IN1(pause button)
ISR(INT1_vect){
     f86:	1f 92       	push	r1
     f88:	0f 92       	push	r0
     f8a:	0f b6       	in	r0, 0x3f	; 63
     f8c:	0f 92       	push	r0
     f8e:	11 24       	eor	r1, r1
     f90:	2f 93       	push	r18
     f92:	3f 93       	push	r19
     f94:	4f 93       	push	r20
     f96:	5f 93       	push	r21
     f98:	6f 93       	push	r22
     f9a:	7f 93       	push	r23
     f9c:	8f 93       	push	r24
     f9e:	9f 93       	push	r25
     fa0:	af 93       	push	r26
     fa2:	bf 93       	push	r27
     fa4:	ef 93       	push	r30
     fa6:	ff 93       	push	r31
     fa8:	df 93       	push	r29
     faa:	cf 93       	push	r28
     fac:	cd b7       	in	r28, 0x3d	; 61
     fae:	de b7       	in	r29, 0x3e	; 62
     fb0:	2e 97       	sbiw	r28, 0x0e	; 14
     fb2:	de bf       	out	0x3e, r29	; 62
     fb4:	cd bf       	out	0x3d, r28	; 61
     fb6:	80 e0       	ldi	r24, 0x00	; 0
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	a0 e8       	ldi	r26, 0x80	; 128
     fbc:	bf e3       	ldi	r27, 0x3F	; 63
     fbe:	8b 87       	std	Y+11, r24	; 0x0b
     fc0:	9c 87       	std	Y+12, r25	; 0x0c
     fc2:	ad 87       	std	Y+13, r26	; 0x0d
     fc4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     fc6:	6b 85       	ldd	r22, Y+11	; 0x0b
     fc8:	7c 85       	ldd	r23, Y+12	; 0x0c
     fca:	8d 85       	ldd	r24, Y+13	; 0x0d
     fcc:	9e 85       	ldd	r25, Y+14	; 0x0e
     fce:	20 e0       	ldi	r18, 0x00	; 0
     fd0:	30 e0       	ldi	r19, 0x00	; 0
     fd2:	4a e7       	ldi	r20, 0x7A	; 122
     fd4:	55 e4       	ldi	r21, 0x45	; 69
     fd6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     fda:	dc 01       	movw	r26, r24
     fdc:	cb 01       	movw	r24, r22
     fde:	8f 83       	std	Y+7, r24	; 0x07
     fe0:	98 87       	std	Y+8, r25	; 0x08
     fe2:	a9 87       	std	Y+9, r26	; 0x09
     fe4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     fe6:	6f 81       	ldd	r22, Y+7	; 0x07
     fe8:	78 85       	ldd	r23, Y+8	; 0x08
     fea:	89 85       	ldd	r24, Y+9	; 0x09
     fec:	9a 85       	ldd	r25, Y+10	; 0x0a
     fee:	20 e0       	ldi	r18, 0x00	; 0
     ff0:	30 e0       	ldi	r19, 0x00	; 0
     ff2:	40 e8       	ldi	r20, 0x80	; 128
     ff4:	5f e3       	ldi	r21, 0x3F	; 63
     ff6:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
     ffa:	88 23       	and	r24, r24
     ffc:	2c f4       	brge	.+10     	; 0x1008 <__vector_2+0x82>
		__ticks = 1;
     ffe:	81 e0       	ldi	r24, 0x01	; 1
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	9e 83       	std	Y+6, r25	; 0x06
    1004:	8d 83       	std	Y+5, r24	; 0x05
    1006:	3f c0       	rjmp	.+126    	; 0x1086 <__vector_2+0x100>
	else if (__tmp > 65535)
    1008:	6f 81       	ldd	r22, Y+7	; 0x07
    100a:	78 85       	ldd	r23, Y+8	; 0x08
    100c:	89 85       	ldd	r24, Y+9	; 0x09
    100e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1010:	20 e0       	ldi	r18, 0x00	; 0
    1012:	3f ef       	ldi	r19, 0xFF	; 255
    1014:	4f e7       	ldi	r20, 0x7F	; 127
    1016:	57 e4       	ldi	r21, 0x47	; 71
    1018:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    101c:	18 16       	cp	r1, r24
    101e:	4c f5       	brge	.+82     	; 0x1072 <__vector_2+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1020:	6b 85       	ldd	r22, Y+11	; 0x0b
    1022:	7c 85       	ldd	r23, Y+12	; 0x0c
    1024:	8d 85       	ldd	r24, Y+13	; 0x0d
    1026:	9e 85       	ldd	r25, Y+14	; 0x0e
    1028:	20 e0       	ldi	r18, 0x00	; 0
    102a:	30 e0       	ldi	r19, 0x00	; 0
    102c:	40 e2       	ldi	r20, 0x20	; 32
    102e:	51 e4       	ldi	r21, 0x41	; 65
    1030:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1034:	dc 01       	movw	r26, r24
    1036:	cb 01       	movw	r24, r22
    1038:	bc 01       	movw	r22, r24
    103a:	cd 01       	movw	r24, r26
    103c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1040:	dc 01       	movw	r26, r24
    1042:	cb 01       	movw	r24, r22
    1044:	9e 83       	std	Y+6, r25	; 0x06
    1046:	8d 83       	std	Y+5, r24	; 0x05
    1048:	0f c0       	rjmp	.+30     	; 0x1068 <__vector_2+0xe2>
    104a:	80 e9       	ldi	r24, 0x90	; 144
    104c:	91 e0       	ldi	r25, 0x01	; 1
    104e:	9c 83       	std	Y+4, r25	; 0x04
    1050:	8b 83       	std	Y+3, r24	; 0x03
    1052:	8b 81       	ldd	r24, Y+3	; 0x03
    1054:	9c 81       	ldd	r25, Y+4	; 0x04
    1056:	01 97       	sbiw	r24, 0x01	; 1
    1058:	f1 f7       	brne	.-4      	; 0x1056 <__vector_2+0xd0>
    105a:	9c 83       	std	Y+4, r25	; 0x04
    105c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    105e:	8d 81       	ldd	r24, Y+5	; 0x05
    1060:	9e 81       	ldd	r25, Y+6	; 0x06
    1062:	01 97       	sbiw	r24, 0x01	; 1
    1064:	9e 83       	std	Y+6, r25	; 0x06
    1066:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1068:	8d 81       	ldd	r24, Y+5	; 0x05
    106a:	9e 81       	ldd	r25, Y+6	; 0x06
    106c:	00 97       	sbiw	r24, 0x00	; 0
    106e:	69 f7       	brne	.-38     	; 0x104a <__vector_2+0xc4>
    1070:	14 c0       	rjmp	.+40     	; 0x109a <__vector_2+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1072:	6f 81       	ldd	r22, Y+7	; 0x07
    1074:	78 85       	ldd	r23, Y+8	; 0x08
    1076:	89 85       	ldd	r24, Y+9	; 0x09
    1078:	9a 85       	ldd	r25, Y+10	; 0x0a
    107a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    107e:	dc 01       	movw	r26, r24
    1080:	cb 01       	movw	r24, r22
    1082:	9e 83       	std	Y+6, r25	; 0x06
    1084:	8d 83       	std	Y+5, r24	; 0x05
    1086:	8d 81       	ldd	r24, Y+5	; 0x05
    1088:	9e 81       	ldd	r25, Y+6	; 0x06
    108a:	9a 83       	std	Y+2, r25	; 0x02
    108c:	89 83       	std	Y+1, r24	; 0x01
    108e:	89 81       	ldd	r24, Y+1	; 0x01
    1090:	9a 81       	ldd	r25, Y+2	; 0x02
    1092:	01 97       	sbiw	r24, 0x01	; 1
    1094:	f1 f7       	brne	.-4      	; 0x1092 <__vector_2+0x10c>
    1096:	9a 83       	std	Y+2, r25	; 0x02
    1098:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);//for de-bouncing -it is as minimum as possible to prevent any flicking in the display
	pause_counting=1;//pauses the timer as the variables stop incrementing
    109a:	81 e0       	ldi	r24, 0x01	; 1
    109c:	80 93 73 01 	sts	0x0173, r24
}
    10a0:	2e 96       	adiw	r28, 0x0e	; 14
    10a2:	de bf       	out	0x3e, r29	; 62
    10a4:	cd bf       	out	0x3d, r28	; 61
    10a6:	cf 91       	pop	r28
    10a8:	df 91       	pop	r29
    10aa:	ff 91       	pop	r31
    10ac:	ef 91       	pop	r30
    10ae:	bf 91       	pop	r27
    10b0:	af 91       	pop	r26
    10b2:	9f 91       	pop	r25
    10b4:	8f 91       	pop	r24
    10b6:	7f 91       	pop	r23
    10b8:	6f 91       	pop	r22
    10ba:	5f 91       	pop	r21
    10bc:	4f 91       	pop	r20
    10be:	3f 91       	pop	r19
    10c0:	2f 91       	pop	r18
    10c2:	0f 90       	pop	r0
    10c4:	0f be       	out	0x3f, r0	; 63
    10c6:	0f 90       	pop	r0
    10c8:	1f 90       	pop	r1
    10ca:	18 95       	reti

000010cc <INT1_Init>:
void INT1_Init(){
    10cc:	df 93       	push	r29
    10ce:	cf 93       	push	r28
    10d0:	cd b7       	in	r28, 0x3d	; 61
    10d2:	de b7       	in	r29, 0x3e	; 62
	//configure INT1 it with rising edge
	MCUCR|=(1<<ISC01);
    10d4:	a5 e5       	ldi	r26, 0x55	; 85
    10d6:	b0 e0       	ldi	r27, 0x00	; 0
    10d8:	e5 e5       	ldi	r30, 0x55	; 85
    10da:	f0 e0       	ldi	r31, 0x00	; 0
    10dc:	80 81       	ld	r24, Z
    10de:	82 60       	ori	r24, 0x02	; 2
    10e0:	8c 93       	st	X, r24
	MCUCR|=(1<<ISC11);
    10e2:	a5 e5       	ldi	r26, 0x55	; 85
    10e4:	b0 e0       	ldi	r27, 0x00	; 0
    10e6:	e5 e5       	ldi	r30, 0x55	; 85
    10e8:	f0 e0       	ldi	r31, 0x00	; 0
    10ea:	80 81       	ld	r24, Z
    10ec:	88 60       	ori	r24, 0x08	; 8
    10ee:	8c 93       	st	X, r24
	GICR|=(1<<INT1);// Enable external interrupt pin INT1
    10f0:	ab e5       	ldi	r26, 0x5B	; 91
    10f2:	b0 e0       	ldi	r27, 0x00	; 0
    10f4:	eb e5       	ldi	r30, 0x5B	; 91
    10f6:	f0 e0       	ldi	r31, 0x00	; 0
    10f8:	80 81       	ld	r24, Z
    10fa:	80 68       	ori	r24, 0x80	; 128
    10fc:	8c 93       	st	X, r24
}
    10fe:	cf 91       	pop	r28
    1100:	df 91       	pop	r29
    1102:	08 95       	ret

00001104 <__vector_3>:

/**FOR INT2*/
//PB2/INT2(resume button)
ISR(INT2_vect){
    1104:	1f 92       	push	r1
    1106:	0f 92       	push	r0
    1108:	0f b6       	in	r0, 0x3f	; 63
    110a:	0f 92       	push	r0
    110c:	11 24       	eor	r1, r1
    110e:	2f 93       	push	r18
    1110:	3f 93       	push	r19
    1112:	4f 93       	push	r20
    1114:	5f 93       	push	r21
    1116:	6f 93       	push	r22
    1118:	7f 93       	push	r23
    111a:	8f 93       	push	r24
    111c:	9f 93       	push	r25
    111e:	af 93       	push	r26
    1120:	bf 93       	push	r27
    1122:	ef 93       	push	r30
    1124:	ff 93       	push	r31
    1126:	df 93       	push	r29
    1128:	cf 93       	push	r28
    112a:	cd b7       	in	r28, 0x3d	; 61
    112c:	de b7       	in	r29, 0x3e	; 62
    112e:	2e 97       	sbiw	r28, 0x0e	; 14
    1130:	de bf       	out	0x3e, r29	; 62
    1132:	cd bf       	out	0x3d, r28	; 61
    1134:	80 e0       	ldi	r24, 0x00	; 0
    1136:	90 e0       	ldi	r25, 0x00	; 0
    1138:	a0 e8       	ldi	r26, 0x80	; 128
    113a:	bf e3       	ldi	r27, 0x3F	; 63
    113c:	8b 87       	std	Y+11, r24	; 0x0b
    113e:	9c 87       	std	Y+12, r25	; 0x0c
    1140:	ad 87       	std	Y+13, r26	; 0x0d
    1142:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1144:	6b 85       	ldd	r22, Y+11	; 0x0b
    1146:	7c 85       	ldd	r23, Y+12	; 0x0c
    1148:	8d 85       	ldd	r24, Y+13	; 0x0d
    114a:	9e 85       	ldd	r25, Y+14	; 0x0e
    114c:	20 e0       	ldi	r18, 0x00	; 0
    114e:	30 e0       	ldi	r19, 0x00	; 0
    1150:	4a e7       	ldi	r20, 0x7A	; 122
    1152:	55 e4       	ldi	r21, 0x45	; 69
    1154:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1158:	dc 01       	movw	r26, r24
    115a:	cb 01       	movw	r24, r22
    115c:	8f 83       	std	Y+7, r24	; 0x07
    115e:	98 87       	std	Y+8, r25	; 0x08
    1160:	a9 87       	std	Y+9, r26	; 0x09
    1162:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1164:	6f 81       	ldd	r22, Y+7	; 0x07
    1166:	78 85       	ldd	r23, Y+8	; 0x08
    1168:	89 85       	ldd	r24, Y+9	; 0x09
    116a:	9a 85       	ldd	r25, Y+10	; 0x0a
    116c:	20 e0       	ldi	r18, 0x00	; 0
    116e:	30 e0       	ldi	r19, 0x00	; 0
    1170:	40 e8       	ldi	r20, 0x80	; 128
    1172:	5f e3       	ldi	r21, 0x3F	; 63
    1174:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1178:	88 23       	and	r24, r24
    117a:	2c f4       	brge	.+10     	; 0x1186 <__vector_3+0x82>
		__ticks = 1;
    117c:	81 e0       	ldi	r24, 0x01	; 1
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	9e 83       	std	Y+6, r25	; 0x06
    1182:	8d 83       	std	Y+5, r24	; 0x05
    1184:	3f c0       	rjmp	.+126    	; 0x1204 <__vector_3+0x100>
	else if (__tmp > 65535)
    1186:	6f 81       	ldd	r22, Y+7	; 0x07
    1188:	78 85       	ldd	r23, Y+8	; 0x08
    118a:	89 85       	ldd	r24, Y+9	; 0x09
    118c:	9a 85       	ldd	r25, Y+10	; 0x0a
    118e:	20 e0       	ldi	r18, 0x00	; 0
    1190:	3f ef       	ldi	r19, 0xFF	; 255
    1192:	4f e7       	ldi	r20, 0x7F	; 127
    1194:	57 e4       	ldi	r21, 0x47	; 71
    1196:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    119a:	18 16       	cp	r1, r24
    119c:	4c f5       	brge	.+82     	; 0x11f0 <__vector_3+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    119e:	6b 85       	ldd	r22, Y+11	; 0x0b
    11a0:	7c 85       	ldd	r23, Y+12	; 0x0c
    11a2:	8d 85       	ldd	r24, Y+13	; 0x0d
    11a4:	9e 85       	ldd	r25, Y+14	; 0x0e
    11a6:	20 e0       	ldi	r18, 0x00	; 0
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	40 e2       	ldi	r20, 0x20	; 32
    11ac:	51 e4       	ldi	r21, 0x41	; 65
    11ae:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    11b2:	dc 01       	movw	r26, r24
    11b4:	cb 01       	movw	r24, r22
    11b6:	bc 01       	movw	r22, r24
    11b8:	cd 01       	movw	r24, r26
    11ba:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    11be:	dc 01       	movw	r26, r24
    11c0:	cb 01       	movw	r24, r22
    11c2:	9e 83       	std	Y+6, r25	; 0x06
    11c4:	8d 83       	std	Y+5, r24	; 0x05
    11c6:	0f c0       	rjmp	.+30     	; 0x11e6 <__vector_3+0xe2>
    11c8:	80 e9       	ldi	r24, 0x90	; 144
    11ca:	91 e0       	ldi	r25, 0x01	; 1
    11cc:	9c 83       	std	Y+4, r25	; 0x04
    11ce:	8b 83       	std	Y+3, r24	; 0x03
    11d0:	8b 81       	ldd	r24, Y+3	; 0x03
    11d2:	9c 81       	ldd	r25, Y+4	; 0x04
    11d4:	01 97       	sbiw	r24, 0x01	; 1
    11d6:	f1 f7       	brne	.-4      	; 0x11d4 <__vector_3+0xd0>
    11d8:	9c 83       	std	Y+4, r25	; 0x04
    11da:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11dc:	8d 81       	ldd	r24, Y+5	; 0x05
    11de:	9e 81       	ldd	r25, Y+6	; 0x06
    11e0:	01 97       	sbiw	r24, 0x01	; 1
    11e2:	9e 83       	std	Y+6, r25	; 0x06
    11e4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11e6:	8d 81       	ldd	r24, Y+5	; 0x05
    11e8:	9e 81       	ldd	r25, Y+6	; 0x06
    11ea:	00 97       	sbiw	r24, 0x00	; 0
    11ec:	69 f7       	brne	.-38     	; 0x11c8 <__vector_3+0xc4>
    11ee:	14 c0       	rjmp	.+40     	; 0x1218 <__vector_3+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    11f0:	6f 81       	ldd	r22, Y+7	; 0x07
    11f2:	78 85       	ldd	r23, Y+8	; 0x08
    11f4:	89 85       	ldd	r24, Y+9	; 0x09
    11f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    11f8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    11fc:	dc 01       	movw	r26, r24
    11fe:	cb 01       	movw	r24, r22
    1200:	9e 83       	std	Y+6, r25	; 0x06
    1202:	8d 83       	std	Y+5, r24	; 0x05
    1204:	8d 81       	ldd	r24, Y+5	; 0x05
    1206:	9e 81       	ldd	r25, Y+6	; 0x06
    1208:	9a 83       	std	Y+2, r25	; 0x02
    120a:	89 83       	std	Y+1, r24	; 0x01
    120c:	89 81       	ldd	r24, Y+1	; 0x01
    120e:	9a 81       	ldd	r25, Y+2	; 0x02
    1210:	01 97       	sbiw	r24, 0x01	; 1
    1212:	f1 f7       	brne	.-4      	; 0x1210 <__vector_3+0x10c>
    1214:	9a 83       	std	Y+2, r25	; 0x02
    1216:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);//for de-bouncing -it is as minimum as possible to prevent any flicking in the display
	pause_counting=0;//Continue counting
    1218:	10 92 73 01 	sts	0x0173, r1
}
    121c:	2e 96       	adiw	r28, 0x0e	; 14
    121e:	de bf       	out	0x3e, r29	; 62
    1220:	cd bf       	out	0x3d, r28	; 61
    1222:	cf 91       	pop	r28
    1224:	df 91       	pop	r29
    1226:	ff 91       	pop	r31
    1228:	ef 91       	pop	r30
    122a:	bf 91       	pop	r27
    122c:	af 91       	pop	r26
    122e:	9f 91       	pop	r25
    1230:	8f 91       	pop	r24
    1232:	7f 91       	pop	r23
    1234:	6f 91       	pop	r22
    1236:	5f 91       	pop	r21
    1238:	4f 91       	pop	r20
    123a:	3f 91       	pop	r19
    123c:	2f 91       	pop	r18
    123e:	0f 90       	pop	r0
    1240:	0f be       	out	0x3f, r0	; 63
    1242:	0f 90       	pop	r0
    1244:	1f 90       	pop	r1
    1246:	18 95       	reti

00001248 <INT2_Init>:
void INT2_Init(){
    1248:	df 93       	push	r29
    124a:	cf 93       	push	r28
    124c:	cd b7       	in	r28, 0x3d	; 61
    124e:	de b7       	in	r29, 0x3e	; 62
	GICR|=(1<<INT2);// Enable external interrupt pin INT2
    1250:	ab e5       	ldi	r26, 0x5B	; 91
    1252:	b0 e0       	ldi	r27, 0x00	; 0
    1254:	eb e5       	ldi	r30, 0x5B	; 91
    1256:	f0 e0       	ldi	r31, 0x00	; 0
    1258:	80 81       	ld	r24, Z
    125a:	80 62       	ori	r24, 0x20	; 32
    125c:	8c 93       	st	X, r24
}
    125e:	cf 91       	pop	r28
    1260:	df 91       	pop	r29
    1262:	08 95       	ret

00001264 <__vector_7>:


                    /**timer 1 configuration**/

ISR(TIMER1_COMPA_vect)
{
    1264:	1f 92       	push	r1
    1266:	0f 92       	push	r0
    1268:	0f b6       	in	r0, 0x3f	; 63
    126a:	0f 92       	push	r0
    126c:	11 24       	eor	r1, r1
    126e:	6f 93       	push	r22
    1270:	7f 93       	push	r23
    1272:	8f 93       	push	r24
    1274:	9f 93       	push	r25
    1276:	df 93       	push	r29
    1278:	cf 93       	push	r28
    127a:	cd b7       	in	r28, 0x3d	; 61
    127c:	de b7       	in	r29, 0x3e	; 62
	if(	pause_counting==0)//checks if the pause button is pressed or not
    127e:	80 91 73 01 	lds	r24, 0x0173
    1282:	88 23       	and	r24, r24
    1284:	09 f0       	breq	.+2      	; 0x1288 <__vector_7+0x24>
    1286:	54 c0       	rjmp	.+168    	; 0x1330 <__vector_7+0xcc>
{
	SECONDS++;
    1288:	80 91 6a 01 	lds	r24, 0x016A
    128c:	8f 5f       	subi	r24, 0xFF	; 255
    128e:	80 93 6a 01 	sts	0x016A, r24
	if(SECONDS>=60){
    1292:	80 91 6a 01 	lds	r24, 0x016A
    1296:	8c 33       	cpi	r24, 0x3C	; 60
    1298:	c0 f0       	brcs	.+48     	; 0x12ca <__vector_7+0x66>
		SECONDS=0;
    129a:	10 92 6a 01 	sts	0x016A, r1
		MINUTES++;//MINUTE HAVE PASSED
    129e:	80 91 6b 01 	lds	r24, 0x016B
    12a2:	8f 5f       	subi	r24, 0xFF	; 255
    12a4:	80 93 6b 01 	sts	0x016B, r24
		if(MINUTES>=60){
    12a8:	80 91 6b 01 	lds	r24, 0x016B
    12ac:	8c 33       	cpi	r24, 0x3C	; 60
    12ae:	68 f0       	brcs	.+26     	; 0x12ca <__vector_7+0x66>
			MINUTES=0;
    12b0:	10 92 6b 01 	sts	0x016B, r1
			HOURS++;//AN HOUR HAVE PASSED
    12b4:	80 91 6c 01 	lds	r24, 0x016C
    12b8:	8f 5f       	subi	r24, 0xFF	; 255
    12ba:	80 93 6c 01 	sts	0x016C, r24
			if(HOURS>=100){
    12be:	80 91 6c 01 	lds	r24, 0x016C
    12c2:	84 36       	cpi	r24, 0x64	; 100
    12c4:	10 f0       	brcs	.+4      	; 0x12ca <__vector_7+0x66>
				HOURS=0;
    12c6:	10 92 6c 01 	sts	0x016C, r1
			}
			}
		}
	// Update display units
	        sec_first_unit = SECONDS % 10;
    12ca:	80 91 6a 01 	lds	r24, 0x016A
    12ce:	9a e0       	ldi	r25, 0x0A	; 10
    12d0:	69 2f       	mov	r22, r25
    12d2:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <__udivmodqi4>
    12d6:	89 2f       	mov	r24, r25
    12d8:	80 93 6d 01 	sts	0x016D, r24
	        sec_second_unit = SECONDS / 10;
    12dc:	80 91 6a 01 	lds	r24, 0x016A
    12e0:	9a e0       	ldi	r25, 0x0A	; 10
    12e2:	69 2f       	mov	r22, r25
    12e4:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <__udivmodqi4>
    12e8:	80 93 6e 01 	sts	0x016E, r24
	        min_first_unit = MINUTES % 10;
    12ec:	80 91 6b 01 	lds	r24, 0x016B
    12f0:	9a e0       	ldi	r25, 0x0A	; 10
    12f2:	69 2f       	mov	r22, r25
    12f4:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <__udivmodqi4>
    12f8:	89 2f       	mov	r24, r25
    12fa:	80 93 6f 01 	sts	0x016F, r24
	        min_second_unit = MINUTES / 10;
    12fe:	80 91 6b 01 	lds	r24, 0x016B
    1302:	9a e0       	ldi	r25, 0x0A	; 10
    1304:	69 2f       	mov	r22, r25
    1306:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <__udivmodqi4>
    130a:	80 93 70 01 	sts	0x0170, r24
	        hr_first_unit = HOURS % 10;
    130e:	80 91 6c 01 	lds	r24, 0x016C
    1312:	9a e0       	ldi	r25, 0x0A	; 10
    1314:	69 2f       	mov	r22, r25
    1316:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <__udivmodqi4>
    131a:	89 2f       	mov	r24, r25
    131c:	80 93 71 01 	sts	0x0171, r24
	        hr_second_unit = HOURS / 10;
    1320:	80 91 6c 01 	lds	r24, 0x016C
    1324:	9a e0       	ldi	r25, 0x0A	; 10
    1326:	69 2f       	mov	r22, r25
    1328:	0e 94 5c 11 	call	0x22b8	; 0x22b8 <__udivmodqi4>
    132c:	80 93 72 01 	sts	0x0172, r24
	}
}
    1330:	cf 91       	pop	r28
    1332:	df 91       	pop	r29
    1334:	9f 91       	pop	r25
    1336:	8f 91       	pop	r24
    1338:	7f 91       	pop	r23
    133a:	6f 91       	pop	r22
    133c:	0f 90       	pop	r0
    133e:	0f be       	out	0x3f, r0	; 63
    1340:	0f 90       	pop	r0
    1342:	1f 90       	pop	r1
    1344:	18 95       	reti

00001346 <timer1_ctc>:





void timer1_ctc(){
    1346:	df 93       	push	r29
    1348:	cf 93       	push	r28
    134a:	cd b7       	in	r28, 0x3d	; 61
    134c:	de b7       	in	r29, 0x3e	; 62
		TCCR1A |=(1<<FOC1A);
    134e:	af e4       	ldi	r26, 0x4F	; 79
    1350:	b0 e0       	ldi	r27, 0x00	; 0
    1352:	ef e4       	ldi	r30, 0x4F	; 79
    1354:	f0 e0       	ldi	r31, 0x00	; 0
    1356:	80 81       	ld	r24, Z
    1358:	88 60       	ori	r24, 0x08	; 8
    135a:	8c 93       	st	X, r24
		TCCR1B = (1<<WGM12)|(1<<CS11)|(1<<CS10);//set pre-scaler=64 to get T compare=1sec
    135c:	ee e4       	ldi	r30, 0x4E	; 78
    135e:	f0 e0       	ldi	r31, 0x00	; 0
    1360:	8b e0       	ldi	r24, 0x0B	; 11
    1362:	80 83       	st	Z, r24
		TCNT1 = 0;	//Set timer1 initial count to zero
    1364:	ec e4       	ldi	r30, 0x4C	; 76
    1366:	f0 e0       	ldi	r31, 0x00	; 0
    1368:	11 82       	std	Z+1, r1	; 0x01
    136a:	10 82       	st	Z, r1
		/*Frequency of the CPU=1Mhz ,N=64, T timer=1MHZ/64
		* T compare=1sec which mean compare match every 1 second
		* so compare match value = OCR1A= 15624*/
		OCR1A=15624;//set compare value
    136c:	ea e4       	ldi	r30, 0x4A	; 74
    136e:	f0 e0       	ldi	r31, 0x00	; 0
    1370:	88 e0       	ldi	r24, 0x08	; 8
    1372:	9d e3       	ldi	r25, 0x3D	; 61
    1374:	91 83       	std	Z+1, r25	; 0x01
    1376:	80 83       	st	Z, r24
		TIMSK |=(1<<OCIE1A);//Timer1 Output Compare A match interrupt is
    1378:	a9 e5       	ldi	r26, 0x59	; 89
    137a:	b0 e0       	ldi	r27, 0x00	; 0
    137c:	e9 e5       	ldi	r30, 0x59	; 89
    137e:	f0 e0       	ldi	r31, 0x00	; 0
    1380:	80 81       	ld	r24, Z
    1382:	80 61       	ori	r24, 0x10	; 16
    1384:	8c 93       	st	X, r24
}
    1386:	cf 91       	pop	r28
    1388:	df 91       	pop	r29
    138a:	08 95       	ret

0000138c <RESET_DIPLAY>:

void RESET_DIPLAY(int num){
    138c:	0f 93       	push	r16
    138e:	1f 93       	push	r17
    1390:	df 93       	push	r29
    1392:	cf 93       	push	r28
    1394:	cd b7       	in	r28, 0x3d	; 61
    1396:	de b7       	in	r29, 0x3e	; 62
    1398:	c4 59       	subi	r28, 0x94	; 148
    139a:	d0 40       	sbci	r29, 0x00	; 0
    139c:	0f b6       	in	r0, 0x3f	; 63
    139e:	f8 94       	cli
    13a0:	de bf       	out	0x3e, r29	; 62
    13a2:	0f be       	out	0x3f, r0	; 63
    13a4:	cd bf       	out	0x3d, r28	; 61
    13a6:	fe 01       	movw	r30, r28
    13a8:	ef 56       	subi	r30, 0x6F	; 111
    13aa:	ff 4f       	sbci	r31, 0xFF	; 255
    13ac:	91 83       	std	Z+1, r25	; 0x01
    13ae:	80 83       	st	Z, r24
switch(num)
    13b0:	fe 01       	movw	r30, r28
    13b2:	ef 56       	subi	r30, 0x6F	; 111
    13b4:	ff 4f       	sbci	r31, 0xFF	; 255
    13b6:	80 81       	ld	r24, Z
    13b8:	91 81       	ldd	r25, Z+1	; 0x01
    13ba:	cd 56       	subi	r28, 0x6D	; 109
    13bc:	df 4f       	sbci	r29, 0xFF	; 255
    13be:	99 83       	std	Y+1, r25	; 0x01
    13c0:	88 83       	st	Y, r24
    13c2:	c3 59       	subi	r28, 0x93	; 147
    13c4:	d0 40       	sbci	r29, 0x00	; 0
    13c6:	cd 56       	subi	r28, 0x6D	; 109
    13c8:	df 4f       	sbci	r29, 0xFF	; 255
    13ca:	e8 81       	ld	r30, Y
    13cc:	f9 81       	ldd	r31, Y+1	; 0x01
    13ce:	c3 59       	subi	r28, 0x93	; 147
    13d0:	d0 40       	sbci	r29, 0x00	; 0
    13d2:	e3 30       	cpi	r30, 0x03	; 3
    13d4:	f1 05       	cpc	r31, r1
    13d6:	09 f4       	brne	.+2      	; 0x13da <RESET_DIPLAY+0x4e>
    13d8:	d8 c2       	rjmp	.+1456   	; 0x198a <RESET_DIPLAY+0x5fe>
    13da:	cd 56       	subi	r28, 0x6D	; 109
    13dc:	df 4f       	sbci	r29, 0xFF	; 255
    13de:	88 81       	ld	r24, Y
    13e0:	99 81       	ldd	r25, Y+1	; 0x01
    13e2:	c3 59       	subi	r28, 0x93	; 147
    13e4:	d0 40       	sbci	r29, 0x00	; 0
    13e6:	84 30       	cpi	r24, 0x04	; 4
    13e8:	91 05       	cpc	r25, r1
    13ea:	a4 f4       	brge	.+40     	; 0x1414 <RESET_DIPLAY+0x88>
    13ec:	cd 56       	subi	r28, 0x6D	; 109
    13ee:	df 4f       	sbci	r29, 0xFF	; 255
    13f0:	e8 81       	ld	r30, Y
    13f2:	f9 81       	ldd	r31, Y+1	; 0x01
    13f4:	c3 59       	subi	r28, 0x93	; 147
    13f6:	d0 40       	sbci	r29, 0x00	; 0
    13f8:	e1 30       	cpi	r30, 0x01	; 1
    13fa:	f1 05       	cpc	r31, r1
    13fc:	51 f1       	breq	.+84     	; 0x1452 <RESET_DIPLAY+0xc6>
    13fe:	cd 56       	subi	r28, 0x6D	; 109
    1400:	df 4f       	sbci	r29, 0xFF	; 255
    1402:	88 81       	ld	r24, Y
    1404:	99 81       	ldd	r25, Y+1	; 0x01
    1406:	c3 59       	subi	r28, 0x93	; 147
    1408:	d0 40       	sbci	r29, 0x00	; 0
    140a:	82 30       	cpi	r24, 0x02	; 2
    140c:	91 05       	cpc	r25, r1
    140e:	09 f4       	brne	.+2      	; 0x1412 <RESET_DIPLAY+0x86>
    1410:	6e c1       	rjmp	.+732    	; 0x16ee <RESET_DIPLAY+0x362>
    1412:	d0 c6       	rjmp	.+3488   	; 0x21b4 <RESET_DIPLAY+0xe28>
    1414:	cd 56       	subi	r28, 0x6D	; 109
    1416:	df 4f       	sbci	r29, 0xFF	; 255
    1418:	e8 81       	ld	r30, Y
    141a:	f9 81       	ldd	r31, Y+1	; 0x01
    141c:	c3 59       	subi	r28, 0x93	; 147
    141e:	d0 40       	sbci	r29, 0x00	; 0
    1420:	e5 30       	cpi	r30, 0x05	; 5
    1422:	f1 05       	cpc	r31, r1
    1424:	09 f4       	brne	.+2      	; 0x1428 <RESET_DIPLAY+0x9c>
    1426:	01 c5       	rjmp	.+2562   	; 0x1e2a <RESET_DIPLAY+0xa9e>
    1428:	cd 56       	subi	r28, 0x6D	; 109
    142a:	df 4f       	sbci	r29, 0xFF	; 255
    142c:	88 81       	ld	r24, Y
    142e:	99 81       	ldd	r25, Y+1	; 0x01
    1430:	c3 59       	subi	r28, 0x93	; 147
    1432:	d0 40       	sbci	r29, 0x00	; 0
    1434:	85 30       	cpi	r24, 0x05	; 5
    1436:	91 05       	cpc	r25, r1
    1438:	0c f4       	brge	.+2      	; 0x143c <RESET_DIPLAY+0xb0>
    143a:	f5 c3       	rjmp	.+2026   	; 0x1c26 <RESET_DIPLAY+0x89a>
    143c:	cd 56       	subi	r28, 0x6D	; 109
    143e:	df 4f       	sbci	r29, 0xFF	; 255
    1440:	e8 81       	ld	r30, Y
    1442:	f9 81       	ldd	r31, Y+1	; 0x01
    1444:	c3 59       	subi	r28, 0x93	; 147
    1446:	d0 40       	sbci	r29, 0x00	; 0
    1448:	e6 30       	cpi	r30, 0x06	; 6
    144a:	f1 05       	cpc	r31, r1
    144c:	09 f4       	brne	.+2      	; 0x1450 <RESET_DIPLAY+0xc4>
    144e:	d0 c5       	rjmp	.+2976   	; 0x1ff0 <RESET_DIPLAY+0xc64>
    1450:	b1 c6       	rjmp	.+3426   	; 0x21b4 <RESET_DIPLAY+0xe28>
{
//SECONDS DISPLAY
case 1:
//seconds first unit (pin SEC1)
	PORTA|=(1<<PA0);//use the first  unit from the lift
    1452:	ab e3       	ldi	r26, 0x3B	; 59
    1454:	b0 e0       	ldi	r27, 0x00	; 0
    1456:	eb e3       	ldi	r30, 0x3B	; 59
    1458:	f0 e0       	ldi	r31, 0x00	; 0
    145a:	80 81       	ld	r24, Z
    145c:	81 60       	ori	r24, 0x01	; 1
    145e:	8c 93       	st	X, r24
	PORTC=(PORTC & 0xF0)|(sec_first_unit & 0x0F);//using insertion method to display the numbers
    1460:	a5 e3       	ldi	r26, 0x35	; 53
    1462:	b0 e0       	ldi	r27, 0x00	; 0
    1464:	e5 e3       	ldi	r30, 0x35	; 53
    1466:	f0 e0       	ldi	r31, 0x00	; 0
    1468:	80 81       	ld	r24, Z
    146a:	98 2f       	mov	r25, r24
    146c:	90 7f       	andi	r25, 0xF0	; 240
    146e:	80 91 6d 01 	lds	r24, 0x016D
    1472:	8f 70       	andi	r24, 0x0F	; 15
    1474:	89 2b       	or	r24, r25
    1476:	8c 93       	st	X, r24
	_delay_us(delay);//so i can see the displayed number
    1478:	80 91 68 01 	lds	r24, 0x0168
    147c:	90 91 69 01 	lds	r25, 0x0169
    1480:	aa 27       	eor	r26, r26
    1482:	97 fd       	sbrc	r25, 7
    1484:	a0 95       	com	r26
    1486:	ba 2f       	mov	r27, r26
    1488:	bc 01       	movw	r22, r24
    148a:	cd 01       	movw	r24, r26
    148c:	0e 94 55 04 	call	0x8aa	; 0x8aa <__floatsisf>
    1490:	dc 01       	movw	r26, r24
    1492:	cb 01       	movw	r24, r22
    1494:	fe 01       	movw	r30, r28
    1496:	e3 57       	subi	r30, 0x73	; 115
    1498:	ff 4f       	sbci	r31, 0xFF	; 255
    149a:	80 83       	st	Z, r24
    149c:	91 83       	std	Z+1, r25	; 0x01
    149e:	a2 83       	std	Z+2, r26	; 0x02
    14a0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    14a2:	8e 01       	movw	r16, r28
    14a4:	07 57       	subi	r16, 0x77	; 119
    14a6:	1f 4f       	sbci	r17, 0xFF	; 255
    14a8:	fe 01       	movw	r30, r28
    14aa:	e3 57       	subi	r30, 0x73	; 115
    14ac:	ff 4f       	sbci	r31, 0xFF	; 255
    14ae:	60 81       	ld	r22, Z
    14b0:	71 81       	ldd	r23, Z+1	; 0x01
    14b2:	82 81       	ldd	r24, Z+2	; 0x02
    14b4:	93 81       	ldd	r25, Z+3	; 0x03
    14b6:	2b ea       	ldi	r18, 0xAB	; 171
    14b8:	3a ea       	ldi	r19, 0xAA	; 170
    14ba:	4a ea       	ldi	r20, 0xAA	; 170
    14bc:	50 e4       	ldi	r21, 0x40	; 64
    14be:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    14c2:	dc 01       	movw	r26, r24
    14c4:	cb 01       	movw	r24, r22
    14c6:	f8 01       	movw	r30, r16
    14c8:	80 83       	st	Z, r24
    14ca:	91 83       	std	Z+1, r25	; 0x01
    14cc:	a2 83       	std	Z+2, r26	; 0x02
    14ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14d0:	fe 01       	movw	r30, r28
    14d2:	e7 57       	subi	r30, 0x77	; 119
    14d4:	ff 4f       	sbci	r31, 0xFF	; 255
    14d6:	60 81       	ld	r22, Z
    14d8:	71 81       	ldd	r23, Z+1	; 0x01
    14da:	82 81       	ldd	r24, Z+2	; 0x02
    14dc:	93 81       	ldd	r25, Z+3	; 0x03
    14de:	20 e0       	ldi	r18, 0x00	; 0
    14e0:	30 e0       	ldi	r19, 0x00	; 0
    14e2:	40 e8       	ldi	r20, 0x80	; 128
    14e4:	5f e3       	ldi	r21, 0x3F	; 63
    14e6:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    14ea:	88 23       	and	r24, r24
    14ec:	34 f4       	brge	.+12     	; 0x14fa <RESET_DIPLAY+0x16e>
		__ticks = 1;
    14ee:	fe 01       	movw	r30, r28
    14f0:	e8 57       	subi	r30, 0x78	; 120
    14f2:	ff 4f       	sbci	r31, 0xFF	; 255
    14f4:	81 e0       	ldi	r24, 0x01	; 1
    14f6:	80 83       	st	Z, r24
    14f8:	e0 c0       	rjmp	.+448    	; 0x16ba <RESET_DIPLAY+0x32e>
	else if (__tmp > 255)
    14fa:	fe 01       	movw	r30, r28
    14fc:	e7 57       	subi	r30, 0x77	; 119
    14fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1500:	60 81       	ld	r22, Z
    1502:	71 81       	ldd	r23, Z+1	; 0x01
    1504:	82 81       	ldd	r24, Z+2	; 0x02
    1506:	93 81       	ldd	r25, Z+3	; 0x03
    1508:	20 e0       	ldi	r18, 0x00	; 0
    150a:	30 e0       	ldi	r19, 0x00	; 0
    150c:	4f e7       	ldi	r20, 0x7F	; 127
    150e:	53 e4       	ldi	r21, 0x43	; 67
    1510:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1514:	18 16       	cp	r1, r24
    1516:	0c f0       	brlt	.+2      	; 0x151a <RESET_DIPLAY+0x18e>
    1518:	c0 c0       	rjmp	.+384    	; 0x169a <RESET_DIPLAY+0x30e>
	{
		_delay_ms(__us / 1000.0);
    151a:	fe 01       	movw	r30, r28
    151c:	e3 57       	subi	r30, 0x73	; 115
    151e:	ff 4f       	sbci	r31, 0xFF	; 255
    1520:	60 81       	ld	r22, Z
    1522:	71 81       	ldd	r23, Z+1	; 0x01
    1524:	82 81       	ldd	r24, Z+2	; 0x02
    1526:	93 81       	ldd	r25, Z+3	; 0x03
    1528:	20 e0       	ldi	r18, 0x00	; 0
    152a:	30 e0       	ldi	r19, 0x00	; 0
    152c:	4a e7       	ldi	r20, 0x7A	; 122
    152e:	54 e4       	ldi	r21, 0x44	; 68
    1530:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1534:	dc 01       	movw	r26, r24
    1536:	cb 01       	movw	r24, r22
    1538:	fe 01       	movw	r30, r28
    153a:	ec 57       	subi	r30, 0x7C	; 124
    153c:	ff 4f       	sbci	r31, 0xFF	; 255
    153e:	80 83       	st	Z, r24
    1540:	91 83       	std	Z+1, r25	; 0x01
    1542:	a2 83       	std	Z+2, r26	; 0x02
    1544:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1546:	8e 01       	movw	r16, r28
    1548:	00 58       	subi	r16, 0x80	; 128
    154a:	1f 4f       	sbci	r17, 0xFF	; 255
    154c:	fe 01       	movw	r30, r28
    154e:	ec 57       	subi	r30, 0x7C	; 124
    1550:	ff 4f       	sbci	r31, 0xFF	; 255
    1552:	60 81       	ld	r22, Z
    1554:	71 81       	ldd	r23, Z+1	; 0x01
    1556:	82 81       	ldd	r24, Z+2	; 0x02
    1558:	93 81       	ldd	r25, Z+3	; 0x03
    155a:	20 e0       	ldi	r18, 0x00	; 0
    155c:	30 e0       	ldi	r19, 0x00	; 0
    155e:	4a e7       	ldi	r20, 0x7A	; 122
    1560:	55 e4       	ldi	r21, 0x45	; 69
    1562:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1566:	dc 01       	movw	r26, r24
    1568:	cb 01       	movw	r24, r22
    156a:	f8 01       	movw	r30, r16
    156c:	80 83       	st	Z, r24
    156e:	91 83       	std	Z+1, r25	; 0x01
    1570:	a2 83       	std	Z+2, r26	; 0x02
    1572:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1574:	fe 01       	movw	r30, r28
    1576:	e0 58       	subi	r30, 0x80	; 128
    1578:	ff 4f       	sbci	r31, 0xFF	; 255
    157a:	60 81       	ld	r22, Z
    157c:	71 81       	ldd	r23, Z+1	; 0x01
    157e:	82 81       	ldd	r24, Z+2	; 0x02
    1580:	93 81       	ldd	r25, Z+3	; 0x03
    1582:	20 e0       	ldi	r18, 0x00	; 0
    1584:	30 e0       	ldi	r19, 0x00	; 0
    1586:	40 e8       	ldi	r20, 0x80	; 128
    1588:	5f e3       	ldi	r21, 0x3F	; 63
    158a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    158e:	88 23       	and	r24, r24
    1590:	44 f4       	brge	.+16     	; 0x15a2 <RESET_DIPLAY+0x216>
		__ticks = 1;
    1592:	fe 01       	movw	r30, r28
    1594:	e2 58       	subi	r30, 0x82	; 130
    1596:	ff 4f       	sbci	r31, 0xFF	; 255
    1598:	81 e0       	ldi	r24, 0x01	; 1
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	91 83       	std	Z+1, r25	; 0x01
    159e:	80 83       	st	Z, r24
    15a0:	64 c0       	rjmp	.+200    	; 0x166a <RESET_DIPLAY+0x2de>
	else if (__tmp > 65535)
    15a2:	fe 01       	movw	r30, r28
    15a4:	e0 58       	subi	r30, 0x80	; 128
    15a6:	ff 4f       	sbci	r31, 0xFF	; 255
    15a8:	60 81       	ld	r22, Z
    15aa:	71 81       	ldd	r23, Z+1	; 0x01
    15ac:	82 81       	ldd	r24, Z+2	; 0x02
    15ae:	93 81       	ldd	r25, Z+3	; 0x03
    15b0:	20 e0       	ldi	r18, 0x00	; 0
    15b2:	3f ef       	ldi	r19, 0xFF	; 255
    15b4:	4f e7       	ldi	r20, 0x7F	; 127
    15b6:	57 e4       	ldi	r21, 0x47	; 71
    15b8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    15bc:	18 16       	cp	r1, r24
    15be:	0c f0       	brlt	.+2      	; 0x15c2 <RESET_DIPLAY+0x236>
    15c0:	43 c0       	rjmp	.+134    	; 0x1648 <RESET_DIPLAY+0x2bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15c2:	fe 01       	movw	r30, r28
    15c4:	ec 57       	subi	r30, 0x7C	; 124
    15c6:	ff 4f       	sbci	r31, 0xFF	; 255
    15c8:	60 81       	ld	r22, Z
    15ca:	71 81       	ldd	r23, Z+1	; 0x01
    15cc:	82 81       	ldd	r24, Z+2	; 0x02
    15ce:	93 81       	ldd	r25, Z+3	; 0x03
    15d0:	20 e0       	ldi	r18, 0x00	; 0
    15d2:	30 e0       	ldi	r19, 0x00	; 0
    15d4:	40 e2       	ldi	r20, 0x20	; 32
    15d6:	51 e4       	ldi	r21, 0x41	; 65
    15d8:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    15dc:	dc 01       	movw	r26, r24
    15de:	cb 01       	movw	r24, r22
    15e0:	8e 01       	movw	r16, r28
    15e2:	02 58       	subi	r16, 0x82	; 130
    15e4:	1f 4f       	sbci	r17, 0xFF	; 255
    15e6:	bc 01       	movw	r22, r24
    15e8:	cd 01       	movw	r24, r26
    15ea:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    15ee:	dc 01       	movw	r26, r24
    15f0:	cb 01       	movw	r24, r22
    15f2:	f8 01       	movw	r30, r16
    15f4:	91 83       	std	Z+1, r25	; 0x01
    15f6:	80 83       	st	Z, r24
    15f8:	1f c0       	rjmp	.+62     	; 0x1638 <RESET_DIPLAY+0x2ac>
    15fa:	fe 01       	movw	r30, r28
    15fc:	e4 58       	subi	r30, 0x84	; 132
    15fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1600:	80 e9       	ldi	r24, 0x90	; 144
    1602:	91 e0       	ldi	r25, 0x01	; 1
    1604:	91 83       	std	Z+1, r25	; 0x01
    1606:	80 83       	st	Z, r24
    1608:	fe 01       	movw	r30, r28
    160a:	e4 58       	subi	r30, 0x84	; 132
    160c:	ff 4f       	sbci	r31, 0xFF	; 255
    160e:	80 81       	ld	r24, Z
    1610:	91 81       	ldd	r25, Z+1	; 0x01
    1612:	01 97       	sbiw	r24, 0x01	; 1
    1614:	f1 f7       	brne	.-4      	; 0x1612 <RESET_DIPLAY+0x286>
    1616:	fe 01       	movw	r30, r28
    1618:	e4 58       	subi	r30, 0x84	; 132
    161a:	ff 4f       	sbci	r31, 0xFF	; 255
    161c:	91 83       	std	Z+1, r25	; 0x01
    161e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1620:	de 01       	movw	r26, r28
    1622:	a2 58       	subi	r26, 0x82	; 130
    1624:	bf 4f       	sbci	r27, 0xFF	; 255
    1626:	fe 01       	movw	r30, r28
    1628:	e2 58       	subi	r30, 0x82	; 130
    162a:	ff 4f       	sbci	r31, 0xFF	; 255
    162c:	80 81       	ld	r24, Z
    162e:	91 81       	ldd	r25, Z+1	; 0x01
    1630:	01 97       	sbiw	r24, 0x01	; 1
    1632:	11 96       	adiw	r26, 0x01	; 1
    1634:	9c 93       	st	X, r25
    1636:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1638:	fe 01       	movw	r30, r28
    163a:	e2 58       	subi	r30, 0x82	; 130
    163c:	ff 4f       	sbci	r31, 0xFF	; 255
    163e:	80 81       	ld	r24, Z
    1640:	91 81       	ldd	r25, Z+1	; 0x01
    1642:	00 97       	sbiw	r24, 0x00	; 0
    1644:	d1 f6       	brne	.-76     	; 0x15fa <RESET_DIPLAY+0x26e>
    1646:	4b c0       	rjmp	.+150    	; 0x16de <RESET_DIPLAY+0x352>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1648:	8e 01       	movw	r16, r28
    164a:	02 58       	subi	r16, 0x82	; 130
    164c:	1f 4f       	sbci	r17, 0xFF	; 255
    164e:	fe 01       	movw	r30, r28
    1650:	e0 58       	subi	r30, 0x80	; 128
    1652:	ff 4f       	sbci	r31, 0xFF	; 255
    1654:	60 81       	ld	r22, Z
    1656:	71 81       	ldd	r23, Z+1	; 0x01
    1658:	82 81       	ldd	r24, Z+2	; 0x02
    165a:	93 81       	ldd	r25, Z+3	; 0x03
    165c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1660:	dc 01       	movw	r26, r24
    1662:	cb 01       	movw	r24, r22
    1664:	f8 01       	movw	r30, r16
    1666:	91 83       	std	Z+1, r25	; 0x01
    1668:	80 83       	st	Z, r24
    166a:	de 01       	movw	r26, r28
    166c:	a6 58       	subi	r26, 0x86	; 134
    166e:	bf 4f       	sbci	r27, 0xFF	; 255
    1670:	fe 01       	movw	r30, r28
    1672:	e2 58       	subi	r30, 0x82	; 130
    1674:	ff 4f       	sbci	r31, 0xFF	; 255
    1676:	80 81       	ld	r24, Z
    1678:	91 81       	ldd	r25, Z+1	; 0x01
    167a:	11 96       	adiw	r26, 0x01	; 1
    167c:	9c 93       	st	X, r25
    167e:	8e 93       	st	-X, r24
    1680:	fe 01       	movw	r30, r28
    1682:	e6 58       	subi	r30, 0x86	; 134
    1684:	ff 4f       	sbci	r31, 0xFF	; 255
    1686:	80 81       	ld	r24, Z
    1688:	91 81       	ldd	r25, Z+1	; 0x01
    168a:	01 97       	sbiw	r24, 0x01	; 1
    168c:	f1 f7       	brne	.-4      	; 0x168a <RESET_DIPLAY+0x2fe>
    168e:	fe 01       	movw	r30, r28
    1690:	e6 58       	subi	r30, 0x86	; 134
    1692:	ff 4f       	sbci	r31, 0xFF	; 255
    1694:	91 83       	std	Z+1, r25	; 0x01
    1696:	80 83       	st	Z, r24
    1698:	22 c0       	rjmp	.+68     	; 0x16de <RESET_DIPLAY+0x352>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    169a:	8e 01       	movw	r16, r28
    169c:	08 57       	subi	r16, 0x78	; 120
    169e:	1f 4f       	sbci	r17, 0xFF	; 255
    16a0:	fe 01       	movw	r30, r28
    16a2:	e7 57       	subi	r30, 0x77	; 119
    16a4:	ff 4f       	sbci	r31, 0xFF	; 255
    16a6:	60 81       	ld	r22, Z
    16a8:	71 81       	ldd	r23, Z+1	; 0x01
    16aa:	82 81       	ldd	r24, Z+2	; 0x02
    16ac:	93 81       	ldd	r25, Z+3	; 0x03
    16ae:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16b2:	dc 01       	movw	r26, r24
    16b4:	cb 01       	movw	r24, r22
    16b6:	f8 01       	movw	r30, r16
    16b8:	80 83       	st	Z, r24
    16ba:	de 01       	movw	r26, r28
    16bc:	a7 58       	subi	r26, 0x87	; 135
    16be:	bf 4f       	sbci	r27, 0xFF	; 255
    16c0:	fe 01       	movw	r30, r28
    16c2:	e8 57       	subi	r30, 0x78	; 120
    16c4:	ff 4f       	sbci	r31, 0xFF	; 255
    16c6:	80 81       	ld	r24, Z
    16c8:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    16ca:	fe 01       	movw	r30, r28
    16cc:	e7 58       	subi	r30, 0x87	; 135
    16ce:	ff 4f       	sbci	r31, 0xFF	; 255
    16d0:	80 81       	ld	r24, Z
    16d2:	8a 95       	dec	r24
    16d4:	f1 f7       	brne	.-4      	; 0x16d2 <RESET_DIPLAY+0x346>
    16d6:	fe 01       	movw	r30, r28
    16d8:	e7 58       	subi	r30, 0x87	; 135
    16da:	ff 4f       	sbci	r31, 0xFF	; 255
    16dc:	80 83       	st	Z, r24
	PORTA &= ~(1 << PA0); // Disable the first unit
    16de:	ab e3       	ldi	r26, 0x3B	; 59
    16e0:	b0 e0       	ldi	r27, 0x00	; 0
    16e2:	eb e3       	ldi	r30, 0x3B	; 59
    16e4:	f0 e0       	ldi	r31, 0x00	; 0
    16e6:	80 81       	ld	r24, Z
    16e8:	8e 7f       	andi	r24, 0xFE	; 254
    16ea:	8c 93       	st	X, r24
    16ec:	63 c5       	rjmp	.+2758   	; 0x21b4 <RESET_DIPLAY+0xe28>
break;
case 2:
//seconds second unit(pin SEC2)
	PORTA|=(1<<PA1);//use the second  unit
    16ee:	ab e3       	ldi	r26, 0x3B	; 59
    16f0:	b0 e0       	ldi	r27, 0x00	; 0
    16f2:	eb e3       	ldi	r30, 0x3B	; 59
    16f4:	f0 e0       	ldi	r31, 0x00	; 0
    16f6:	80 81       	ld	r24, Z
    16f8:	82 60       	ori	r24, 0x02	; 2
    16fa:	8c 93       	st	X, r24
	PORTC=(PORTC & 0xF0)|(sec_second_unit & 0x0F);
    16fc:	a5 e3       	ldi	r26, 0x35	; 53
    16fe:	b0 e0       	ldi	r27, 0x00	; 0
    1700:	e5 e3       	ldi	r30, 0x35	; 53
    1702:	f0 e0       	ldi	r31, 0x00	; 0
    1704:	80 81       	ld	r24, Z
    1706:	98 2f       	mov	r25, r24
    1708:	90 7f       	andi	r25, 0xF0	; 240
    170a:	80 91 6e 01 	lds	r24, 0x016E
    170e:	8f 70       	andi	r24, 0x0F	; 15
    1710:	89 2b       	or	r24, r25
    1712:	8c 93       	st	X, r24
	_delay_us(delay);
    1714:	80 91 68 01 	lds	r24, 0x0168
    1718:	90 91 69 01 	lds	r25, 0x0169
    171c:	aa 27       	eor	r26, r26
    171e:	97 fd       	sbrc	r25, 7
    1720:	a0 95       	com	r26
    1722:	ba 2f       	mov	r27, r26
    1724:	bc 01       	movw	r22, r24
    1726:	cd 01       	movw	r24, r26
    1728:	0e 94 55 04 	call	0x8aa	; 0x8aa <__floatsisf>
    172c:	dc 01       	movw	r26, r24
    172e:	cb 01       	movw	r24, r22
    1730:	fe 01       	movw	r30, r28
    1732:	eb 58       	subi	r30, 0x8B	; 139
    1734:	ff 4f       	sbci	r31, 0xFF	; 255
    1736:	80 83       	st	Z, r24
    1738:	91 83       	std	Z+1, r25	; 0x01
    173a:	a2 83       	std	Z+2, r26	; 0x02
    173c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    173e:	8e 01       	movw	r16, r28
    1740:	0f 58       	subi	r16, 0x8F	; 143
    1742:	1f 4f       	sbci	r17, 0xFF	; 255
    1744:	fe 01       	movw	r30, r28
    1746:	eb 58       	subi	r30, 0x8B	; 139
    1748:	ff 4f       	sbci	r31, 0xFF	; 255
    174a:	60 81       	ld	r22, Z
    174c:	71 81       	ldd	r23, Z+1	; 0x01
    174e:	82 81       	ldd	r24, Z+2	; 0x02
    1750:	93 81       	ldd	r25, Z+3	; 0x03
    1752:	2b ea       	ldi	r18, 0xAB	; 171
    1754:	3a ea       	ldi	r19, 0xAA	; 170
    1756:	4a ea       	ldi	r20, 0xAA	; 170
    1758:	50 e4       	ldi	r21, 0x40	; 64
    175a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    175e:	dc 01       	movw	r26, r24
    1760:	cb 01       	movw	r24, r22
    1762:	f8 01       	movw	r30, r16
    1764:	80 83       	st	Z, r24
    1766:	91 83       	std	Z+1, r25	; 0x01
    1768:	a2 83       	std	Z+2, r26	; 0x02
    176a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    176c:	fe 01       	movw	r30, r28
    176e:	ef 58       	subi	r30, 0x8F	; 143
    1770:	ff 4f       	sbci	r31, 0xFF	; 255
    1772:	60 81       	ld	r22, Z
    1774:	71 81       	ldd	r23, Z+1	; 0x01
    1776:	82 81       	ldd	r24, Z+2	; 0x02
    1778:	93 81       	ldd	r25, Z+3	; 0x03
    177a:	20 e0       	ldi	r18, 0x00	; 0
    177c:	30 e0       	ldi	r19, 0x00	; 0
    177e:	40 e8       	ldi	r20, 0x80	; 128
    1780:	5f e3       	ldi	r21, 0x3F	; 63
    1782:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1786:	88 23       	and	r24, r24
    1788:	34 f4       	brge	.+12     	; 0x1796 <RESET_DIPLAY+0x40a>
		__ticks = 1;
    178a:	fe 01       	movw	r30, r28
    178c:	e0 59       	subi	r30, 0x90	; 144
    178e:	ff 4f       	sbci	r31, 0xFF	; 255
    1790:	81 e0       	ldi	r24, 0x01	; 1
    1792:	80 83       	st	Z, r24
    1794:	e0 c0       	rjmp	.+448    	; 0x1956 <RESET_DIPLAY+0x5ca>
	else if (__tmp > 255)
    1796:	fe 01       	movw	r30, r28
    1798:	ef 58       	subi	r30, 0x8F	; 143
    179a:	ff 4f       	sbci	r31, 0xFF	; 255
    179c:	60 81       	ld	r22, Z
    179e:	71 81       	ldd	r23, Z+1	; 0x01
    17a0:	82 81       	ldd	r24, Z+2	; 0x02
    17a2:	93 81       	ldd	r25, Z+3	; 0x03
    17a4:	20 e0       	ldi	r18, 0x00	; 0
    17a6:	30 e0       	ldi	r19, 0x00	; 0
    17a8:	4f e7       	ldi	r20, 0x7F	; 127
    17aa:	53 e4       	ldi	r21, 0x43	; 67
    17ac:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    17b0:	18 16       	cp	r1, r24
    17b2:	0c f0       	brlt	.+2      	; 0x17b6 <RESET_DIPLAY+0x42a>
    17b4:	c0 c0       	rjmp	.+384    	; 0x1936 <RESET_DIPLAY+0x5aa>
	{
		_delay_ms(__us / 1000.0);
    17b6:	fe 01       	movw	r30, r28
    17b8:	eb 58       	subi	r30, 0x8B	; 139
    17ba:	ff 4f       	sbci	r31, 0xFF	; 255
    17bc:	60 81       	ld	r22, Z
    17be:	71 81       	ldd	r23, Z+1	; 0x01
    17c0:	82 81       	ldd	r24, Z+2	; 0x02
    17c2:	93 81       	ldd	r25, Z+3	; 0x03
    17c4:	20 e0       	ldi	r18, 0x00	; 0
    17c6:	30 e0       	ldi	r19, 0x00	; 0
    17c8:	4a e7       	ldi	r20, 0x7A	; 122
    17ca:	54 e4       	ldi	r21, 0x44	; 68
    17cc:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    17d0:	dc 01       	movw	r26, r24
    17d2:	cb 01       	movw	r24, r22
    17d4:	fe 01       	movw	r30, r28
    17d6:	e4 59       	subi	r30, 0x94	; 148
    17d8:	ff 4f       	sbci	r31, 0xFF	; 255
    17da:	80 83       	st	Z, r24
    17dc:	91 83       	std	Z+1, r25	; 0x01
    17de:	a2 83       	std	Z+2, r26	; 0x02
    17e0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17e2:	8e 01       	movw	r16, r28
    17e4:	08 59       	subi	r16, 0x98	; 152
    17e6:	1f 4f       	sbci	r17, 0xFF	; 255
    17e8:	fe 01       	movw	r30, r28
    17ea:	e4 59       	subi	r30, 0x94	; 148
    17ec:	ff 4f       	sbci	r31, 0xFF	; 255
    17ee:	60 81       	ld	r22, Z
    17f0:	71 81       	ldd	r23, Z+1	; 0x01
    17f2:	82 81       	ldd	r24, Z+2	; 0x02
    17f4:	93 81       	ldd	r25, Z+3	; 0x03
    17f6:	20 e0       	ldi	r18, 0x00	; 0
    17f8:	30 e0       	ldi	r19, 0x00	; 0
    17fa:	4a e7       	ldi	r20, 0x7A	; 122
    17fc:	55 e4       	ldi	r21, 0x45	; 69
    17fe:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1802:	dc 01       	movw	r26, r24
    1804:	cb 01       	movw	r24, r22
    1806:	f8 01       	movw	r30, r16
    1808:	80 83       	st	Z, r24
    180a:	91 83       	std	Z+1, r25	; 0x01
    180c:	a2 83       	std	Z+2, r26	; 0x02
    180e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1810:	fe 01       	movw	r30, r28
    1812:	e8 59       	subi	r30, 0x98	; 152
    1814:	ff 4f       	sbci	r31, 0xFF	; 255
    1816:	60 81       	ld	r22, Z
    1818:	71 81       	ldd	r23, Z+1	; 0x01
    181a:	82 81       	ldd	r24, Z+2	; 0x02
    181c:	93 81       	ldd	r25, Z+3	; 0x03
    181e:	20 e0       	ldi	r18, 0x00	; 0
    1820:	30 e0       	ldi	r19, 0x00	; 0
    1822:	40 e8       	ldi	r20, 0x80	; 128
    1824:	5f e3       	ldi	r21, 0x3F	; 63
    1826:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    182a:	88 23       	and	r24, r24
    182c:	44 f4       	brge	.+16     	; 0x183e <RESET_DIPLAY+0x4b2>
		__ticks = 1;
    182e:	fe 01       	movw	r30, r28
    1830:	ea 59       	subi	r30, 0x9A	; 154
    1832:	ff 4f       	sbci	r31, 0xFF	; 255
    1834:	81 e0       	ldi	r24, 0x01	; 1
    1836:	90 e0       	ldi	r25, 0x00	; 0
    1838:	91 83       	std	Z+1, r25	; 0x01
    183a:	80 83       	st	Z, r24
    183c:	64 c0       	rjmp	.+200    	; 0x1906 <RESET_DIPLAY+0x57a>
	else if (__tmp > 65535)
    183e:	fe 01       	movw	r30, r28
    1840:	e8 59       	subi	r30, 0x98	; 152
    1842:	ff 4f       	sbci	r31, 0xFF	; 255
    1844:	60 81       	ld	r22, Z
    1846:	71 81       	ldd	r23, Z+1	; 0x01
    1848:	82 81       	ldd	r24, Z+2	; 0x02
    184a:	93 81       	ldd	r25, Z+3	; 0x03
    184c:	20 e0       	ldi	r18, 0x00	; 0
    184e:	3f ef       	ldi	r19, 0xFF	; 255
    1850:	4f e7       	ldi	r20, 0x7F	; 127
    1852:	57 e4       	ldi	r21, 0x47	; 71
    1854:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1858:	18 16       	cp	r1, r24
    185a:	0c f0       	brlt	.+2      	; 0x185e <RESET_DIPLAY+0x4d2>
    185c:	43 c0       	rjmp	.+134    	; 0x18e4 <RESET_DIPLAY+0x558>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    185e:	fe 01       	movw	r30, r28
    1860:	e4 59       	subi	r30, 0x94	; 148
    1862:	ff 4f       	sbci	r31, 0xFF	; 255
    1864:	60 81       	ld	r22, Z
    1866:	71 81       	ldd	r23, Z+1	; 0x01
    1868:	82 81       	ldd	r24, Z+2	; 0x02
    186a:	93 81       	ldd	r25, Z+3	; 0x03
    186c:	20 e0       	ldi	r18, 0x00	; 0
    186e:	30 e0       	ldi	r19, 0x00	; 0
    1870:	40 e2       	ldi	r20, 0x20	; 32
    1872:	51 e4       	ldi	r21, 0x41	; 65
    1874:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1878:	dc 01       	movw	r26, r24
    187a:	cb 01       	movw	r24, r22
    187c:	8e 01       	movw	r16, r28
    187e:	0a 59       	subi	r16, 0x9A	; 154
    1880:	1f 4f       	sbci	r17, 0xFF	; 255
    1882:	bc 01       	movw	r22, r24
    1884:	cd 01       	movw	r24, r26
    1886:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    188a:	dc 01       	movw	r26, r24
    188c:	cb 01       	movw	r24, r22
    188e:	f8 01       	movw	r30, r16
    1890:	91 83       	std	Z+1, r25	; 0x01
    1892:	80 83       	st	Z, r24
    1894:	1f c0       	rjmp	.+62     	; 0x18d4 <RESET_DIPLAY+0x548>
    1896:	fe 01       	movw	r30, r28
    1898:	ec 59       	subi	r30, 0x9C	; 156
    189a:	ff 4f       	sbci	r31, 0xFF	; 255
    189c:	80 e9       	ldi	r24, 0x90	; 144
    189e:	91 e0       	ldi	r25, 0x01	; 1
    18a0:	91 83       	std	Z+1, r25	; 0x01
    18a2:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    18a4:	fe 01       	movw	r30, r28
    18a6:	ec 59       	subi	r30, 0x9C	; 156
    18a8:	ff 4f       	sbci	r31, 0xFF	; 255
    18aa:	80 81       	ld	r24, Z
    18ac:	91 81       	ldd	r25, Z+1	; 0x01
    18ae:	01 97       	sbiw	r24, 0x01	; 1
    18b0:	f1 f7       	brne	.-4      	; 0x18ae <RESET_DIPLAY+0x522>
    18b2:	fe 01       	movw	r30, r28
    18b4:	ec 59       	subi	r30, 0x9C	; 156
    18b6:	ff 4f       	sbci	r31, 0xFF	; 255
    18b8:	91 83       	std	Z+1, r25	; 0x01
    18ba:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18bc:	de 01       	movw	r26, r28
    18be:	aa 59       	subi	r26, 0x9A	; 154
    18c0:	bf 4f       	sbci	r27, 0xFF	; 255
    18c2:	fe 01       	movw	r30, r28
    18c4:	ea 59       	subi	r30, 0x9A	; 154
    18c6:	ff 4f       	sbci	r31, 0xFF	; 255
    18c8:	80 81       	ld	r24, Z
    18ca:	91 81       	ldd	r25, Z+1	; 0x01
    18cc:	01 97       	sbiw	r24, 0x01	; 1
    18ce:	11 96       	adiw	r26, 0x01	; 1
    18d0:	9c 93       	st	X, r25
    18d2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18d4:	fe 01       	movw	r30, r28
    18d6:	ea 59       	subi	r30, 0x9A	; 154
    18d8:	ff 4f       	sbci	r31, 0xFF	; 255
    18da:	80 81       	ld	r24, Z
    18dc:	91 81       	ldd	r25, Z+1	; 0x01
    18de:	00 97       	sbiw	r24, 0x00	; 0
    18e0:	d1 f6       	brne	.-76     	; 0x1896 <RESET_DIPLAY+0x50a>
    18e2:	4b c0       	rjmp	.+150    	; 0x197a <RESET_DIPLAY+0x5ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18e4:	8e 01       	movw	r16, r28
    18e6:	0a 59       	subi	r16, 0x9A	; 154
    18e8:	1f 4f       	sbci	r17, 0xFF	; 255
    18ea:	fe 01       	movw	r30, r28
    18ec:	e8 59       	subi	r30, 0x98	; 152
    18ee:	ff 4f       	sbci	r31, 0xFF	; 255
    18f0:	60 81       	ld	r22, Z
    18f2:	71 81       	ldd	r23, Z+1	; 0x01
    18f4:	82 81       	ldd	r24, Z+2	; 0x02
    18f6:	93 81       	ldd	r25, Z+3	; 0x03
    18f8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    18fc:	dc 01       	movw	r26, r24
    18fe:	cb 01       	movw	r24, r22
    1900:	f8 01       	movw	r30, r16
    1902:	91 83       	std	Z+1, r25	; 0x01
    1904:	80 83       	st	Z, r24
    1906:	de 01       	movw	r26, r28
    1908:	ae 59       	subi	r26, 0x9E	; 158
    190a:	bf 4f       	sbci	r27, 0xFF	; 255
    190c:	fe 01       	movw	r30, r28
    190e:	ea 59       	subi	r30, 0x9A	; 154
    1910:	ff 4f       	sbci	r31, 0xFF	; 255
    1912:	80 81       	ld	r24, Z
    1914:	91 81       	ldd	r25, Z+1	; 0x01
    1916:	11 96       	adiw	r26, 0x01	; 1
    1918:	9c 93       	st	X, r25
    191a:	8e 93       	st	-X, r24
    191c:	fe 01       	movw	r30, r28
    191e:	ee 59       	subi	r30, 0x9E	; 158
    1920:	ff 4f       	sbci	r31, 0xFF	; 255
    1922:	80 81       	ld	r24, Z
    1924:	91 81       	ldd	r25, Z+1	; 0x01
    1926:	01 97       	sbiw	r24, 0x01	; 1
    1928:	f1 f7       	brne	.-4      	; 0x1926 <RESET_DIPLAY+0x59a>
    192a:	fe 01       	movw	r30, r28
    192c:	ee 59       	subi	r30, 0x9E	; 158
    192e:	ff 4f       	sbci	r31, 0xFF	; 255
    1930:	91 83       	std	Z+1, r25	; 0x01
    1932:	80 83       	st	Z, r24
    1934:	22 c0       	rjmp	.+68     	; 0x197a <RESET_DIPLAY+0x5ee>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1936:	8e 01       	movw	r16, r28
    1938:	00 59       	subi	r16, 0x90	; 144
    193a:	1f 4f       	sbci	r17, 0xFF	; 255
    193c:	fe 01       	movw	r30, r28
    193e:	ef 58       	subi	r30, 0x8F	; 143
    1940:	ff 4f       	sbci	r31, 0xFF	; 255
    1942:	60 81       	ld	r22, Z
    1944:	71 81       	ldd	r23, Z+1	; 0x01
    1946:	82 81       	ldd	r24, Z+2	; 0x02
    1948:	93 81       	ldd	r25, Z+3	; 0x03
    194a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    194e:	dc 01       	movw	r26, r24
    1950:	cb 01       	movw	r24, r22
    1952:	f8 01       	movw	r30, r16
    1954:	80 83       	st	Z, r24
    1956:	de 01       	movw	r26, r28
    1958:	af 59       	subi	r26, 0x9F	; 159
    195a:	bf 4f       	sbci	r27, 0xFF	; 255
    195c:	fe 01       	movw	r30, r28
    195e:	e0 59       	subi	r30, 0x90	; 144
    1960:	ff 4f       	sbci	r31, 0xFF	; 255
    1962:	80 81       	ld	r24, Z
    1964:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1966:	fe 01       	movw	r30, r28
    1968:	ef 59       	subi	r30, 0x9F	; 159
    196a:	ff 4f       	sbci	r31, 0xFF	; 255
    196c:	80 81       	ld	r24, Z
    196e:	8a 95       	dec	r24
    1970:	f1 f7       	brne	.-4      	; 0x196e <RESET_DIPLAY+0x5e2>
    1972:	fe 01       	movw	r30, r28
    1974:	ef 59       	subi	r30, 0x9F	; 159
    1976:	ff 4f       	sbci	r31, 0xFF	; 255
    1978:	80 83       	st	Z, r24
	PORTA &= ~(1 << PA1); // Disable the second unit
    197a:	ab e3       	ldi	r26, 0x3B	; 59
    197c:	b0 e0       	ldi	r27, 0x00	; 0
    197e:	eb e3       	ldi	r30, 0x3B	; 59
    1980:	f0 e0       	ldi	r31, 0x00	; 0
    1982:	80 81       	ld	r24, Z
    1984:	8d 7f       	andi	r24, 0xFD	; 253
    1986:	8c 93       	st	X, r24
    1988:	15 c4       	rjmp	.+2090   	; 0x21b4 <RESET_DIPLAY+0xe28>
break;

	//MINUTES DISPLAY
	case 3:
		//minutes first unit(pin MIN1)
		PORTA|=(1<<PA2);//use the third  unit from the lift
    198a:	ab e3       	ldi	r26, 0x3B	; 59
    198c:	b0 e0       	ldi	r27, 0x00	; 0
    198e:	eb e3       	ldi	r30, 0x3B	; 59
    1990:	f0 e0       	ldi	r31, 0x00	; 0
    1992:	80 81       	ld	r24, Z
    1994:	84 60       	ori	r24, 0x04	; 4
    1996:	8c 93       	st	X, r24
		PORTC=(PORTC & 0xF0)|(min_first_unit & 0x0F);
    1998:	a5 e3       	ldi	r26, 0x35	; 53
    199a:	b0 e0       	ldi	r27, 0x00	; 0
    199c:	e5 e3       	ldi	r30, 0x35	; 53
    199e:	f0 e0       	ldi	r31, 0x00	; 0
    19a0:	80 81       	ld	r24, Z
    19a2:	98 2f       	mov	r25, r24
    19a4:	90 7f       	andi	r25, 0xF0	; 240
    19a6:	80 91 6f 01 	lds	r24, 0x016F
    19aa:	8f 70       	andi	r24, 0x0F	; 15
    19ac:	89 2b       	or	r24, r25
    19ae:	8c 93       	st	X, r24
		_delay_us(delay);
    19b0:	80 91 68 01 	lds	r24, 0x0168
    19b4:	90 91 69 01 	lds	r25, 0x0169
    19b8:	aa 27       	eor	r26, r26
    19ba:	97 fd       	sbrc	r25, 7
    19bc:	a0 95       	com	r26
    19be:	ba 2f       	mov	r27, r26
    19c0:	bc 01       	movw	r22, r24
    19c2:	cd 01       	movw	r24, r26
    19c4:	0e 94 55 04 	call	0x8aa	; 0x8aa <__floatsisf>
    19c8:	dc 01       	movw	r26, r24
    19ca:	cb 01       	movw	r24, r22
    19cc:	fe 01       	movw	r30, r28
    19ce:	e3 5a       	subi	r30, 0xA3	; 163
    19d0:	ff 4f       	sbci	r31, 0xFF	; 255
    19d2:	80 83       	st	Z, r24
    19d4:	91 83       	std	Z+1, r25	; 0x01
    19d6:	a2 83       	std	Z+2, r26	; 0x02
    19d8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    19da:	8e 01       	movw	r16, r28
    19dc:	07 5a       	subi	r16, 0xA7	; 167
    19de:	1f 4f       	sbci	r17, 0xFF	; 255
    19e0:	fe 01       	movw	r30, r28
    19e2:	e3 5a       	subi	r30, 0xA3	; 163
    19e4:	ff 4f       	sbci	r31, 0xFF	; 255
    19e6:	60 81       	ld	r22, Z
    19e8:	71 81       	ldd	r23, Z+1	; 0x01
    19ea:	82 81       	ldd	r24, Z+2	; 0x02
    19ec:	93 81       	ldd	r25, Z+3	; 0x03
    19ee:	2b ea       	ldi	r18, 0xAB	; 171
    19f0:	3a ea       	ldi	r19, 0xAA	; 170
    19f2:	4a ea       	ldi	r20, 0xAA	; 170
    19f4:	50 e4       	ldi	r21, 0x40	; 64
    19f6:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19fa:	dc 01       	movw	r26, r24
    19fc:	cb 01       	movw	r24, r22
    19fe:	f8 01       	movw	r30, r16
    1a00:	80 83       	st	Z, r24
    1a02:	91 83       	std	Z+1, r25	; 0x01
    1a04:	a2 83       	std	Z+2, r26	; 0x02
    1a06:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1a08:	fe 01       	movw	r30, r28
    1a0a:	e7 5a       	subi	r30, 0xA7	; 167
    1a0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a0e:	60 81       	ld	r22, Z
    1a10:	71 81       	ldd	r23, Z+1	; 0x01
    1a12:	82 81       	ldd	r24, Z+2	; 0x02
    1a14:	93 81       	ldd	r25, Z+3	; 0x03
    1a16:	20 e0       	ldi	r18, 0x00	; 0
    1a18:	30 e0       	ldi	r19, 0x00	; 0
    1a1a:	40 e8       	ldi	r20, 0x80	; 128
    1a1c:	5f e3       	ldi	r21, 0x3F	; 63
    1a1e:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1a22:	88 23       	and	r24, r24
    1a24:	34 f4       	brge	.+12     	; 0x1a32 <RESET_DIPLAY+0x6a6>
		__ticks = 1;
    1a26:	fe 01       	movw	r30, r28
    1a28:	e8 5a       	subi	r30, 0xA8	; 168
    1a2a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a2c:	81 e0       	ldi	r24, 0x01	; 1
    1a2e:	80 83       	st	Z, r24
    1a30:	e0 c0       	rjmp	.+448    	; 0x1bf2 <RESET_DIPLAY+0x866>
	else if (__tmp > 255)
    1a32:	fe 01       	movw	r30, r28
    1a34:	e7 5a       	subi	r30, 0xA7	; 167
    1a36:	ff 4f       	sbci	r31, 0xFF	; 255
    1a38:	60 81       	ld	r22, Z
    1a3a:	71 81       	ldd	r23, Z+1	; 0x01
    1a3c:	82 81       	ldd	r24, Z+2	; 0x02
    1a3e:	93 81       	ldd	r25, Z+3	; 0x03
    1a40:	20 e0       	ldi	r18, 0x00	; 0
    1a42:	30 e0       	ldi	r19, 0x00	; 0
    1a44:	4f e7       	ldi	r20, 0x7F	; 127
    1a46:	53 e4       	ldi	r21, 0x43	; 67
    1a48:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1a4c:	18 16       	cp	r1, r24
    1a4e:	0c f0       	brlt	.+2      	; 0x1a52 <RESET_DIPLAY+0x6c6>
    1a50:	c0 c0       	rjmp	.+384    	; 0x1bd2 <RESET_DIPLAY+0x846>
	{
		_delay_ms(__us / 1000.0);
    1a52:	fe 01       	movw	r30, r28
    1a54:	e3 5a       	subi	r30, 0xA3	; 163
    1a56:	ff 4f       	sbci	r31, 0xFF	; 255
    1a58:	60 81       	ld	r22, Z
    1a5a:	71 81       	ldd	r23, Z+1	; 0x01
    1a5c:	82 81       	ldd	r24, Z+2	; 0x02
    1a5e:	93 81       	ldd	r25, Z+3	; 0x03
    1a60:	20 e0       	ldi	r18, 0x00	; 0
    1a62:	30 e0       	ldi	r19, 0x00	; 0
    1a64:	4a e7       	ldi	r20, 0x7A	; 122
    1a66:	54 e4       	ldi	r21, 0x44	; 68
    1a68:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1a6c:	dc 01       	movw	r26, r24
    1a6e:	cb 01       	movw	r24, r22
    1a70:	fe 01       	movw	r30, r28
    1a72:	ec 5a       	subi	r30, 0xAC	; 172
    1a74:	ff 4f       	sbci	r31, 0xFF	; 255
    1a76:	80 83       	st	Z, r24
    1a78:	91 83       	std	Z+1, r25	; 0x01
    1a7a:	a2 83       	std	Z+2, r26	; 0x02
    1a7c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a7e:	8e 01       	movw	r16, r28
    1a80:	00 5b       	subi	r16, 0xB0	; 176
    1a82:	1f 4f       	sbci	r17, 0xFF	; 255
    1a84:	fe 01       	movw	r30, r28
    1a86:	ec 5a       	subi	r30, 0xAC	; 172
    1a88:	ff 4f       	sbci	r31, 0xFF	; 255
    1a8a:	60 81       	ld	r22, Z
    1a8c:	71 81       	ldd	r23, Z+1	; 0x01
    1a8e:	82 81       	ldd	r24, Z+2	; 0x02
    1a90:	93 81       	ldd	r25, Z+3	; 0x03
    1a92:	20 e0       	ldi	r18, 0x00	; 0
    1a94:	30 e0       	ldi	r19, 0x00	; 0
    1a96:	4a e7       	ldi	r20, 0x7A	; 122
    1a98:	55 e4       	ldi	r21, 0x45	; 69
    1a9a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a9e:	dc 01       	movw	r26, r24
    1aa0:	cb 01       	movw	r24, r22
    1aa2:	f8 01       	movw	r30, r16
    1aa4:	80 83       	st	Z, r24
    1aa6:	91 83       	std	Z+1, r25	; 0x01
    1aa8:	a2 83       	std	Z+2, r26	; 0x02
    1aaa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1aac:	fe 01       	movw	r30, r28
    1aae:	e0 5b       	subi	r30, 0xB0	; 176
    1ab0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ab2:	60 81       	ld	r22, Z
    1ab4:	71 81       	ldd	r23, Z+1	; 0x01
    1ab6:	82 81       	ldd	r24, Z+2	; 0x02
    1ab8:	93 81       	ldd	r25, Z+3	; 0x03
    1aba:	20 e0       	ldi	r18, 0x00	; 0
    1abc:	30 e0       	ldi	r19, 0x00	; 0
    1abe:	40 e8       	ldi	r20, 0x80	; 128
    1ac0:	5f e3       	ldi	r21, 0x3F	; 63
    1ac2:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1ac6:	88 23       	and	r24, r24
    1ac8:	44 f4       	brge	.+16     	; 0x1ada <RESET_DIPLAY+0x74e>
		__ticks = 1;
    1aca:	fe 01       	movw	r30, r28
    1acc:	e2 5b       	subi	r30, 0xB2	; 178
    1ace:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad0:	81 e0       	ldi	r24, 0x01	; 1
    1ad2:	90 e0       	ldi	r25, 0x00	; 0
    1ad4:	91 83       	std	Z+1, r25	; 0x01
    1ad6:	80 83       	st	Z, r24
    1ad8:	64 c0       	rjmp	.+200    	; 0x1ba2 <RESET_DIPLAY+0x816>
	else if (__tmp > 65535)
    1ada:	fe 01       	movw	r30, r28
    1adc:	e0 5b       	subi	r30, 0xB0	; 176
    1ade:	ff 4f       	sbci	r31, 0xFF	; 255
    1ae0:	60 81       	ld	r22, Z
    1ae2:	71 81       	ldd	r23, Z+1	; 0x01
    1ae4:	82 81       	ldd	r24, Z+2	; 0x02
    1ae6:	93 81       	ldd	r25, Z+3	; 0x03
    1ae8:	20 e0       	ldi	r18, 0x00	; 0
    1aea:	3f ef       	ldi	r19, 0xFF	; 255
    1aec:	4f e7       	ldi	r20, 0x7F	; 127
    1aee:	57 e4       	ldi	r21, 0x47	; 71
    1af0:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1af4:	18 16       	cp	r1, r24
    1af6:	0c f0       	brlt	.+2      	; 0x1afa <RESET_DIPLAY+0x76e>
    1af8:	43 c0       	rjmp	.+134    	; 0x1b80 <RESET_DIPLAY+0x7f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1afa:	fe 01       	movw	r30, r28
    1afc:	ec 5a       	subi	r30, 0xAC	; 172
    1afe:	ff 4f       	sbci	r31, 0xFF	; 255
    1b00:	60 81       	ld	r22, Z
    1b02:	71 81       	ldd	r23, Z+1	; 0x01
    1b04:	82 81       	ldd	r24, Z+2	; 0x02
    1b06:	93 81       	ldd	r25, Z+3	; 0x03
    1b08:	20 e0       	ldi	r18, 0x00	; 0
    1b0a:	30 e0       	ldi	r19, 0x00	; 0
    1b0c:	40 e2       	ldi	r20, 0x20	; 32
    1b0e:	51 e4       	ldi	r21, 0x41	; 65
    1b10:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b14:	dc 01       	movw	r26, r24
    1b16:	cb 01       	movw	r24, r22
    1b18:	8e 01       	movw	r16, r28
    1b1a:	02 5b       	subi	r16, 0xB2	; 178
    1b1c:	1f 4f       	sbci	r17, 0xFF	; 255
    1b1e:	bc 01       	movw	r22, r24
    1b20:	cd 01       	movw	r24, r26
    1b22:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b26:	dc 01       	movw	r26, r24
    1b28:	cb 01       	movw	r24, r22
    1b2a:	f8 01       	movw	r30, r16
    1b2c:	91 83       	std	Z+1, r25	; 0x01
    1b2e:	80 83       	st	Z, r24
    1b30:	1f c0       	rjmp	.+62     	; 0x1b70 <RESET_DIPLAY+0x7e4>
    1b32:	fe 01       	movw	r30, r28
    1b34:	e4 5b       	subi	r30, 0xB4	; 180
    1b36:	ff 4f       	sbci	r31, 0xFF	; 255
    1b38:	80 e9       	ldi	r24, 0x90	; 144
    1b3a:	91 e0       	ldi	r25, 0x01	; 1
    1b3c:	91 83       	std	Z+1, r25	; 0x01
    1b3e:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1b40:	fe 01       	movw	r30, r28
    1b42:	e4 5b       	subi	r30, 0xB4	; 180
    1b44:	ff 4f       	sbci	r31, 0xFF	; 255
    1b46:	80 81       	ld	r24, Z
    1b48:	91 81       	ldd	r25, Z+1	; 0x01
    1b4a:	01 97       	sbiw	r24, 0x01	; 1
    1b4c:	f1 f7       	brne	.-4      	; 0x1b4a <RESET_DIPLAY+0x7be>
    1b4e:	fe 01       	movw	r30, r28
    1b50:	e4 5b       	subi	r30, 0xB4	; 180
    1b52:	ff 4f       	sbci	r31, 0xFF	; 255
    1b54:	91 83       	std	Z+1, r25	; 0x01
    1b56:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b58:	de 01       	movw	r26, r28
    1b5a:	a2 5b       	subi	r26, 0xB2	; 178
    1b5c:	bf 4f       	sbci	r27, 0xFF	; 255
    1b5e:	fe 01       	movw	r30, r28
    1b60:	e2 5b       	subi	r30, 0xB2	; 178
    1b62:	ff 4f       	sbci	r31, 0xFF	; 255
    1b64:	80 81       	ld	r24, Z
    1b66:	91 81       	ldd	r25, Z+1	; 0x01
    1b68:	01 97       	sbiw	r24, 0x01	; 1
    1b6a:	11 96       	adiw	r26, 0x01	; 1
    1b6c:	9c 93       	st	X, r25
    1b6e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b70:	fe 01       	movw	r30, r28
    1b72:	e2 5b       	subi	r30, 0xB2	; 178
    1b74:	ff 4f       	sbci	r31, 0xFF	; 255
    1b76:	80 81       	ld	r24, Z
    1b78:	91 81       	ldd	r25, Z+1	; 0x01
    1b7a:	00 97       	sbiw	r24, 0x00	; 0
    1b7c:	d1 f6       	brne	.-76     	; 0x1b32 <RESET_DIPLAY+0x7a6>
    1b7e:	4b c0       	rjmp	.+150    	; 0x1c16 <RESET_DIPLAY+0x88a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b80:	8e 01       	movw	r16, r28
    1b82:	02 5b       	subi	r16, 0xB2	; 178
    1b84:	1f 4f       	sbci	r17, 0xFF	; 255
    1b86:	fe 01       	movw	r30, r28
    1b88:	e0 5b       	subi	r30, 0xB0	; 176
    1b8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b8c:	60 81       	ld	r22, Z
    1b8e:	71 81       	ldd	r23, Z+1	; 0x01
    1b90:	82 81       	ldd	r24, Z+2	; 0x02
    1b92:	93 81       	ldd	r25, Z+3	; 0x03
    1b94:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b98:	dc 01       	movw	r26, r24
    1b9a:	cb 01       	movw	r24, r22
    1b9c:	f8 01       	movw	r30, r16
    1b9e:	91 83       	std	Z+1, r25	; 0x01
    1ba0:	80 83       	st	Z, r24
    1ba2:	de 01       	movw	r26, r28
    1ba4:	a6 5b       	subi	r26, 0xB6	; 182
    1ba6:	bf 4f       	sbci	r27, 0xFF	; 255
    1ba8:	fe 01       	movw	r30, r28
    1baa:	e2 5b       	subi	r30, 0xB2	; 178
    1bac:	ff 4f       	sbci	r31, 0xFF	; 255
    1bae:	80 81       	ld	r24, Z
    1bb0:	91 81       	ldd	r25, Z+1	; 0x01
    1bb2:	11 96       	adiw	r26, 0x01	; 1
    1bb4:	9c 93       	st	X, r25
    1bb6:	8e 93       	st	-X, r24
    1bb8:	fe 01       	movw	r30, r28
    1bba:	e6 5b       	subi	r30, 0xB6	; 182
    1bbc:	ff 4f       	sbci	r31, 0xFF	; 255
    1bbe:	80 81       	ld	r24, Z
    1bc0:	91 81       	ldd	r25, Z+1	; 0x01
    1bc2:	01 97       	sbiw	r24, 0x01	; 1
    1bc4:	f1 f7       	brne	.-4      	; 0x1bc2 <RESET_DIPLAY+0x836>
    1bc6:	fe 01       	movw	r30, r28
    1bc8:	e6 5b       	subi	r30, 0xB6	; 182
    1bca:	ff 4f       	sbci	r31, 0xFF	; 255
    1bcc:	91 83       	std	Z+1, r25	; 0x01
    1bce:	80 83       	st	Z, r24
    1bd0:	22 c0       	rjmp	.+68     	; 0x1c16 <RESET_DIPLAY+0x88a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1bd2:	8e 01       	movw	r16, r28
    1bd4:	08 5a       	subi	r16, 0xA8	; 168
    1bd6:	1f 4f       	sbci	r17, 0xFF	; 255
    1bd8:	fe 01       	movw	r30, r28
    1bda:	e7 5a       	subi	r30, 0xA7	; 167
    1bdc:	ff 4f       	sbci	r31, 0xFF	; 255
    1bde:	60 81       	ld	r22, Z
    1be0:	71 81       	ldd	r23, Z+1	; 0x01
    1be2:	82 81       	ldd	r24, Z+2	; 0x02
    1be4:	93 81       	ldd	r25, Z+3	; 0x03
    1be6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1bea:	dc 01       	movw	r26, r24
    1bec:	cb 01       	movw	r24, r22
    1bee:	f8 01       	movw	r30, r16
    1bf0:	80 83       	st	Z, r24
    1bf2:	de 01       	movw	r26, r28
    1bf4:	a7 5b       	subi	r26, 0xB7	; 183
    1bf6:	bf 4f       	sbci	r27, 0xFF	; 255
    1bf8:	fe 01       	movw	r30, r28
    1bfa:	e8 5a       	subi	r30, 0xA8	; 168
    1bfc:	ff 4f       	sbci	r31, 0xFF	; 255
    1bfe:	80 81       	ld	r24, Z
    1c00:	8c 93       	st	X, r24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1c02:	fe 01       	movw	r30, r28
    1c04:	e7 5b       	subi	r30, 0xB7	; 183
    1c06:	ff 4f       	sbci	r31, 0xFF	; 255
    1c08:	80 81       	ld	r24, Z
    1c0a:	8a 95       	dec	r24
    1c0c:	f1 f7       	brne	.-4      	; 0x1c0a <RESET_DIPLAY+0x87e>
    1c0e:	fe 01       	movw	r30, r28
    1c10:	e7 5b       	subi	r30, 0xB7	; 183
    1c12:	ff 4f       	sbci	r31, 0xFF	; 255
    1c14:	80 83       	st	Z, r24
		PORTA &= ~(1 << PA2); // Disable the third unit
    1c16:	ab e3       	ldi	r26, 0x3B	; 59
    1c18:	b0 e0       	ldi	r27, 0x00	; 0
    1c1a:	eb e3       	ldi	r30, 0x3B	; 59
    1c1c:	f0 e0       	ldi	r31, 0x00	; 0
    1c1e:	80 81       	ld	r24, Z
    1c20:	8b 7f       	andi	r24, 0xFB	; 251
    1c22:	8c 93       	st	X, r24
    1c24:	c7 c2       	rjmp	.+1422   	; 0x21b4 <RESET_DIPLAY+0xe28>
	break;
	case 4:
		//minutes second unit(pin MIN2)
		PORTA|=(1<<PA3);//use the fourth  unit
    1c26:	ab e3       	ldi	r26, 0x3B	; 59
    1c28:	b0 e0       	ldi	r27, 0x00	; 0
    1c2a:	eb e3       	ldi	r30, 0x3B	; 59
    1c2c:	f0 e0       	ldi	r31, 0x00	; 0
    1c2e:	80 81       	ld	r24, Z
    1c30:	88 60       	ori	r24, 0x08	; 8
    1c32:	8c 93       	st	X, r24
		PORTC=(PORTC & 0xF0)|(min_second_unit & 0x0F);
    1c34:	a5 e3       	ldi	r26, 0x35	; 53
    1c36:	b0 e0       	ldi	r27, 0x00	; 0
    1c38:	e5 e3       	ldi	r30, 0x35	; 53
    1c3a:	f0 e0       	ldi	r31, 0x00	; 0
    1c3c:	80 81       	ld	r24, Z
    1c3e:	98 2f       	mov	r25, r24
    1c40:	90 7f       	andi	r25, 0xF0	; 240
    1c42:	80 91 70 01 	lds	r24, 0x0170
    1c46:	8f 70       	andi	r24, 0x0F	; 15
    1c48:	89 2b       	or	r24, r25
    1c4a:	8c 93       	st	X, r24
		_delay_us(delay);
    1c4c:	80 91 68 01 	lds	r24, 0x0168
    1c50:	90 91 69 01 	lds	r25, 0x0169
    1c54:	aa 27       	eor	r26, r26
    1c56:	97 fd       	sbrc	r25, 7
    1c58:	a0 95       	com	r26
    1c5a:	ba 2f       	mov	r27, r26
    1c5c:	bc 01       	movw	r22, r24
    1c5e:	cd 01       	movw	r24, r26
    1c60:	0e 94 55 04 	call	0x8aa	; 0x8aa <__floatsisf>
    1c64:	dc 01       	movw	r26, r24
    1c66:	cb 01       	movw	r24, r22
    1c68:	fe 01       	movw	r30, r28
    1c6a:	eb 5b       	subi	r30, 0xBB	; 187
    1c6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c6e:	80 83       	st	Z, r24
    1c70:	91 83       	std	Z+1, r25	; 0x01
    1c72:	a2 83       	std	Z+2, r26	; 0x02
    1c74:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1c76:	8e 01       	movw	r16, r28
    1c78:	0f 5b       	subi	r16, 0xBF	; 191
    1c7a:	1f 4f       	sbci	r17, 0xFF	; 255
    1c7c:	fe 01       	movw	r30, r28
    1c7e:	eb 5b       	subi	r30, 0xBB	; 187
    1c80:	ff 4f       	sbci	r31, 0xFF	; 255
    1c82:	60 81       	ld	r22, Z
    1c84:	71 81       	ldd	r23, Z+1	; 0x01
    1c86:	82 81       	ldd	r24, Z+2	; 0x02
    1c88:	93 81       	ldd	r25, Z+3	; 0x03
    1c8a:	2b ea       	ldi	r18, 0xAB	; 171
    1c8c:	3a ea       	ldi	r19, 0xAA	; 170
    1c8e:	4a ea       	ldi	r20, 0xAA	; 170
    1c90:	50 e4       	ldi	r21, 0x40	; 64
    1c92:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c96:	dc 01       	movw	r26, r24
    1c98:	cb 01       	movw	r24, r22
    1c9a:	f8 01       	movw	r30, r16
    1c9c:	80 83       	st	Z, r24
    1c9e:	91 83       	std	Z+1, r25	; 0x01
    1ca0:	a2 83       	std	Z+2, r26	; 0x02
    1ca2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ca4:	fe 01       	movw	r30, r28
    1ca6:	ef 5b       	subi	r30, 0xBF	; 191
    1ca8:	ff 4f       	sbci	r31, 0xFF	; 255
    1caa:	60 81       	ld	r22, Z
    1cac:	71 81       	ldd	r23, Z+1	; 0x01
    1cae:	82 81       	ldd	r24, Z+2	; 0x02
    1cb0:	93 81       	ldd	r25, Z+3	; 0x03
    1cb2:	20 e0       	ldi	r18, 0x00	; 0
    1cb4:	30 e0       	ldi	r19, 0x00	; 0
    1cb6:	40 e8       	ldi	r20, 0x80	; 128
    1cb8:	5f e3       	ldi	r21, 0x3F	; 63
    1cba:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1cbe:	88 23       	and	r24, r24
    1cc0:	34 f4       	brge	.+12     	; 0x1cce <RESET_DIPLAY+0x942>
		__ticks = 1;
    1cc2:	81 e0       	ldi	r24, 0x01	; 1
    1cc4:	fe 01       	movw	r30, r28
    1cc6:	e0 5c       	subi	r30, 0xC0	; 192
    1cc8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cca:	80 83       	st	Z, r24
    1ccc:	9d c0       	rjmp	.+314    	; 0x1e08 <RESET_DIPLAY+0xa7c>
	else if (__tmp > 255)
    1cce:	fe 01       	movw	r30, r28
    1cd0:	ef 5b       	subi	r30, 0xBF	; 191
    1cd2:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd4:	60 81       	ld	r22, Z
    1cd6:	71 81       	ldd	r23, Z+1	; 0x01
    1cd8:	82 81       	ldd	r24, Z+2	; 0x02
    1cda:	93 81       	ldd	r25, Z+3	; 0x03
    1cdc:	20 e0       	ldi	r18, 0x00	; 0
    1cde:	30 e0       	ldi	r19, 0x00	; 0
    1ce0:	4f e7       	ldi	r20, 0x7F	; 127
    1ce2:	53 e4       	ldi	r21, 0x43	; 67
    1ce4:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1ce8:	18 16       	cp	r1, r24
    1cea:	0c f0       	brlt	.+2      	; 0x1cee <RESET_DIPLAY+0x962>
    1cec:	7e c0       	rjmp	.+252    	; 0x1dea <RESET_DIPLAY+0xa5e>
	{
		_delay_ms(__us / 1000.0);
    1cee:	fe 01       	movw	r30, r28
    1cf0:	eb 5b       	subi	r30, 0xBB	; 187
    1cf2:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf4:	60 81       	ld	r22, Z
    1cf6:	71 81       	ldd	r23, Z+1	; 0x01
    1cf8:	82 81       	ldd	r24, Z+2	; 0x02
    1cfa:	93 81       	ldd	r25, Z+3	; 0x03
    1cfc:	20 e0       	ldi	r18, 0x00	; 0
    1cfe:	30 e0       	ldi	r19, 0x00	; 0
    1d00:	4a e7       	ldi	r20, 0x7A	; 122
    1d02:	54 e4       	ldi	r21, 0x44	; 68
    1d04:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1d08:	dc 01       	movw	r26, r24
    1d0a:	cb 01       	movw	r24, r22
    1d0c:	8c af       	std	Y+60, r24	; 0x3c
    1d0e:	9d af       	std	Y+61, r25	; 0x3d
    1d10:	ae af       	std	Y+62, r26	; 0x3e
    1d12:	bf af       	std	Y+63, r27	; 0x3f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d14:	6c ad       	ldd	r22, Y+60	; 0x3c
    1d16:	7d ad       	ldd	r23, Y+61	; 0x3d
    1d18:	8e ad       	ldd	r24, Y+62	; 0x3e
    1d1a:	9f ad       	ldd	r25, Y+63	; 0x3f
    1d1c:	20 e0       	ldi	r18, 0x00	; 0
    1d1e:	30 e0       	ldi	r19, 0x00	; 0
    1d20:	4a e7       	ldi	r20, 0x7A	; 122
    1d22:	55 e4       	ldi	r21, 0x45	; 69
    1d24:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d28:	dc 01       	movw	r26, r24
    1d2a:	cb 01       	movw	r24, r22
    1d2c:	88 af       	std	Y+56, r24	; 0x38
    1d2e:	99 af       	std	Y+57, r25	; 0x39
    1d30:	aa af       	std	Y+58, r26	; 0x3a
    1d32:	bb af       	std	Y+59, r27	; 0x3b
	if (__tmp < 1.0)
    1d34:	68 ad       	ldd	r22, Y+56	; 0x38
    1d36:	79 ad       	ldd	r23, Y+57	; 0x39
    1d38:	8a ad       	ldd	r24, Y+58	; 0x3a
    1d3a:	9b ad       	ldd	r25, Y+59	; 0x3b
    1d3c:	20 e0       	ldi	r18, 0x00	; 0
    1d3e:	30 e0       	ldi	r19, 0x00	; 0
    1d40:	40 e8       	ldi	r20, 0x80	; 128
    1d42:	5f e3       	ldi	r21, 0x3F	; 63
    1d44:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1d48:	88 23       	and	r24, r24
    1d4a:	2c f4       	brge	.+10     	; 0x1d56 <RESET_DIPLAY+0x9ca>
		__ticks = 1;
    1d4c:	81 e0       	ldi	r24, 0x01	; 1
    1d4e:	90 e0       	ldi	r25, 0x00	; 0
    1d50:	9f ab       	std	Y+55, r25	; 0x37
    1d52:	8e ab       	std	Y+54, r24	; 0x36
    1d54:	3f c0       	rjmp	.+126    	; 0x1dd4 <RESET_DIPLAY+0xa48>
	else if (__tmp > 65535)
    1d56:	68 ad       	ldd	r22, Y+56	; 0x38
    1d58:	79 ad       	ldd	r23, Y+57	; 0x39
    1d5a:	8a ad       	ldd	r24, Y+58	; 0x3a
    1d5c:	9b ad       	ldd	r25, Y+59	; 0x3b
    1d5e:	20 e0       	ldi	r18, 0x00	; 0
    1d60:	3f ef       	ldi	r19, 0xFF	; 255
    1d62:	4f e7       	ldi	r20, 0x7F	; 127
    1d64:	57 e4       	ldi	r21, 0x47	; 71
    1d66:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1d6a:	18 16       	cp	r1, r24
    1d6c:	4c f5       	brge	.+82     	; 0x1dc0 <RESET_DIPLAY+0xa34>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d6e:	6c ad       	ldd	r22, Y+60	; 0x3c
    1d70:	7d ad       	ldd	r23, Y+61	; 0x3d
    1d72:	8e ad       	ldd	r24, Y+62	; 0x3e
    1d74:	9f ad       	ldd	r25, Y+63	; 0x3f
    1d76:	20 e0       	ldi	r18, 0x00	; 0
    1d78:	30 e0       	ldi	r19, 0x00	; 0
    1d7a:	40 e2       	ldi	r20, 0x20	; 32
    1d7c:	51 e4       	ldi	r21, 0x41	; 65
    1d7e:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d82:	dc 01       	movw	r26, r24
    1d84:	cb 01       	movw	r24, r22
    1d86:	bc 01       	movw	r22, r24
    1d88:	cd 01       	movw	r24, r26
    1d8a:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d8e:	dc 01       	movw	r26, r24
    1d90:	cb 01       	movw	r24, r22
    1d92:	9f ab       	std	Y+55, r25	; 0x37
    1d94:	8e ab       	std	Y+54, r24	; 0x36
    1d96:	0f c0       	rjmp	.+30     	; 0x1db6 <RESET_DIPLAY+0xa2a>
    1d98:	80 e9       	ldi	r24, 0x90	; 144
    1d9a:	91 e0       	ldi	r25, 0x01	; 1
    1d9c:	9d ab       	std	Y+53, r25	; 0x35
    1d9e:	8c ab       	std	Y+52, r24	; 0x34
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1da0:	8c a9       	ldd	r24, Y+52	; 0x34
    1da2:	9d a9       	ldd	r25, Y+53	; 0x35
    1da4:	01 97       	sbiw	r24, 0x01	; 1
    1da6:	f1 f7       	brne	.-4      	; 0x1da4 <RESET_DIPLAY+0xa18>
    1da8:	9d ab       	std	Y+53, r25	; 0x35
    1daa:	8c ab       	std	Y+52, r24	; 0x34
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dac:	8e a9       	ldd	r24, Y+54	; 0x36
    1dae:	9f a9       	ldd	r25, Y+55	; 0x37
    1db0:	01 97       	sbiw	r24, 0x01	; 1
    1db2:	9f ab       	std	Y+55, r25	; 0x37
    1db4:	8e ab       	std	Y+54, r24	; 0x36
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1db6:	8e a9       	ldd	r24, Y+54	; 0x36
    1db8:	9f a9       	ldd	r25, Y+55	; 0x37
    1dba:	00 97       	sbiw	r24, 0x00	; 0
    1dbc:	69 f7       	brne	.-38     	; 0x1d98 <RESET_DIPLAY+0xa0c>
    1dbe:	2d c0       	rjmp	.+90     	; 0x1e1a <RESET_DIPLAY+0xa8e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dc0:	68 ad       	ldd	r22, Y+56	; 0x38
    1dc2:	79 ad       	ldd	r23, Y+57	; 0x39
    1dc4:	8a ad       	ldd	r24, Y+58	; 0x3a
    1dc6:	9b ad       	ldd	r25, Y+59	; 0x3b
    1dc8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1dcc:	dc 01       	movw	r26, r24
    1dce:	cb 01       	movw	r24, r22
    1dd0:	9f ab       	std	Y+55, r25	; 0x37
    1dd2:	8e ab       	std	Y+54, r24	; 0x36
    1dd4:	8e a9       	ldd	r24, Y+54	; 0x36
    1dd6:	9f a9       	ldd	r25, Y+55	; 0x37
    1dd8:	9b ab       	std	Y+51, r25	; 0x33
    1dda:	8a ab       	std	Y+50, r24	; 0x32
    1ddc:	8a a9       	ldd	r24, Y+50	; 0x32
    1dde:	9b a9       	ldd	r25, Y+51	; 0x33
    1de0:	01 97       	sbiw	r24, 0x01	; 1
    1de2:	f1 f7       	brne	.-4      	; 0x1de0 <RESET_DIPLAY+0xa54>
    1de4:	9b ab       	std	Y+51, r25	; 0x33
    1de6:	8a ab       	std	Y+50, r24	; 0x32
    1de8:	18 c0       	rjmp	.+48     	; 0x1e1a <RESET_DIPLAY+0xa8e>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1dea:	fe 01       	movw	r30, r28
    1dec:	ef 5b       	subi	r30, 0xBF	; 191
    1dee:	ff 4f       	sbci	r31, 0xFF	; 255
    1df0:	60 81       	ld	r22, Z
    1df2:	71 81       	ldd	r23, Z+1	; 0x01
    1df4:	82 81       	ldd	r24, Z+2	; 0x02
    1df6:	93 81       	ldd	r25, Z+3	; 0x03
    1df8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1dfc:	dc 01       	movw	r26, r24
    1dfe:	cb 01       	movw	r24, r22
    1e00:	fe 01       	movw	r30, r28
    1e02:	e0 5c       	subi	r30, 0xC0	; 192
    1e04:	ff 4f       	sbci	r31, 0xFF	; 255
    1e06:	80 83       	st	Z, r24
    1e08:	fe 01       	movw	r30, r28
    1e0a:	e0 5c       	subi	r30, 0xC0	; 192
    1e0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e0e:	80 81       	ld	r24, Z
    1e10:	89 ab       	std	Y+49, r24	; 0x31
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1e12:	89 a9       	ldd	r24, Y+49	; 0x31
    1e14:	8a 95       	dec	r24
    1e16:	f1 f7       	brne	.-4      	; 0x1e14 <RESET_DIPLAY+0xa88>
    1e18:	89 ab       	std	Y+49, r24	; 0x31
		PORTA &= ~(1 << PA3); // Disable the fourth unit
    1e1a:	ab e3       	ldi	r26, 0x3B	; 59
    1e1c:	b0 e0       	ldi	r27, 0x00	; 0
    1e1e:	eb e3       	ldi	r30, 0x3B	; 59
    1e20:	f0 e0       	ldi	r31, 0x00	; 0
    1e22:	80 81       	ld	r24, Z
    1e24:	87 7f       	andi	r24, 0xF7	; 247
    1e26:	8c 93       	st	X, r24
    1e28:	c5 c1       	rjmp	.+906    	; 0x21b4 <RESET_DIPLAY+0xe28>
	break;

		//HOURS DISPLAY
		case 5:
			//hours first unit(pin HR1)
			PORTA|=(1<<PA4);//use the fifth  unit from the lift
    1e2a:	ab e3       	ldi	r26, 0x3B	; 59
    1e2c:	b0 e0       	ldi	r27, 0x00	; 0
    1e2e:	eb e3       	ldi	r30, 0x3B	; 59
    1e30:	f0 e0       	ldi	r31, 0x00	; 0
    1e32:	80 81       	ld	r24, Z
    1e34:	80 61       	ori	r24, 0x10	; 16
    1e36:	8c 93       	st	X, r24
			PORTC=(PORTC & 0xF0)|(hr_first_unit & 0x0F);
    1e38:	a5 e3       	ldi	r26, 0x35	; 53
    1e3a:	b0 e0       	ldi	r27, 0x00	; 0
    1e3c:	e5 e3       	ldi	r30, 0x35	; 53
    1e3e:	f0 e0       	ldi	r31, 0x00	; 0
    1e40:	80 81       	ld	r24, Z
    1e42:	98 2f       	mov	r25, r24
    1e44:	90 7f       	andi	r25, 0xF0	; 240
    1e46:	80 91 71 01 	lds	r24, 0x0171
    1e4a:	8f 70       	andi	r24, 0x0F	; 15
    1e4c:	89 2b       	or	r24, r25
    1e4e:	8c 93       	st	X, r24
			_delay_us(delay);
    1e50:	80 91 68 01 	lds	r24, 0x0168
    1e54:	90 91 69 01 	lds	r25, 0x0169
    1e58:	aa 27       	eor	r26, r26
    1e5a:	97 fd       	sbrc	r25, 7
    1e5c:	a0 95       	com	r26
    1e5e:	ba 2f       	mov	r27, r26
    1e60:	bc 01       	movw	r22, r24
    1e62:	cd 01       	movw	r24, r26
    1e64:	0e 94 55 04 	call	0x8aa	; 0x8aa <__floatsisf>
    1e68:	dc 01       	movw	r26, r24
    1e6a:	cb 01       	movw	r24, r22
    1e6c:	8d a7       	std	Y+45, r24	; 0x2d
    1e6e:	9e a7       	std	Y+46, r25	; 0x2e
    1e70:	af a7       	std	Y+47, r26	; 0x2f
    1e72:	b8 ab       	std	Y+48, r27	; 0x30
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    1e74:	6d a5       	ldd	r22, Y+45	; 0x2d
    1e76:	7e a5       	ldd	r23, Y+46	; 0x2e
    1e78:	8f a5       	ldd	r24, Y+47	; 0x2f
    1e7a:	98 a9       	ldd	r25, Y+48	; 0x30
    1e7c:	2b ea       	ldi	r18, 0xAB	; 171
    1e7e:	3a ea       	ldi	r19, 0xAA	; 170
    1e80:	4a ea       	ldi	r20, 0xAA	; 170
    1e82:	50 e4       	ldi	r21, 0x40	; 64
    1e84:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e88:	dc 01       	movw	r26, r24
    1e8a:	cb 01       	movw	r24, r22
    1e8c:	89 a7       	std	Y+41, r24	; 0x29
    1e8e:	9a a7       	std	Y+42, r25	; 0x2a
    1e90:	ab a7       	std	Y+43, r26	; 0x2b
    1e92:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
    1e94:	69 a5       	ldd	r22, Y+41	; 0x29
    1e96:	7a a5       	ldd	r23, Y+42	; 0x2a
    1e98:	8b a5       	ldd	r24, Y+43	; 0x2b
    1e9a:	9c a5       	ldd	r25, Y+44	; 0x2c
    1e9c:	20 e0       	ldi	r18, 0x00	; 0
    1e9e:	30 e0       	ldi	r19, 0x00	; 0
    1ea0:	40 e8       	ldi	r20, 0x80	; 128
    1ea2:	5f e3       	ldi	r21, 0x3F	; 63
    1ea4:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1ea8:	88 23       	and	r24, r24
    1eaa:	1c f4       	brge	.+6      	; 0x1eb2 <RESET_DIPLAY+0xb26>
		__ticks = 1;
    1eac:	81 e0       	ldi	r24, 0x01	; 1
    1eae:	88 a7       	std	Y+40, r24	; 0x28
    1eb0:	91 c0       	rjmp	.+290    	; 0x1fd4 <RESET_DIPLAY+0xc48>
	else if (__tmp > 255)
    1eb2:	69 a5       	ldd	r22, Y+41	; 0x29
    1eb4:	7a a5       	ldd	r23, Y+42	; 0x2a
    1eb6:	8b a5       	ldd	r24, Y+43	; 0x2b
    1eb8:	9c a5       	ldd	r25, Y+44	; 0x2c
    1eba:	20 e0       	ldi	r18, 0x00	; 0
    1ebc:	30 e0       	ldi	r19, 0x00	; 0
    1ebe:	4f e7       	ldi	r20, 0x7F	; 127
    1ec0:	53 e4       	ldi	r21, 0x43	; 67
    1ec2:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1ec6:	18 16       	cp	r1, r24
    1ec8:	0c f0       	brlt	.+2      	; 0x1ecc <RESET_DIPLAY+0xb40>
    1eca:	7b c0       	rjmp	.+246    	; 0x1fc2 <RESET_DIPLAY+0xc36>
	{
		_delay_ms(__us / 1000.0);
    1ecc:	6d a5       	ldd	r22, Y+45	; 0x2d
    1ece:	7e a5       	ldd	r23, Y+46	; 0x2e
    1ed0:	8f a5       	ldd	r24, Y+47	; 0x2f
    1ed2:	98 a9       	ldd	r25, Y+48	; 0x30
    1ed4:	20 e0       	ldi	r18, 0x00	; 0
    1ed6:	30 e0       	ldi	r19, 0x00	; 0
    1ed8:	4a e7       	ldi	r20, 0x7A	; 122
    1eda:	54 e4       	ldi	r21, 0x44	; 68
    1edc:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1ee0:	dc 01       	movw	r26, r24
    1ee2:	cb 01       	movw	r24, r22
    1ee4:	8c a3       	std	Y+36, r24	; 0x24
    1ee6:	9d a3       	std	Y+37, r25	; 0x25
    1ee8:	ae a3       	std	Y+38, r26	; 0x26
    1eea:	bf a3       	std	Y+39, r27	; 0x27
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1eec:	6c a1       	ldd	r22, Y+36	; 0x24
    1eee:	7d a1       	ldd	r23, Y+37	; 0x25
    1ef0:	8e a1       	ldd	r24, Y+38	; 0x26
    1ef2:	9f a1       	ldd	r25, Y+39	; 0x27
    1ef4:	20 e0       	ldi	r18, 0x00	; 0
    1ef6:	30 e0       	ldi	r19, 0x00	; 0
    1ef8:	4a e7       	ldi	r20, 0x7A	; 122
    1efa:	55 e4       	ldi	r21, 0x45	; 69
    1efc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f00:	dc 01       	movw	r26, r24
    1f02:	cb 01       	movw	r24, r22
    1f04:	88 a3       	std	Y+32, r24	; 0x20
    1f06:	99 a3       	std	Y+33, r25	; 0x21
    1f08:	aa a3       	std	Y+34, r26	; 0x22
    1f0a:	bb a3       	std	Y+35, r27	; 0x23
	if (__tmp < 1.0)
    1f0c:	68 a1       	ldd	r22, Y+32	; 0x20
    1f0e:	79 a1       	ldd	r23, Y+33	; 0x21
    1f10:	8a a1       	ldd	r24, Y+34	; 0x22
    1f12:	9b a1       	ldd	r25, Y+35	; 0x23
    1f14:	20 e0       	ldi	r18, 0x00	; 0
    1f16:	30 e0       	ldi	r19, 0x00	; 0
    1f18:	40 e8       	ldi	r20, 0x80	; 128
    1f1a:	5f e3       	ldi	r21, 0x3F	; 63
    1f1c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1f20:	88 23       	and	r24, r24
    1f22:	2c f4       	brge	.+10     	; 0x1f2e <RESET_DIPLAY+0xba2>
		__ticks = 1;
    1f24:	81 e0       	ldi	r24, 0x01	; 1
    1f26:	90 e0       	ldi	r25, 0x00	; 0
    1f28:	9f 8f       	std	Y+31, r25	; 0x1f
    1f2a:	8e 8f       	std	Y+30, r24	; 0x1e
    1f2c:	3f c0       	rjmp	.+126    	; 0x1fac <RESET_DIPLAY+0xc20>
	else if (__tmp > 65535)
    1f2e:	68 a1       	ldd	r22, Y+32	; 0x20
    1f30:	79 a1       	ldd	r23, Y+33	; 0x21
    1f32:	8a a1       	ldd	r24, Y+34	; 0x22
    1f34:	9b a1       	ldd	r25, Y+35	; 0x23
    1f36:	20 e0       	ldi	r18, 0x00	; 0
    1f38:	3f ef       	ldi	r19, 0xFF	; 255
    1f3a:	4f e7       	ldi	r20, 0x7F	; 127
    1f3c:	57 e4       	ldi	r21, 0x47	; 71
    1f3e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1f42:	18 16       	cp	r1, r24
    1f44:	4c f5       	brge	.+82     	; 0x1f98 <RESET_DIPLAY+0xc0c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f46:	6c a1       	ldd	r22, Y+36	; 0x24
    1f48:	7d a1       	ldd	r23, Y+37	; 0x25
    1f4a:	8e a1       	ldd	r24, Y+38	; 0x26
    1f4c:	9f a1       	ldd	r25, Y+39	; 0x27
    1f4e:	20 e0       	ldi	r18, 0x00	; 0
    1f50:	30 e0       	ldi	r19, 0x00	; 0
    1f52:	40 e2       	ldi	r20, 0x20	; 32
    1f54:	51 e4       	ldi	r21, 0x41	; 65
    1f56:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f5a:	dc 01       	movw	r26, r24
    1f5c:	cb 01       	movw	r24, r22
    1f5e:	bc 01       	movw	r22, r24
    1f60:	cd 01       	movw	r24, r26
    1f62:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f66:	dc 01       	movw	r26, r24
    1f68:	cb 01       	movw	r24, r22
    1f6a:	9f 8f       	std	Y+31, r25	; 0x1f
    1f6c:	8e 8f       	std	Y+30, r24	; 0x1e
    1f6e:	0f c0       	rjmp	.+30     	; 0x1f8e <RESET_DIPLAY+0xc02>
    1f70:	80 e9       	ldi	r24, 0x90	; 144
    1f72:	91 e0       	ldi	r25, 0x01	; 1
    1f74:	9d 8f       	std	Y+29, r25	; 0x1d
    1f76:	8c 8f       	std	Y+28, r24	; 0x1c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1f78:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1f7a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1f7c:	01 97       	sbiw	r24, 0x01	; 1
    1f7e:	f1 f7       	brne	.-4      	; 0x1f7c <RESET_DIPLAY+0xbf0>
    1f80:	9d 8f       	std	Y+29, r25	; 0x1d
    1f82:	8c 8f       	std	Y+28, r24	; 0x1c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f84:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1f86:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1f88:	01 97       	sbiw	r24, 0x01	; 1
    1f8a:	9f 8f       	std	Y+31, r25	; 0x1f
    1f8c:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f8e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1f90:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1f92:	00 97       	sbiw	r24, 0x00	; 0
    1f94:	69 f7       	brne	.-38     	; 0x1f70 <RESET_DIPLAY+0xbe4>
    1f96:	24 c0       	rjmp	.+72     	; 0x1fe0 <RESET_DIPLAY+0xc54>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f98:	68 a1       	ldd	r22, Y+32	; 0x20
    1f9a:	79 a1       	ldd	r23, Y+33	; 0x21
    1f9c:	8a a1       	ldd	r24, Y+34	; 0x22
    1f9e:	9b a1       	ldd	r25, Y+35	; 0x23
    1fa0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fa4:	dc 01       	movw	r26, r24
    1fa6:	cb 01       	movw	r24, r22
    1fa8:	9f 8f       	std	Y+31, r25	; 0x1f
    1faa:	8e 8f       	std	Y+30, r24	; 0x1e
    1fac:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1fae:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1fb0:	9b 8f       	std	Y+27, r25	; 0x1b
    1fb2:	8a 8f       	std	Y+26, r24	; 0x1a
    1fb4:	8a 8d       	ldd	r24, Y+26	; 0x1a
    1fb6:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1fb8:	01 97       	sbiw	r24, 0x01	; 1
    1fba:	f1 f7       	brne	.-4      	; 0x1fb8 <RESET_DIPLAY+0xc2c>
    1fbc:	9b 8f       	std	Y+27, r25	; 0x1b
    1fbe:	8a 8f       	std	Y+26, r24	; 0x1a
    1fc0:	0f c0       	rjmp	.+30     	; 0x1fe0 <RESET_DIPLAY+0xc54>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1fc2:	69 a5       	ldd	r22, Y+41	; 0x29
    1fc4:	7a a5       	ldd	r23, Y+42	; 0x2a
    1fc6:	8b a5       	ldd	r24, Y+43	; 0x2b
    1fc8:	9c a5       	ldd	r25, Y+44	; 0x2c
    1fca:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fce:	dc 01       	movw	r26, r24
    1fd0:	cb 01       	movw	r24, r22
    1fd2:	88 a7       	std	Y+40, r24	; 0x28
    1fd4:	88 a5       	ldd	r24, Y+40	; 0x28
    1fd6:	89 8f       	std	Y+25, r24	; 0x19
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1fd8:	89 8d       	ldd	r24, Y+25	; 0x19
    1fda:	8a 95       	dec	r24
    1fdc:	f1 f7       	brne	.-4      	; 0x1fda <RESET_DIPLAY+0xc4e>
    1fde:	89 8f       	std	Y+25, r24	; 0x19
			PORTA &= ~(1 << PA4); // Disable the fifth unit
    1fe0:	ab e3       	ldi	r26, 0x3B	; 59
    1fe2:	b0 e0       	ldi	r27, 0x00	; 0
    1fe4:	eb e3       	ldi	r30, 0x3B	; 59
    1fe6:	f0 e0       	ldi	r31, 0x00	; 0
    1fe8:	80 81       	ld	r24, Z
    1fea:	8f 7e       	andi	r24, 0xEF	; 239
    1fec:	8c 93       	st	X, r24
    1fee:	e2 c0       	rjmp	.+452    	; 0x21b4 <RESET_DIPLAY+0xe28>
		break;
		case 6:
			//hours second unit(pin HR2)
			PORTA|=(1<<PA5);//use the sixth  unit
    1ff0:	ab e3       	ldi	r26, 0x3B	; 59
    1ff2:	b0 e0       	ldi	r27, 0x00	; 0
    1ff4:	eb e3       	ldi	r30, 0x3B	; 59
    1ff6:	f0 e0       	ldi	r31, 0x00	; 0
    1ff8:	80 81       	ld	r24, Z
    1ffa:	80 62       	ori	r24, 0x20	; 32
    1ffc:	8c 93       	st	X, r24
			PORTC=(PORTC & 0xF0)|(hr_second_unit & 0x0F);
    1ffe:	a5 e3       	ldi	r26, 0x35	; 53
    2000:	b0 e0       	ldi	r27, 0x00	; 0
    2002:	e5 e3       	ldi	r30, 0x35	; 53
    2004:	f0 e0       	ldi	r31, 0x00	; 0
    2006:	80 81       	ld	r24, Z
    2008:	98 2f       	mov	r25, r24
    200a:	90 7f       	andi	r25, 0xF0	; 240
    200c:	80 91 72 01 	lds	r24, 0x0172
    2010:	8f 70       	andi	r24, 0x0F	; 15
    2012:	89 2b       	or	r24, r25
    2014:	8c 93       	st	X, r24
			_delay_us(delay);
    2016:	80 91 68 01 	lds	r24, 0x0168
    201a:	90 91 69 01 	lds	r25, 0x0169
    201e:	aa 27       	eor	r26, r26
    2020:	97 fd       	sbrc	r25, 7
    2022:	a0 95       	com	r26
    2024:	ba 2f       	mov	r27, r26
    2026:	bc 01       	movw	r22, r24
    2028:	cd 01       	movw	r24, r26
    202a:	0e 94 55 04 	call	0x8aa	; 0x8aa <__floatsisf>
    202e:	dc 01       	movw	r26, r24
    2030:	cb 01       	movw	r24, r22
    2032:	8d 8b       	std	Y+21, r24	; 0x15
    2034:	9e 8b       	std	Y+22, r25	; 0x16
    2036:	af 8b       	std	Y+23, r26	; 0x17
    2038:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    203a:	6d 89       	ldd	r22, Y+21	; 0x15
    203c:	7e 89       	ldd	r23, Y+22	; 0x16
    203e:	8f 89       	ldd	r24, Y+23	; 0x17
    2040:	98 8d       	ldd	r25, Y+24	; 0x18
    2042:	2b ea       	ldi	r18, 0xAB	; 171
    2044:	3a ea       	ldi	r19, 0xAA	; 170
    2046:	4a ea       	ldi	r20, 0xAA	; 170
    2048:	50 e4       	ldi	r21, 0x40	; 64
    204a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    204e:	dc 01       	movw	r26, r24
    2050:	cb 01       	movw	r24, r22
    2052:	89 8b       	std	Y+17, r24	; 0x11
    2054:	9a 8b       	std	Y+18, r25	; 0x12
    2056:	ab 8b       	std	Y+19, r26	; 0x13
    2058:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    205a:	69 89       	ldd	r22, Y+17	; 0x11
    205c:	7a 89       	ldd	r23, Y+18	; 0x12
    205e:	8b 89       	ldd	r24, Y+19	; 0x13
    2060:	9c 89       	ldd	r25, Y+20	; 0x14
    2062:	20 e0       	ldi	r18, 0x00	; 0
    2064:	30 e0       	ldi	r19, 0x00	; 0
    2066:	40 e8       	ldi	r20, 0x80	; 128
    2068:	5f e3       	ldi	r21, 0x3F	; 63
    206a:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    206e:	88 23       	and	r24, r24
    2070:	1c f4       	brge	.+6      	; 0x2078 <RESET_DIPLAY+0xcec>
		__ticks = 1;
    2072:	81 e0       	ldi	r24, 0x01	; 1
    2074:	88 8b       	std	Y+16, r24	; 0x10
    2076:	91 c0       	rjmp	.+290    	; 0x219a <RESET_DIPLAY+0xe0e>
	else if (__tmp > 255)
    2078:	69 89       	ldd	r22, Y+17	; 0x11
    207a:	7a 89       	ldd	r23, Y+18	; 0x12
    207c:	8b 89       	ldd	r24, Y+19	; 0x13
    207e:	9c 89       	ldd	r25, Y+20	; 0x14
    2080:	20 e0       	ldi	r18, 0x00	; 0
    2082:	30 e0       	ldi	r19, 0x00	; 0
    2084:	4f e7       	ldi	r20, 0x7F	; 127
    2086:	53 e4       	ldi	r21, 0x43	; 67
    2088:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    208c:	18 16       	cp	r1, r24
    208e:	0c f0       	brlt	.+2      	; 0x2092 <RESET_DIPLAY+0xd06>
    2090:	7b c0       	rjmp	.+246    	; 0x2188 <RESET_DIPLAY+0xdfc>
	{
		_delay_ms(__us / 1000.0);
    2092:	6d 89       	ldd	r22, Y+21	; 0x15
    2094:	7e 89       	ldd	r23, Y+22	; 0x16
    2096:	8f 89       	ldd	r24, Y+23	; 0x17
    2098:	98 8d       	ldd	r25, Y+24	; 0x18
    209a:	20 e0       	ldi	r18, 0x00	; 0
    209c:	30 e0       	ldi	r19, 0x00	; 0
    209e:	4a e7       	ldi	r20, 0x7A	; 122
    20a0:	54 e4       	ldi	r21, 0x44	; 68
    20a2:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    20a6:	dc 01       	movw	r26, r24
    20a8:	cb 01       	movw	r24, r22
    20aa:	8c 87       	std	Y+12, r24	; 0x0c
    20ac:	9d 87       	std	Y+13, r25	; 0x0d
    20ae:	ae 87       	std	Y+14, r26	; 0x0e
    20b0:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20b2:	6c 85       	ldd	r22, Y+12	; 0x0c
    20b4:	7d 85       	ldd	r23, Y+13	; 0x0d
    20b6:	8e 85       	ldd	r24, Y+14	; 0x0e
    20b8:	9f 85       	ldd	r25, Y+15	; 0x0f
    20ba:	20 e0       	ldi	r18, 0x00	; 0
    20bc:	30 e0       	ldi	r19, 0x00	; 0
    20be:	4a e7       	ldi	r20, 0x7A	; 122
    20c0:	55 e4       	ldi	r21, 0x45	; 69
    20c2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    20c6:	dc 01       	movw	r26, r24
    20c8:	cb 01       	movw	r24, r22
    20ca:	88 87       	std	Y+8, r24	; 0x08
    20cc:	99 87       	std	Y+9, r25	; 0x09
    20ce:	aa 87       	std	Y+10, r26	; 0x0a
    20d0:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    20d2:	68 85       	ldd	r22, Y+8	; 0x08
    20d4:	79 85       	ldd	r23, Y+9	; 0x09
    20d6:	8a 85       	ldd	r24, Y+10	; 0x0a
    20d8:	9b 85       	ldd	r25, Y+11	; 0x0b
    20da:	20 e0       	ldi	r18, 0x00	; 0
    20dc:	30 e0       	ldi	r19, 0x00	; 0
    20de:	40 e8       	ldi	r20, 0x80	; 128
    20e0:	5f e3       	ldi	r21, 0x3F	; 63
    20e2:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    20e6:	88 23       	and	r24, r24
    20e8:	2c f4       	brge	.+10     	; 0x20f4 <RESET_DIPLAY+0xd68>
		__ticks = 1;
    20ea:	81 e0       	ldi	r24, 0x01	; 1
    20ec:	90 e0       	ldi	r25, 0x00	; 0
    20ee:	9f 83       	std	Y+7, r25	; 0x07
    20f0:	8e 83       	std	Y+6, r24	; 0x06
    20f2:	3f c0       	rjmp	.+126    	; 0x2172 <RESET_DIPLAY+0xde6>
	else if (__tmp > 65535)
    20f4:	68 85       	ldd	r22, Y+8	; 0x08
    20f6:	79 85       	ldd	r23, Y+9	; 0x09
    20f8:	8a 85       	ldd	r24, Y+10	; 0x0a
    20fa:	9b 85       	ldd	r25, Y+11	; 0x0b
    20fc:	20 e0       	ldi	r18, 0x00	; 0
    20fe:	3f ef       	ldi	r19, 0xFF	; 255
    2100:	4f e7       	ldi	r20, 0x7F	; 127
    2102:	57 e4       	ldi	r21, 0x47	; 71
    2104:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2108:	18 16       	cp	r1, r24
    210a:	4c f5       	brge	.+82     	; 0x215e <RESET_DIPLAY+0xdd2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    210c:	6c 85       	ldd	r22, Y+12	; 0x0c
    210e:	7d 85       	ldd	r23, Y+13	; 0x0d
    2110:	8e 85       	ldd	r24, Y+14	; 0x0e
    2112:	9f 85       	ldd	r25, Y+15	; 0x0f
    2114:	20 e0       	ldi	r18, 0x00	; 0
    2116:	30 e0       	ldi	r19, 0x00	; 0
    2118:	40 e2       	ldi	r20, 0x20	; 32
    211a:	51 e4       	ldi	r21, 0x41	; 65
    211c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2120:	dc 01       	movw	r26, r24
    2122:	cb 01       	movw	r24, r22
    2124:	bc 01       	movw	r22, r24
    2126:	cd 01       	movw	r24, r26
    2128:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    212c:	dc 01       	movw	r26, r24
    212e:	cb 01       	movw	r24, r22
    2130:	9f 83       	std	Y+7, r25	; 0x07
    2132:	8e 83       	std	Y+6, r24	; 0x06
    2134:	0f c0       	rjmp	.+30     	; 0x2154 <RESET_DIPLAY+0xdc8>
    2136:	80 e9       	ldi	r24, 0x90	; 144
    2138:	91 e0       	ldi	r25, 0x01	; 1
    213a:	9d 83       	std	Y+5, r25	; 0x05
    213c:	8c 83       	std	Y+4, r24	; 0x04
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    213e:	8c 81       	ldd	r24, Y+4	; 0x04
    2140:	9d 81       	ldd	r25, Y+5	; 0x05
    2142:	01 97       	sbiw	r24, 0x01	; 1
    2144:	f1 f7       	brne	.-4      	; 0x2142 <RESET_DIPLAY+0xdb6>
    2146:	9d 83       	std	Y+5, r25	; 0x05
    2148:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    214a:	8e 81       	ldd	r24, Y+6	; 0x06
    214c:	9f 81       	ldd	r25, Y+7	; 0x07
    214e:	01 97       	sbiw	r24, 0x01	; 1
    2150:	9f 83       	std	Y+7, r25	; 0x07
    2152:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2154:	8e 81       	ldd	r24, Y+6	; 0x06
    2156:	9f 81       	ldd	r25, Y+7	; 0x07
    2158:	00 97       	sbiw	r24, 0x00	; 0
    215a:	69 f7       	brne	.-38     	; 0x2136 <RESET_DIPLAY+0xdaa>
    215c:	24 c0       	rjmp	.+72     	; 0x21a6 <RESET_DIPLAY+0xe1a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    215e:	68 85       	ldd	r22, Y+8	; 0x08
    2160:	79 85       	ldd	r23, Y+9	; 0x09
    2162:	8a 85       	ldd	r24, Y+10	; 0x0a
    2164:	9b 85       	ldd	r25, Y+11	; 0x0b
    2166:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    216a:	dc 01       	movw	r26, r24
    216c:	cb 01       	movw	r24, r22
    216e:	9f 83       	std	Y+7, r25	; 0x07
    2170:	8e 83       	std	Y+6, r24	; 0x06
    2172:	8e 81       	ldd	r24, Y+6	; 0x06
    2174:	9f 81       	ldd	r25, Y+7	; 0x07
    2176:	9b 83       	std	Y+3, r25	; 0x03
    2178:	8a 83       	std	Y+2, r24	; 0x02
    217a:	8a 81       	ldd	r24, Y+2	; 0x02
    217c:	9b 81       	ldd	r25, Y+3	; 0x03
    217e:	01 97       	sbiw	r24, 0x01	; 1
    2180:	f1 f7       	brne	.-4      	; 0x217e <RESET_DIPLAY+0xdf2>
    2182:	9b 83       	std	Y+3, r25	; 0x03
    2184:	8a 83       	std	Y+2, r24	; 0x02
    2186:	0f c0       	rjmp	.+30     	; 0x21a6 <RESET_DIPLAY+0xe1a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    2188:	69 89       	ldd	r22, Y+17	; 0x11
    218a:	7a 89       	ldd	r23, Y+18	; 0x12
    218c:	8b 89       	ldd	r24, Y+19	; 0x13
    218e:	9c 89       	ldd	r25, Y+20	; 0x14
    2190:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2194:	dc 01       	movw	r26, r24
    2196:	cb 01       	movw	r24, r22
    2198:	88 8b       	std	Y+16, r24	; 0x10
    219a:	88 89       	ldd	r24, Y+16	; 0x10
    219c:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    219e:	89 81       	ldd	r24, Y+1	; 0x01
    21a0:	8a 95       	dec	r24
    21a2:	f1 f7       	brne	.-4      	; 0x21a0 <RESET_DIPLAY+0xe14>
    21a4:	89 83       	std	Y+1, r24	; 0x01
			PORTA &= ~(1 << PA5); // Disable the sixth unit
    21a6:	ab e3       	ldi	r26, 0x3B	; 59
    21a8:	b0 e0       	ldi	r27, 0x00	; 0
    21aa:	eb e3       	ldi	r30, 0x3B	; 59
    21ac:	f0 e0       	ldi	r31, 0x00	; 0
    21ae:	80 81       	ld	r24, Z
    21b0:	8f 7d       	andi	r24, 0xDF	; 223
    21b2:	8c 93       	st	X, r24
		break;

	}


}
    21b4:	cc 56       	subi	r28, 0x6C	; 108
    21b6:	df 4f       	sbci	r29, 0xFF	; 255
    21b8:	0f b6       	in	r0, 0x3f	; 63
    21ba:	f8 94       	cli
    21bc:	de bf       	out	0x3e, r29	; 62
    21be:	0f be       	out	0x3f, r0	; 63
    21c0:	cd bf       	out	0x3d, r28	; 61
    21c2:	cf 91       	pop	r28
    21c4:	df 91       	pop	r29
    21c6:	1f 91       	pop	r17
    21c8:	0f 91       	pop	r16
    21ca:	08 95       	ret

000021cc <main>:

int main(void){
    21cc:	df 93       	push	r29
    21ce:	cf 93       	push	r28
    21d0:	cd b7       	in	r28, 0x3d	; 61
    21d2:	de b7       	in	r29, 0x3e	; 62
	TCNT1 = 0;		/* Set timer1 initial count to zero */
    21d4:	ec e4       	ldi	r30, 0x4C	; 76
    21d6:	f0 e0       	ldi	r31, 0x00	; 0
    21d8:	11 82       	std	Z+1, r1	; 0x01
    21da:	10 82       	st	Z, r1
	//ensures that the timer is properly configured before any interrupts occur.
	SREG |= (1<<7);//ENABLE GLOBAL INTEREPT IN I-BIT
    21dc:	af e5       	ldi	r26, 0x5F	; 95
    21de:	b0 e0       	ldi	r27, 0x00	; 0
    21e0:	ef e5       	ldi	r30, 0x5F	; 95
    21e2:	f0 e0       	ldi	r31, 0x00	; 0
    21e4:	80 81       	ld	r24, Z
    21e6:	80 68       	ori	r24, 0x80	; 128
    21e8:	8c 93       	st	X, r24
	/**setting the pins*/
//PORTA each pin PA0->PA5 connected to transistor
	//SET PA0->PA5 AS OUTPUT PINS
	DDRA |= 0x3F; //00111111
    21ea:	aa e3       	ldi	r26, 0x3A	; 58
    21ec:	b0 e0       	ldi	r27, 0x00	; 0
    21ee:	ea e3       	ldi	r30, 0x3A	; 58
    21f0:	f0 e0       	ldi	r31, 0x00	; 0
    21f2:	80 81       	ld	r24, Z
    21f4:	8f 63       	ori	r24, 0x3F	; 63
    21f6:	8c 93       	st	X, r24
	//SET PA0->PA5 TO ZERO AS initial value
	PORTA &=~0x3F;//00111111
    21f8:	ab e3       	ldi	r26, 0x3B	; 59
    21fa:	b0 e0       	ldi	r27, 0x00	; 0
    21fc:	eb e3       	ldi	r30, 0x3B	; 59
    21fe:	f0 e0       	ldi	r31, 0x00	; 0
    2200:	80 81       	ld	r24, Z
    2202:	80 7c       	andi	r24, 0xC0	; 192
    2204:	8c 93       	st	X, r24

//PORTC connected to the decoder
	//SET PC0->PC3 AS OUTPUT PINS
	DDRC |= 0xF; //1111
    2206:	a4 e3       	ldi	r26, 0x34	; 52
    2208:	b0 e0       	ldi	r27, 0x00	; 0
    220a:	e4 e3       	ldi	r30, 0x34	; 52
    220c:	f0 e0       	ldi	r31, 0x00	; 0
    220e:	80 81       	ld	r24, Z
    2210:	8f 60       	ori	r24, 0x0F	; 15
    2212:	8c 93       	st	X, r24
	PORTC &= ~0x0F; // 11110000
    2214:	a5 e3       	ldi	r26, 0x35	; 53
    2216:	b0 e0       	ldi	r27, 0x00	; 0
    2218:	e5 e3       	ldi	r30, 0x35	; 53
    221a:	f0 e0       	ldi	r31, 0x00	; 0
    221c:	80 81       	ld	r24, Z
    221e:	80 7f       	andi	r24, 0xF0	; 240
    2220:	8c 93       	st	X, r24


	/**setting interrupt buttons*/
//PD2/INT0(reset button)
	DDRD &=~(1<<PD2); //SET IT AS INPUT
    2222:	a1 e3       	ldi	r26, 0x31	; 49
    2224:	b0 e0       	ldi	r27, 0x00	; 0
    2226:	e1 e3       	ldi	r30, 0x31	; 49
    2228:	f0 e0       	ldi	r31, 0x00	; 0
    222a:	80 81       	ld	r24, Z
    222c:	8b 7f       	andi	r24, 0xFB	; 251
    222e:	8c 93       	st	X, r24
	PORTD|=(1<<PD2);//WHEN PRESSED(1) INTERNAL PULL UP IS ACTIVTED
    2230:	a2 e3       	ldi	r26, 0x32	; 50
    2232:	b0 e0       	ldi	r27, 0x00	; 0
    2234:	e2 e3       	ldi	r30, 0x32	; 50
    2236:	f0 e0       	ldi	r31, 0x00	; 0
    2238:	80 81       	ld	r24, Z
    223a:	84 60       	ori	r24, 0x04	; 4
    223c:	8c 93       	st	X, r24
	INT0_Init();
    223e:	0e 94 ae 07 	call	0xf5c	; 0xf5c <INT0_Init>

//PD3/IN1(pause button)
	DDRD &=~(1<<PD3); //SET IT AS INPUT
    2242:	a1 e3       	ldi	r26, 0x31	; 49
    2244:	b0 e0       	ldi	r27, 0x00	; 0
    2246:	e1 e3       	ldi	r30, 0x31	; 49
    2248:	f0 e0       	ldi	r31, 0x00	; 0
    224a:	80 81       	ld	r24, Z
    224c:	87 7f       	andi	r24, 0xF7	; 247
    224e:	8c 93       	st	X, r24
	INT1_Init();
    2250:	0e 94 66 08 	call	0x10cc	; 0x10cc <INT1_Init>

//PB2/INT2(resume button)
	DDRB &=~(1<<PB2); //SET IT AS INPUT
    2254:	a7 e3       	ldi	r26, 0x37	; 55
    2256:	b0 e0       	ldi	r27, 0x00	; 0
    2258:	e7 e3       	ldi	r30, 0x37	; 55
    225a:	f0 e0       	ldi	r31, 0x00	; 0
    225c:	80 81       	ld	r24, Z
    225e:	8b 7f       	andi	r24, 0xFB	; 251
    2260:	8c 93       	st	X, r24
	PORTB|=(1<<PB2);//WHEN PRESSED(1) INTERNAL PULL UP IS ACTIVTED
    2262:	a8 e3       	ldi	r26, 0x38	; 56
    2264:	b0 e0       	ldi	r27, 0x00	; 0
    2266:	e8 e3       	ldi	r30, 0x38	; 56
    2268:	f0 e0       	ldi	r31, 0x00	; 0
    226a:	80 81       	ld	r24, Z
    226c:	84 60       	ori	r24, 0x04	; 4
    226e:	8c 93       	st	X, r24
	INT2_Init();
    2270:	0e 94 24 09 	call	0x1248	; 0x1248 <INT2_Init>

/**setting the timer***/
	timer1_ctc();//START THE TIMER
    2274:	0e 94 a3 09 	call	0x1346	; 0x1346 <timer1_ctc>
while(1)
{
	/**7-Segment Display**/
	PORTC &= 0xF0; // Reset the first 4 bits in PORTC
    2278:	a5 e3       	ldi	r26, 0x35	; 53
    227a:	b0 e0       	ldi	r27, 0x00	; 0
    227c:	e5 e3       	ldi	r30, 0x35	; 53
    227e:	f0 e0       	ldi	r31, 0x00	; 0
    2280:	80 81       	ld	r24, Z
    2282:	80 7f       	andi	r24, 0xF0	; 240
    2284:	8c 93       	st	X, r24

//seconds
RESET_DIPLAY(1);
    2286:	81 e0       	ldi	r24, 0x01	; 1
    2288:	90 e0       	ldi	r25, 0x00	; 0
    228a:	0e 94 c6 09 	call	0x138c	; 0x138c <RESET_DIPLAY>
RESET_DIPLAY(2);
    228e:	82 e0       	ldi	r24, 0x02	; 2
    2290:	90 e0       	ldi	r25, 0x00	; 0
    2292:	0e 94 c6 09 	call	0x138c	; 0x138c <RESET_DIPLAY>
		//minutes
		RESET_DIPLAY(3);
    2296:	83 e0       	ldi	r24, 0x03	; 3
    2298:	90 e0       	ldi	r25, 0x00	; 0
    229a:	0e 94 c6 09 	call	0x138c	; 0x138c <RESET_DIPLAY>
		RESET_DIPLAY(4);
    229e:	84 e0       	ldi	r24, 0x04	; 4
    22a0:	90 e0       	ldi	r25, 0x00	; 0
    22a2:	0e 94 c6 09 	call	0x138c	; 0x138c <RESET_DIPLAY>
					//hours
					RESET_DIPLAY(5);
    22a6:	85 e0       	ldi	r24, 0x05	; 5
    22a8:	90 e0       	ldi	r25, 0x00	; 0
    22aa:	0e 94 c6 09 	call	0x138c	; 0x138c <RESET_DIPLAY>
					RESET_DIPLAY(6);
    22ae:	86 e0       	ldi	r24, 0x06	; 6
    22b0:	90 e0       	ldi	r25, 0x00	; 0
    22b2:	0e 94 c6 09 	call	0x138c	; 0x138c <RESET_DIPLAY>
    22b6:	e0 cf       	rjmp	.-64     	; 0x2278 <main+0xac>

000022b8 <__udivmodqi4>:
    22b8:	99 1b       	sub	r25, r25
    22ba:	79 e0       	ldi	r23, 0x09	; 9
    22bc:	04 c0       	rjmp	.+8      	; 0x22c6 <__udivmodqi4_ep>

000022be <__udivmodqi4_loop>:
    22be:	99 1f       	adc	r25, r25
    22c0:	96 17       	cp	r25, r22
    22c2:	08 f0       	brcs	.+2      	; 0x22c6 <__udivmodqi4_ep>
    22c4:	96 1b       	sub	r25, r22

000022c6 <__udivmodqi4_ep>:
    22c6:	88 1f       	adc	r24, r24
    22c8:	7a 95       	dec	r23
    22ca:	c9 f7       	brne	.-14     	; 0x22be <__udivmodqi4_loop>
    22cc:	80 95       	com	r24
    22ce:	08 95       	ret

000022d0 <__prologue_saves__>:
    22d0:	2f 92       	push	r2
    22d2:	3f 92       	push	r3
    22d4:	4f 92       	push	r4
    22d6:	5f 92       	push	r5
    22d8:	6f 92       	push	r6
    22da:	7f 92       	push	r7
    22dc:	8f 92       	push	r8
    22de:	9f 92       	push	r9
    22e0:	af 92       	push	r10
    22e2:	bf 92       	push	r11
    22e4:	cf 92       	push	r12
    22e6:	df 92       	push	r13
    22e8:	ef 92       	push	r14
    22ea:	ff 92       	push	r15
    22ec:	0f 93       	push	r16
    22ee:	1f 93       	push	r17
    22f0:	cf 93       	push	r28
    22f2:	df 93       	push	r29
    22f4:	cd b7       	in	r28, 0x3d	; 61
    22f6:	de b7       	in	r29, 0x3e	; 62
    22f8:	ca 1b       	sub	r28, r26
    22fa:	db 0b       	sbc	r29, r27
    22fc:	0f b6       	in	r0, 0x3f	; 63
    22fe:	f8 94       	cli
    2300:	de bf       	out	0x3e, r29	; 62
    2302:	0f be       	out	0x3f, r0	; 63
    2304:	cd bf       	out	0x3d, r28	; 61
    2306:	09 94       	ijmp

00002308 <__epilogue_restores__>:
    2308:	2a 88       	ldd	r2, Y+18	; 0x12
    230a:	39 88       	ldd	r3, Y+17	; 0x11
    230c:	48 88       	ldd	r4, Y+16	; 0x10
    230e:	5f 84       	ldd	r5, Y+15	; 0x0f
    2310:	6e 84       	ldd	r6, Y+14	; 0x0e
    2312:	7d 84       	ldd	r7, Y+13	; 0x0d
    2314:	8c 84       	ldd	r8, Y+12	; 0x0c
    2316:	9b 84       	ldd	r9, Y+11	; 0x0b
    2318:	aa 84       	ldd	r10, Y+10	; 0x0a
    231a:	b9 84       	ldd	r11, Y+9	; 0x09
    231c:	c8 84       	ldd	r12, Y+8	; 0x08
    231e:	df 80       	ldd	r13, Y+7	; 0x07
    2320:	ee 80       	ldd	r14, Y+6	; 0x06
    2322:	fd 80       	ldd	r15, Y+5	; 0x05
    2324:	0c 81       	ldd	r16, Y+4	; 0x04
    2326:	1b 81       	ldd	r17, Y+3	; 0x03
    2328:	aa 81       	ldd	r26, Y+2	; 0x02
    232a:	b9 81       	ldd	r27, Y+1	; 0x01
    232c:	ce 0f       	add	r28, r30
    232e:	d1 1d       	adc	r29, r1
    2330:	0f b6       	in	r0, 0x3f	; 63
    2332:	f8 94       	cli
    2334:	de bf       	out	0x3e, r29	; 62
    2336:	0f be       	out	0x3f, r0	; 63
    2338:	cd bf       	out	0x3d, r28	; 61
    233a:	ed 01       	movw	r28, r26
    233c:	08 95       	ret

0000233e <_exit>:
    233e:	f8 94       	cli

00002340 <__stop_program>:
    2340:	ff cf       	rjmp	.-2      	; 0x2340 <__stop_program>
